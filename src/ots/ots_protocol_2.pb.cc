// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ots_protocol_2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ots_protocol_2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace aliyun {
namespace cloudservice {
namespace ots2 {

namespace {

const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColumnSchema_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnSchema_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColumnValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Column_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Column_reflection_ = NULL;
const ::google::protobuf::Descriptor* Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Row_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableMeta_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableMeta_reflection_ = NULL;
const ::google::protobuf::Descriptor* Condition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Condition_reflection_ = NULL;
const ::google::protobuf::Descriptor* CapacityUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CapacityUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReservedThroughputDetails_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReservedThroughputDetails_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReservedThroughput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReservedThroughput_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConsumedCapacity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConsumedCapacity_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateTableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateTableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DescribeTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DescribeTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DescribeTableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DescribeTableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteTableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteTableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColumnUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowInBatchGetRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowInBatchGetRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableInBatchGetRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableInBatchGetRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchGetRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchGetRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowInBatchGetRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowInBatchGetRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableInBatchGetRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableInBatchGetRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchGetRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchGetRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutRowInBatchWriteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutRowInBatchWriteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRowInBatchWriteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRowInBatchWriteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteRowInBatchWriteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteRowInBatchWriteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableInBatchWriteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableInBatchWriteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchWriteRowRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchWriteRowRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowInBatchWriteRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowInBatchWriteRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TableInBatchWriteRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TableInBatchWriteRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchWriteRowResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchWriteRowResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRangeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRangeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRangeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRangeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ColumnType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RowExistenceExpectation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OperationType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Direction_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto() {
  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ots_protocol_2.proto");
  GOOGLE_CHECK(file != NULL);
  Error_descriptor_ = file->message_type(0);
  static const int Error_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, message_),
  };
  Error_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Error_descriptor_,
      Error::default_instance_,
      Error_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Error));
  ColumnSchema_descriptor_ = file->message_type(1);
  static const int ColumnSchema_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnSchema, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnSchema, type_),
  };
  ColumnSchema_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ColumnSchema_descriptor_,
      ColumnSchema::default_instance_,
      ColumnSchema_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnSchema, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnSchema, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ColumnSchema));
  ColumnValue_descriptor_ = file->message_type(2);
  static const int ColumnValue_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, v_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, v_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, v_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, v_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, v_binary_),
  };
  ColumnValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ColumnValue_descriptor_,
      ColumnValue::default_instance_,
      ColumnValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ColumnValue));
  Column_descriptor_ = file->message_type(3);
  static const int Column_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Column, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Column, value_),
  };
  Column_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Column_descriptor_,
      Column::default_instance_,
      Column_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Column, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Column, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Column));
  Row_descriptor_ = file->message_type(4);
  static const int Row_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Row, primary_key_columns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Row, attribute_columns_),
  };
  Row_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Row_descriptor_,
      Row::default_instance_,
      Row_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Row, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Row, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Row));
  TableMeta_descriptor_ = file->message_type(5);
  static const int TableMeta_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableMeta, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableMeta, primary_key_),
  };
  TableMeta_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TableMeta_descriptor_,
      TableMeta::default_instance_,
      TableMeta_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableMeta, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableMeta, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TableMeta));
  Condition_descriptor_ = file->message_type(6);
  static const int Condition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, row_existence_),
  };
  Condition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Condition_descriptor_,
      Condition::default_instance_,
      Condition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Condition));
  CapacityUnit_descriptor_ = file->message_type(7);
  static const int CapacityUnit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapacityUnit, read_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapacityUnit, write_),
  };
  CapacityUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CapacityUnit_descriptor_,
      CapacityUnit::default_instance_,
      CapacityUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapacityUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapacityUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CapacityUnit));
  ReservedThroughputDetails_descriptor_ = file->message_type(8);
  static const int ReservedThroughputDetails_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, capacity_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, last_increase_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, last_decrease_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, number_of_decreases_today_),
  };
  ReservedThroughputDetails_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReservedThroughputDetails_descriptor_,
      ReservedThroughputDetails::default_instance_,
      ReservedThroughputDetails_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughputDetails, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReservedThroughputDetails));
  ReservedThroughput_descriptor_ = file->message_type(9);
  static const int ReservedThroughput_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughput, capacity_unit_),
  };
  ReservedThroughput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReservedThroughput_descriptor_,
      ReservedThroughput::default_instance_,
      ReservedThroughput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReservedThroughput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReservedThroughput));
  ConsumedCapacity_descriptor_ = file->message_type(10);
  static const int ConsumedCapacity_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumedCapacity, capacity_unit_),
  };
  ConsumedCapacity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConsumedCapacity_descriptor_,
      ConsumedCapacity::default_instance_,
      ConsumedCapacity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumedCapacity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumedCapacity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConsumedCapacity));
  CreateTableRequest_descriptor_ = file->message_type(11);
  static const int CreateTableRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, table_meta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, reserved_throughput_),
  };
  CreateTableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateTableRequest_descriptor_,
      CreateTableRequest::default_instance_,
      CreateTableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateTableRequest));
  CreateTableResponse_descriptor_ = file->message_type(12);
  static const int CreateTableResponse_offsets_[1] = {
  };
  CreateTableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateTableResponse_descriptor_,
      CreateTableResponse::default_instance_,
      CreateTableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateTableResponse));
  UpdateTableRequest_descriptor_ = file->message_type(13);
  static const int UpdateTableRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableRequest, reserved_throughput_),
  };
  UpdateTableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateTableRequest_descriptor_,
      UpdateTableRequest::default_instance_,
      UpdateTableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateTableRequest));
  UpdateTableResponse_descriptor_ = file->message_type(14);
  static const int UpdateTableResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableResponse, reserved_throughput_details_),
  };
  UpdateTableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateTableResponse_descriptor_,
      UpdateTableResponse::default_instance_,
      UpdateTableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateTableResponse));
  DescribeTableRequest_descriptor_ = file->message_type(15);
  static const int DescribeTableRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableRequest, table_name_),
  };
  DescribeTableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DescribeTableRequest_descriptor_,
      DescribeTableRequest::default_instance_,
      DescribeTableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DescribeTableRequest));
  DescribeTableResponse_descriptor_ = file->message_type(16);
  static const int DescribeTableResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableResponse, table_meta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableResponse, reserved_throughput_details_),
  };
  DescribeTableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DescribeTableResponse_descriptor_,
      DescribeTableResponse::default_instance_,
      DescribeTableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DescribeTableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DescribeTableResponse));
  ListTableRequest_descriptor_ = file->message_type(17);
  static const int ListTableRequest_offsets_[1] = {
  };
  ListTableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListTableRequest_descriptor_,
      ListTableRequest::default_instance_,
      ListTableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListTableRequest));
  ListTableResponse_descriptor_ = file->message_type(18);
  static const int ListTableResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTableResponse, table_names_),
  };
  ListTableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListTableResponse_descriptor_,
      ListTableResponse::default_instance_,
      ListTableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListTableResponse));
  DeleteTableRequest_descriptor_ = file->message_type(19);
  static const int DeleteTableRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableRequest, table_name_),
  };
  DeleteTableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteTableRequest_descriptor_,
      DeleteTableRequest::default_instance_,
      DeleteTableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteTableRequest));
  DeleteTableResponse_descriptor_ = file->message_type(20);
  static const int DeleteTableResponse_offsets_[1] = {
  };
  DeleteTableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteTableResponse_descriptor_,
      DeleteTableResponse::default_instance_,
      DeleteTableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteTableResponse));
  GetRowRequest_descriptor_ = file->message_type(21);
  static const int GetRowRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowRequest, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowRequest, columns_to_get_),
  };
  GetRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRowRequest_descriptor_,
      GetRowRequest::default_instance_,
      GetRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRowRequest));
  GetRowResponse_descriptor_ = file->message_type(22);
  static const int GetRowResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowResponse, consumed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowResponse, row_),
  };
  GetRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRowResponse_descriptor_,
      GetRowResponse::default_instance_,
      GetRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRowResponse));
  ColumnUpdate_descriptor_ = file->message_type(23);
  static const int ColumnUpdate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnUpdate, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnUpdate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnUpdate, value_),
  };
  ColumnUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ColumnUpdate_descriptor_,
      ColumnUpdate::default_instance_,
      ColumnUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ColumnUpdate));
  UpdateRowRequest_descriptor_ = file->message_type(24);
  static const int UpdateRowRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, attribute_columns_),
  };
  UpdateRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRowRequest_descriptor_,
      UpdateRowRequest::default_instance_,
      UpdateRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRowRequest));
  UpdateRowResponse_descriptor_ = file->message_type(25);
  static const int UpdateRowResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowResponse, consumed_),
  };
  UpdateRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRowResponse_descriptor_,
      UpdateRowResponse::default_instance_,
      UpdateRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRowResponse));
  PutRowRequest_descriptor_ = file->message_type(26);
  static const int PutRowRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, attribute_columns_),
  };
  PutRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PutRowRequest_descriptor_,
      PutRowRequest::default_instance_,
      PutRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PutRowRequest));
  PutRowResponse_descriptor_ = file->message_type(27);
  static const int PutRowResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowResponse, consumed_),
  };
  PutRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PutRowResponse_descriptor_,
      PutRowResponse::default_instance_,
      PutRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PutRowResponse));
  DeleteRowRequest_descriptor_ = file->message_type(28);
  static const int DeleteRowRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowRequest, primary_key_),
  };
  DeleteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteRowRequest_descriptor_,
      DeleteRowRequest::default_instance_,
      DeleteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteRowRequest));
  DeleteRowResponse_descriptor_ = file->message_type(29);
  static const int DeleteRowResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowResponse, consumed_),
  };
  DeleteRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteRowResponse_descriptor_,
      DeleteRowResponse::default_instance_,
      DeleteRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteRowResponse));
  RowInBatchGetRowRequest_descriptor_ = file->message_type(30);
  static const int RowInBatchGetRowRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowRequest, primary_key_),
  };
  RowInBatchGetRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RowInBatchGetRowRequest_descriptor_,
      RowInBatchGetRowRequest::default_instance_,
      RowInBatchGetRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RowInBatchGetRowRequest));
  TableInBatchGetRowRequest_descriptor_ = file->message_type(31);
  static const int TableInBatchGetRowRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowRequest, rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowRequest, columns_to_get_),
  };
  TableInBatchGetRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TableInBatchGetRowRequest_descriptor_,
      TableInBatchGetRowRequest::default_instance_,
      TableInBatchGetRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TableInBatchGetRowRequest));
  BatchGetRowRequest_descriptor_ = file->message_type(32);
  static const int BatchGetRowRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowRequest, tables_),
  };
  BatchGetRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchGetRowRequest_descriptor_,
      BatchGetRowRequest::default_instance_,
      BatchGetRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchGetRowRequest));
  RowInBatchGetRowResponse_descriptor_ = file->message_type(33);
  static const int RowInBatchGetRowResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, is_ok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, consumed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, row_),
  };
  RowInBatchGetRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RowInBatchGetRowResponse_descriptor_,
      RowInBatchGetRowResponse::default_instance_,
      RowInBatchGetRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchGetRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RowInBatchGetRowResponse));
  TableInBatchGetRowResponse_descriptor_ = file->message_type(34);
  static const int TableInBatchGetRowResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowResponse, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowResponse, rows_),
  };
  TableInBatchGetRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TableInBatchGetRowResponse_descriptor_,
      TableInBatchGetRowResponse::default_instance_,
      TableInBatchGetRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchGetRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TableInBatchGetRowResponse));
  BatchGetRowResponse_descriptor_ = file->message_type(35);
  static const int BatchGetRowResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowResponse, tables_),
  };
  BatchGetRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchGetRowResponse_descriptor_,
      BatchGetRowResponse::default_instance_,
      BatchGetRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchGetRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchGetRowResponse));
  PutRowInBatchWriteRowRequest_descriptor_ = file->message_type(36);
  static const int PutRowInBatchWriteRowRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowInBatchWriteRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowInBatchWriteRowRequest, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowInBatchWriteRowRequest, attribute_columns_),
  };
  PutRowInBatchWriteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PutRowInBatchWriteRowRequest_descriptor_,
      PutRowInBatchWriteRowRequest::default_instance_,
      PutRowInBatchWriteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowInBatchWriteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRowInBatchWriteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PutRowInBatchWriteRowRequest));
  UpdateRowInBatchWriteRowRequest_descriptor_ = file->message_type(37);
  static const int UpdateRowInBatchWriteRowRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowInBatchWriteRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowInBatchWriteRowRequest, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowInBatchWriteRowRequest, attribute_columns_),
  };
  UpdateRowInBatchWriteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRowInBatchWriteRowRequest_descriptor_,
      UpdateRowInBatchWriteRowRequest::default_instance_,
      UpdateRowInBatchWriteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowInBatchWriteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRowInBatchWriteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRowInBatchWriteRowRequest));
  DeleteRowInBatchWriteRowRequest_descriptor_ = file->message_type(38);
  static const int DeleteRowInBatchWriteRowRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowInBatchWriteRowRequest, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowInBatchWriteRowRequest, primary_key_),
  };
  DeleteRowInBatchWriteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteRowInBatchWriteRowRequest_descriptor_,
      DeleteRowInBatchWriteRowRequest::default_instance_,
      DeleteRowInBatchWriteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowInBatchWriteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRowInBatchWriteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteRowInBatchWriteRowRequest));
  TableInBatchWriteRowRequest_descriptor_ = file->message_type(39);
  static const int TableInBatchWriteRowRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, put_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, update_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, delete_rows_),
  };
  TableInBatchWriteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TableInBatchWriteRowRequest_descriptor_,
      TableInBatchWriteRowRequest::default_instance_,
      TableInBatchWriteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TableInBatchWriteRowRequest));
  BatchWriteRowRequest_descriptor_ = file->message_type(40);
  static const int BatchWriteRowRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowRequest, tables_),
  };
  BatchWriteRowRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchWriteRowRequest_descriptor_,
      BatchWriteRowRequest::default_instance_,
      BatchWriteRowRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchWriteRowRequest));
  RowInBatchWriteRowResponse_descriptor_ = file->message_type(41);
  static const int RowInBatchWriteRowResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchWriteRowResponse, is_ok_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchWriteRowResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchWriteRowResponse, consumed_),
  };
  RowInBatchWriteRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RowInBatchWriteRowResponse_descriptor_,
      RowInBatchWriteRowResponse::default_instance_,
      RowInBatchWriteRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchWriteRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowInBatchWriteRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RowInBatchWriteRowResponse));
  TableInBatchWriteRowResponse_descriptor_ = file->message_type(42);
  static const int TableInBatchWriteRowResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, put_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, update_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, delete_rows_),
  };
  TableInBatchWriteRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TableInBatchWriteRowResponse_descriptor_,
      TableInBatchWriteRowResponse::default_instance_,
      TableInBatchWriteRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TableInBatchWriteRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TableInBatchWriteRowResponse));
  BatchWriteRowResponse_descriptor_ = file->message_type(43);
  static const int BatchWriteRowResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowResponse, tables_),
  };
  BatchWriteRowResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BatchWriteRowResponse_descriptor_,
      BatchWriteRowResponse::default_instance_,
      BatchWriteRowResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchWriteRowResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BatchWriteRowResponse));
  GetRangeRequest_descriptor_ = file->message_type(44);
  static const int GetRangeRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, columns_to_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, inclusive_start_primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, exclusive_end_primary_key_),
  };
  GetRangeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRangeRequest_descriptor_,
      GetRangeRequest::default_instance_,
      GetRangeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRangeRequest));
  GetRangeResponse_descriptor_ = file->message_type(45);
  static const int GetRangeResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeResponse, consumed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeResponse, next_start_primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeResponse, rows_),
  };
  GetRangeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRangeResponse_descriptor_,
      GetRangeResponse::default_instance_,
      GetRangeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRangeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRangeResponse));
  ColumnType_descriptor_ = file->enum_type(0);
  RowExistenceExpectation_descriptor_ = file->enum_type(1);
  OperationType_descriptor_ = file->enum_type(2);
  Direction_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Error_descriptor_, &Error::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ColumnSchema_descriptor_, &ColumnSchema::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ColumnValue_descriptor_, &ColumnValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Column_descriptor_, &Column::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Row_descriptor_, &Row::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TableMeta_descriptor_, &TableMeta::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Condition_descriptor_, &Condition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CapacityUnit_descriptor_, &CapacityUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReservedThroughputDetails_descriptor_, &ReservedThroughputDetails::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReservedThroughput_descriptor_, &ReservedThroughput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConsumedCapacity_descriptor_, &ConsumedCapacity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateTableRequest_descriptor_, &CreateTableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateTableResponse_descriptor_, &CreateTableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateTableRequest_descriptor_, &UpdateTableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateTableResponse_descriptor_, &UpdateTableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DescribeTableRequest_descriptor_, &DescribeTableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DescribeTableResponse_descriptor_, &DescribeTableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListTableRequest_descriptor_, &ListTableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListTableResponse_descriptor_, &ListTableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteTableRequest_descriptor_, &DeleteTableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteTableResponse_descriptor_, &DeleteTableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRowRequest_descriptor_, &GetRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRowResponse_descriptor_, &GetRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ColumnUpdate_descriptor_, &ColumnUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRowRequest_descriptor_, &UpdateRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRowResponse_descriptor_, &UpdateRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PutRowRequest_descriptor_, &PutRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PutRowResponse_descriptor_, &PutRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteRowRequest_descriptor_, &DeleteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteRowResponse_descriptor_, &DeleteRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RowInBatchGetRowRequest_descriptor_, &RowInBatchGetRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TableInBatchGetRowRequest_descriptor_, &TableInBatchGetRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchGetRowRequest_descriptor_, &BatchGetRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RowInBatchGetRowResponse_descriptor_, &RowInBatchGetRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TableInBatchGetRowResponse_descriptor_, &TableInBatchGetRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchGetRowResponse_descriptor_, &BatchGetRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PutRowInBatchWriteRowRequest_descriptor_, &PutRowInBatchWriteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRowInBatchWriteRowRequest_descriptor_, &UpdateRowInBatchWriteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteRowInBatchWriteRowRequest_descriptor_, &DeleteRowInBatchWriteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TableInBatchWriteRowRequest_descriptor_, &TableInBatchWriteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchWriteRowRequest_descriptor_, &BatchWriteRowRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RowInBatchWriteRowResponse_descriptor_, &RowInBatchWriteRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TableInBatchWriteRowResponse_descriptor_, &TableInBatchWriteRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BatchWriteRowResponse_descriptor_, &BatchWriteRowResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRangeRequest_descriptor_, &GetRangeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRangeResponse_descriptor_, &GetRangeResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto() {
  delete Error::default_instance_;
  delete Error_reflection_;
  delete ColumnSchema::default_instance_;
  delete ColumnSchema_reflection_;
  delete ColumnValue::default_instance_;
  delete ColumnValue_reflection_;
  delete Column::default_instance_;
  delete Column_reflection_;
  delete Row::default_instance_;
  delete Row_reflection_;
  delete TableMeta::default_instance_;
  delete TableMeta_reflection_;
  delete Condition::default_instance_;
  delete Condition_reflection_;
  delete CapacityUnit::default_instance_;
  delete CapacityUnit_reflection_;
  delete ReservedThroughputDetails::default_instance_;
  delete ReservedThroughputDetails_reflection_;
  delete ReservedThroughput::default_instance_;
  delete ReservedThroughput_reflection_;
  delete ConsumedCapacity::default_instance_;
  delete ConsumedCapacity_reflection_;
  delete CreateTableRequest::default_instance_;
  delete CreateTableRequest_reflection_;
  delete CreateTableResponse::default_instance_;
  delete CreateTableResponse_reflection_;
  delete UpdateTableRequest::default_instance_;
  delete UpdateTableRequest_reflection_;
  delete UpdateTableResponse::default_instance_;
  delete UpdateTableResponse_reflection_;
  delete DescribeTableRequest::default_instance_;
  delete DescribeTableRequest_reflection_;
  delete DescribeTableResponse::default_instance_;
  delete DescribeTableResponse_reflection_;
  delete ListTableRequest::default_instance_;
  delete ListTableRequest_reflection_;
  delete ListTableResponse::default_instance_;
  delete ListTableResponse_reflection_;
  delete DeleteTableRequest::default_instance_;
  delete DeleteTableRequest_reflection_;
  delete DeleteTableResponse::default_instance_;
  delete DeleteTableResponse_reflection_;
  delete GetRowRequest::default_instance_;
  delete GetRowRequest_reflection_;
  delete GetRowResponse::default_instance_;
  delete GetRowResponse_reflection_;
  delete ColumnUpdate::default_instance_;
  delete ColumnUpdate_reflection_;
  delete UpdateRowRequest::default_instance_;
  delete UpdateRowRequest_reflection_;
  delete UpdateRowResponse::default_instance_;
  delete UpdateRowResponse_reflection_;
  delete PutRowRequest::default_instance_;
  delete PutRowRequest_reflection_;
  delete PutRowResponse::default_instance_;
  delete PutRowResponse_reflection_;
  delete DeleteRowRequest::default_instance_;
  delete DeleteRowRequest_reflection_;
  delete DeleteRowResponse::default_instance_;
  delete DeleteRowResponse_reflection_;
  delete RowInBatchGetRowRequest::default_instance_;
  delete RowInBatchGetRowRequest_reflection_;
  delete TableInBatchGetRowRequest::default_instance_;
  delete TableInBatchGetRowRequest_reflection_;
  delete BatchGetRowRequest::default_instance_;
  delete BatchGetRowRequest_reflection_;
  delete RowInBatchGetRowResponse::default_instance_;
  delete RowInBatchGetRowResponse_reflection_;
  delete TableInBatchGetRowResponse::default_instance_;
  delete TableInBatchGetRowResponse_reflection_;
  delete BatchGetRowResponse::default_instance_;
  delete BatchGetRowResponse_reflection_;
  delete PutRowInBatchWriteRowRequest::default_instance_;
  delete PutRowInBatchWriteRowRequest_reflection_;
  delete UpdateRowInBatchWriteRowRequest::default_instance_;
  delete UpdateRowInBatchWriteRowRequest_reflection_;
  delete DeleteRowInBatchWriteRowRequest::default_instance_;
  delete DeleteRowInBatchWriteRowRequest_reflection_;
  delete TableInBatchWriteRowRequest::default_instance_;
  delete TableInBatchWriteRowRequest_reflection_;
  delete BatchWriteRowRequest::default_instance_;
  delete BatchWriteRowRequest_reflection_;
  delete RowInBatchWriteRowResponse::default_instance_;
  delete RowInBatchWriteRowResponse_reflection_;
  delete TableInBatchWriteRowResponse::default_instance_;
  delete TableInBatchWriteRowResponse_reflection_;
  delete BatchWriteRowResponse::default_instance_;
  delete BatchWriteRowResponse_reflection_;
  delete GetRangeRequest::default_instance_;
  delete GetRangeRequest_reflection_;
  delete GetRangeResponse::default_instance_;
  delete GetRangeResponse_reflection_;
}

void protobuf_AddDesc_ots_5fprotocol_5f2_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ots_protocol_2.proto\022\034com.aliyun.cloud"
    "service.ots2\"&\n\005Error\022\014\n\004code\030\001 \002(\t\022\017\n\007m"
    "essage\030\002 \001(\t\"T\n\014ColumnSchema\022\014\n\004name\030\001 \002"
    "(\t\0226\n\004type\030\002 \002(\0162(.com.aliyun.cloudservi"
    "ce.ots2.ColumnType\"\232\001\n\013ColumnValue\0226\n\004ty"
    "pe\030\001 \002(\0162(.com.aliyun.cloudservice.ots2."
    "ColumnType\022\r\n\005v_int\030\002 \001(\003\022\020\n\010v_string\030\003 "
    "\001(\t\022\016\n\006v_bool\030\004 \001(\010\022\020\n\010v_double\030\005 \001(\001\022\020\n"
    "\010v_binary\030\006 \001(\014\"P\n\006Column\022\014\n\004name\030\001 \002(\t\022"
    "8\n\005value\030\002 \002(\0132).com.aliyun.cloudservice"
    ".ots2.ColumnValue\"\211\001\n\003Row\022A\n\023primary_key"
    "_columns\030\001 \003(\0132$.com.aliyun.cloudservice"
    ".ots2.Column\022\?\n\021attribute_columns\030\002 \003(\0132"
    "$.com.aliyun.cloudservice.ots2.Column\"`\n"
    "\tTableMeta\022\022\n\ntable_name\030\001 \002(\t\022\?\n\013primar"
    "y_key\030\002 \003(\0132*.com.aliyun.cloudservice.ot"
    "s2.ColumnSchema\"Y\n\tCondition\022L\n\rrow_exis"
    "tence\030\001 \002(\01625.com.aliyun.cloudservice.ot"
    "s2.RowExistenceExpectation\"+\n\014CapacityUn"
    "it\022\014\n\004read\030\001 \001(\005\022\r\n\005write\030\002 \001(\005\"\271\001\n\031Rese"
    "rvedThroughputDetails\022A\n\rcapacity_unit\030\001"
    " \002(\0132*.com.aliyun.cloudservice.ots2.Capa"
    "cityUnit\022\032\n\022last_increase_time\030\002 \002(\003\022\032\n\022"
    "last_decrease_time\030\003 \001(\003\022!\n\031number_of_de"
    "creases_today\030\004 \002(\005\"W\n\022ReservedThroughpu"
    "t\022A\n\rcapacity_unit\030\001 \002(\0132*.com.aliyun.cl"
    "oudservice.ots2.CapacityUnit\"U\n\020Consumed"
    "Capacity\022A\n\rcapacity_unit\030\001 \002(\0132*.com.al"
    "iyun.cloudservice.ots2.CapacityUnit\"\240\001\n\022"
    "CreateTableRequest\022;\n\ntable_meta\030\001 \002(\0132\'"
    ".com.aliyun.cloudservice.ots2.TableMeta\022"
    "M\n\023reserved_throughput\030\002 \002(\01320.com.aliyu"
    "n.cloudservice.ots2.ReservedThroughput\"\025"
    "\n\023CreateTableResponse\"w\n\022UpdateTableRequ"
    "est\022\022\n\ntable_name\030\001 \002(\t\022M\n\023reserved_thro"
    "ughput\030\002 \002(\01320.com.aliyun.cloudservice.o"
    "ts2.ReservedThroughput\"s\n\023UpdateTableRes"
    "ponse\022\\\n\033reserved_throughput_details\030\001 \002"
    "(\01327.com.aliyun.cloudservice.ots2.Reserv"
    "edThroughputDetails\"*\n\024DescribeTableRequ"
    "est\022\022\n\ntable_name\030\001 \002(\t\"\262\001\n\025DescribeTabl"
    "eResponse\022;\n\ntable_meta\030\001 \002(\0132\'.com.aliy"
    "un.cloudservice.ots2.TableMeta\022\\\n\033reserv"
    "ed_throughput_details\030\002 \002(\01327.com.aliyun"
    ".cloudservice.ots2.ReservedThroughputDet"
    "ails\"\022\n\020ListTableRequest\"(\n\021ListTableRes"
    "ponse\022\023\n\013table_names\030\001 \003(\t\"(\n\022DeleteTabl"
    "eRequest\022\022\n\ntable_name\030\001 \002(\t\"\025\n\023DeleteTa"
    "bleResponse\"v\n\rGetRowRequest\022\022\n\ntable_na"
    "me\030\001 \002(\t\0229\n\013primary_key\030\002 \003(\0132$.com.aliy"
    "un.cloudservice.ots2.Column\022\026\n\016columns_t"
    "o_get\030\003 \003(\t\"\202\001\n\016GetRowResponse\022@\n\010consum"
    "ed\030\001 \002(\0132..com.aliyun.cloudservice.ots2."
    "ConsumedCapacity\022.\n\003row\030\002 \002(\0132!.com.aliy"
    "un.cloudservice.ots2.Row\"\221\001\n\014ColumnUpdat"
    "e\0229\n\004type\030\001 \002(\0162+.com.aliyun.cloudservic"
    "e.ots2.OperationType\022\014\n\004name\030\002 \002(\t\0228\n\005va"
    "lue\030\003 \001(\0132).com.aliyun.cloudservice.ots2"
    ".ColumnValue\"\344\001\n\020UpdateRowRequest\022\022\n\ntab"
    "le_name\030\001 \002(\t\022:\n\tcondition\030\002 \002(\0132\'.com.a"
    "liyun.cloudservice.ots2.Condition\0229\n\013pri"
    "mary_key\030\003 \003(\0132$.com.aliyun.cloudservice"
    ".ots2.Column\022E\n\021attribute_columns\030\004 \003(\0132"
    "*.com.aliyun.cloudservice.ots2.ColumnUpd"
    "ate\"U\n\021UpdateRowResponse\022@\n\010consumed\030\001 \002"
    "(\0132..com.aliyun.cloudservice.ots2.Consum"
    "edCapacity\"\333\001\n\rPutRowRequest\022\022\n\ntable_na"
    "me\030\001 \002(\t\022:\n\tcondition\030\002 \002(\0132\'.com.aliyun"
    ".cloudservice.ots2.Condition\0229\n\013primary_"
    "key\030\003 \003(\0132$.com.aliyun.cloudservice.ots2"
    ".Column\022\?\n\021attribute_columns\030\004 \003(\0132$.com"
    ".aliyun.cloudservice.ots2.Column\"R\n\016PutR"
    "owResponse\022@\n\010consumed\030\001 \002(\0132..com.aliyu"
    "n.cloudservice.ots2.ConsumedCapacity\"\235\001\n"
    "\020DeleteRowRequest\022\022\n\ntable_name\030\001 \002(\t\022:\n"
    "\tcondition\030\002 \002(\0132\'.com.aliyun.cloudservi"
    "ce.ots2.Condition\0229\n\013primary_key\030\003 \003(\0132$"
    ".com.aliyun.cloudservice.ots2.Column\"U\n\021"
    "DeleteRowResponse\022@\n\010consumed\030\001 \002(\0132..co"
    "m.aliyun.cloudservice.ots2.ConsumedCapac"
    "ity\"T\n\027RowInBatchGetRowRequest\0229\n\013primar"
    "y_key\030\001 \003(\0132$.com.aliyun.cloudservice.ot"
    "s2.Column\"\214\001\n\031TableInBatchGetRowRequest\022"
    "\022\n\ntable_name\030\001 \002(\t\022C\n\004rows\030\002 \003(\01325.com."
    "aliyun.cloudservice.ots2.RowInBatchGetRo"
    "wRequest\022\026\n\016columns_to_get\030\003 \003(\t\"]\n\022Batc"
    "hGetRowRequest\022G\n\006tables\030\001 \003(\01327.com.ali"
    "yun.cloudservice.ots2.TableInBatchGetRow"
    "Request\"\325\001\n\030RowInBatchGetRowResponse\022\023\n\005"
    "is_ok\030\001 \002(\010:\004true\0222\n\005error\030\002 \001(\0132#.com.a"
    "liyun.cloudservice.ots2.Error\022@\n\010consume"
    "d\030\003 \001(\0132..com.aliyun.cloudservice.ots2.C"
    "onsumedCapacity\022.\n\003row\030\004 \001(\0132!.com.aliyu"
    "n.cloudservice.ots2.Row\"v\n\032TableInBatchG"
    "etRowResponse\022\022\n\ntable_name\030\001 \002(\t\022D\n\004row"
    "s\030\002 \003(\01326.com.aliyun.cloudservice.ots2.R"
    "owInBatchGetRowResponse\"_\n\023BatchGetRowRe"
    "sponse\022H\n\006tables\030\001 \003(\01328.com.aliyun.clou"
    "dservice.ots2.TableInBatchGetRowResponse"
    "\"\326\001\n\034PutRowInBatchWriteRowRequest\022:\n\tcon"
    "dition\030\001 \002(\0132\'.com.aliyun.cloudservice.o"
    "ts2.Condition\0229\n\013primary_key\030\002 \003(\0132$.com"
    ".aliyun.cloudservice.ots2.Column\022\?\n\021attr"
    "ibute_columns\030\003 \003(\0132$.com.aliyun.cloudse"
    "rvice.ots2.Column\"\337\001\n\037UpdateRowInBatchWr"
    "iteRowRequest\022:\n\tcondition\030\001 \002(\0132\'.com.a"
    "liyun.cloudservice.ots2.Condition\0229\n\013pri"
    "mary_key\030\002 \003(\0132$.com.aliyun.cloudservice"
    ".ots2.Column\022E\n\021attribute_columns\030\003 \003(\0132"
    "*.com.aliyun.cloudservice.ots2.ColumnUpd"
    "ate\"\230\001\n\037DeleteRowInBatchWriteRowRequest\022"
    ":\n\tcondition\030\001 \002(\0132\'.com.aliyun.cloudser"
    "vice.ots2.Condition\0229\n\013primary_key\030\002 \003(\013"
    "2$.com.aliyun.cloudservice.ots2.Column\"\247"
    "\002\n\033TableInBatchWriteRowRequest\022\022\n\ntable_"
    "name\030\001 \002(\t\022L\n\010put_rows\030\002 \003(\0132:.com.aliyu"
    "n.cloudservice.ots2.PutRowInBatchWriteRo"
    "wRequest\022R\n\013update_rows\030\003 \003(\0132=.com.aliy"
    "un.cloudservice.ots2.UpdateRowInBatchWri"
    "teRowRequest\022R\n\013delete_rows\030\004 \003(\0132=.com."
    "aliyun.cloudservice.ots2.DeleteRowInBatc"
    "hWriteRowRequest\"a\n\024BatchWriteRowRequest"
    "\022I\n\006tables\030\001 \003(\01329.com.aliyun.cloudservi"
    "ce.ots2.TableInBatchWriteRowRequest\"\247\001\n\032"
    "RowInBatchWriteRowResponse\022\023\n\005is_ok\030\001 \002("
    "\010:\004true\0222\n\005error\030\002 \001(\0132#.com.aliyun.clou"
    "dservice.ots2.Error\022@\n\010consumed\030\003 \001(\0132.."
    "com.aliyun.cloudservice.ots2.ConsumedCap"
    "acity\"\234\002\n\034TableInBatchWriteRowResponse\022\022"
    "\n\ntable_name\030\001 \002(\t\022J\n\010put_rows\030\002 \003(\01328.c"
    "om.aliyun.cloudservice.ots2.RowInBatchWr"
    "iteRowResponse\022M\n\013update_rows\030\003 \003(\01328.co"
    "m.aliyun.cloudservice.ots2.RowInBatchWri"
    "teRowResponse\022M\n\013delete_rows\030\004 \003(\01328.com"
    ".aliyun.cloudservice.ots2.RowInBatchWrit"
    "eRowResponse\"c\n\025BatchWriteRowResponse\022J\n"
    "\006tables\030\001 \003(\0132:.com.aliyun.cloudservice."
    "ots2.TableInBatchWriteRowResponse\"\234\002\n\017Ge"
    "tRangeRequest\022\022\n\ntable_name\030\001 \002(\t\022:\n\tdir"
    "ection\030\002 \002(\0162\'.com.aliyun.cloudservice.o"
    "ts2.Direction\022\026\n\016columns_to_get\030\003 \003(\t\022\r\n"
    "\005limit\030\004 \001(\005\022I\n\033inclusive_start_primary_"
    "key\030\005 \003(\0132$.com.aliyun.cloudservice.ots2"
    ".Column\022G\n\031exclusive_end_primary_key\030\006 \003"
    "(\0132$.com.aliyun.cloudservice.ots2.Column"
    "\"\313\001\n\020GetRangeResponse\022@\n\010consumed\030\001 \002(\0132"
    "..com.aliyun.cloudservice.ots2.ConsumedC"
    "apacity\022D\n\026next_start_primary_key\030\002 \003(\0132"
    "$.com.aliyun.cloudservice.ots2.Column\022/\n"
    "\004rows\030\003 \003(\0132!.com.aliyun.cloudservice.ot"
    "s2.Row*d\n\nColumnType\022\013\n\007INF_MIN\020\000\022\013\n\007INF"
    "_MAX\020\001\022\013\n\007INTEGER\020\002\022\n\n\006STRING\020\003\022\013\n\007BOOLE"
    "AN\020\004\022\n\n\006DOUBLE\020\005\022\n\n\006BINARY\020\006*M\n\027RowExist"
    "enceExpectation\022\n\n\006IGNORE\020\000\022\020\n\014EXPECT_EX"
    "IST\020\001\022\024\n\020EXPECT_NOT_EXIST\020\002*$\n\rOperation"
    "Type\022\007\n\003PUT\020\001\022\n\n\006DELETE\020\002*&\n\tDirection\022\013"
    "\n\007FORWARD\020\000\022\014\n\010BACKWARD\020\001", 6265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ots_protocol_2.proto", &protobuf_RegisterTypes);
  Error::default_instance_ = new Error();
  ColumnSchema::default_instance_ = new ColumnSchema();
  ColumnValue::default_instance_ = new ColumnValue();
  Column::default_instance_ = new Column();
  Row::default_instance_ = new Row();
  TableMeta::default_instance_ = new TableMeta();
  Condition::default_instance_ = new Condition();
  CapacityUnit::default_instance_ = new CapacityUnit();
  ReservedThroughputDetails::default_instance_ = new ReservedThroughputDetails();
  ReservedThroughput::default_instance_ = new ReservedThroughput();
  ConsumedCapacity::default_instance_ = new ConsumedCapacity();
  CreateTableRequest::default_instance_ = new CreateTableRequest();
  CreateTableResponse::default_instance_ = new CreateTableResponse();
  UpdateTableRequest::default_instance_ = new UpdateTableRequest();
  UpdateTableResponse::default_instance_ = new UpdateTableResponse();
  DescribeTableRequest::default_instance_ = new DescribeTableRequest();
  DescribeTableResponse::default_instance_ = new DescribeTableResponse();
  ListTableRequest::default_instance_ = new ListTableRequest();
  ListTableResponse::default_instance_ = new ListTableResponse();
  DeleteTableRequest::default_instance_ = new DeleteTableRequest();
  DeleteTableResponse::default_instance_ = new DeleteTableResponse();
  GetRowRequest::default_instance_ = new GetRowRequest();
  GetRowResponse::default_instance_ = new GetRowResponse();
  ColumnUpdate::default_instance_ = new ColumnUpdate();
  UpdateRowRequest::default_instance_ = new UpdateRowRequest();
  UpdateRowResponse::default_instance_ = new UpdateRowResponse();
  PutRowRequest::default_instance_ = new PutRowRequest();
  PutRowResponse::default_instance_ = new PutRowResponse();
  DeleteRowRequest::default_instance_ = new DeleteRowRequest();
  DeleteRowResponse::default_instance_ = new DeleteRowResponse();
  RowInBatchGetRowRequest::default_instance_ = new RowInBatchGetRowRequest();
  TableInBatchGetRowRequest::default_instance_ = new TableInBatchGetRowRequest();
  BatchGetRowRequest::default_instance_ = new BatchGetRowRequest();
  RowInBatchGetRowResponse::default_instance_ = new RowInBatchGetRowResponse();
  TableInBatchGetRowResponse::default_instance_ = new TableInBatchGetRowResponse();
  BatchGetRowResponse::default_instance_ = new BatchGetRowResponse();
  PutRowInBatchWriteRowRequest::default_instance_ = new PutRowInBatchWriteRowRequest();
  UpdateRowInBatchWriteRowRequest::default_instance_ = new UpdateRowInBatchWriteRowRequest();
  DeleteRowInBatchWriteRowRequest::default_instance_ = new DeleteRowInBatchWriteRowRequest();
  TableInBatchWriteRowRequest::default_instance_ = new TableInBatchWriteRowRequest();
  BatchWriteRowRequest::default_instance_ = new BatchWriteRowRequest();
  RowInBatchWriteRowResponse::default_instance_ = new RowInBatchWriteRowResponse();
  TableInBatchWriteRowResponse::default_instance_ = new TableInBatchWriteRowResponse();
  BatchWriteRowResponse::default_instance_ = new BatchWriteRowResponse();
  GetRangeRequest::default_instance_ = new GetRangeRequest();
  GetRangeResponse::default_instance_ = new GetRangeResponse();
  Error::default_instance_->InitAsDefaultInstance();
  ColumnSchema::default_instance_->InitAsDefaultInstance();
  ColumnValue::default_instance_->InitAsDefaultInstance();
  Column::default_instance_->InitAsDefaultInstance();
  Row::default_instance_->InitAsDefaultInstance();
  TableMeta::default_instance_->InitAsDefaultInstance();
  Condition::default_instance_->InitAsDefaultInstance();
  CapacityUnit::default_instance_->InitAsDefaultInstance();
  ReservedThroughputDetails::default_instance_->InitAsDefaultInstance();
  ReservedThroughput::default_instance_->InitAsDefaultInstance();
  ConsumedCapacity::default_instance_->InitAsDefaultInstance();
  CreateTableRequest::default_instance_->InitAsDefaultInstance();
  CreateTableResponse::default_instance_->InitAsDefaultInstance();
  UpdateTableRequest::default_instance_->InitAsDefaultInstance();
  UpdateTableResponse::default_instance_->InitAsDefaultInstance();
  DescribeTableRequest::default_instance_->InitAsDefaultInstance();
  DescribeTableResponse::default_instance_->InitAsDefaultInstance();
  ListTableRequest::default_instance_->InitAsDefaultInstance();
  ListTableResponse::default_instance_->InitAsDefaultInstance();
  DeleteTableRequest::default_instance_->InitAsDefaultInstance();
  DeleteTableResponse::default_instance_->InitAsDefaultInstance();
  GetRowRequest::default_instance_->InitAsDefaultInstance();
  GetRowResponse::default_instance_->InitAsDefaultInstance();
  ColumnUpdate::default_instance_->InitAsDefaultInstance();
  UpdateRowRequest::default_instance_->InitAsDefaultInstance();
  UpdateRowResponse::default_instance_->InitAsDefaultInstance();
  PutRowRequest::default_instance_->InitAsDefaultInstance();
  PutRowResponse::default_instance_->InitAsDefaultInstance();
  DeleteRowRequest::default_instance_->InitAsDefaultInstance();
  DeleteRowResponse::default_instance_->InitAsDefaultInstance();
  RowInBatchGetRowRequest::default_instance_->InitAsDefaultInstance();
  TableInBatchGetRowRequest::default_instance_->InitAsDefaultInstance();
  BatchGetRowRequest::default_instance_->InitAsDefaultInstance();
  RowInBatchGetRowResponse::default_instance_->InitAsDefaultInstance();
  TableInBatchGetRowResponse::default_instance_->InitAsDefaultInstance();
  BatchGetRowResponse::default_instance_->InitAsDefaultInstance();
  PutRowInBatchWriteRowRequest::default_instance_->InitAsDefaultInstance();
  UpdateRowInBatchWriteRowRequest::default_instance_->InitAsDefaultInstance();
  DeleteRowInBatchWriteRowRequest::default_instance_->InitAsDefaultInstance();
  TableInBatchWriteRowRequest::default_instance_->InitAsDefaultInstance();
  BatchWriteRowRequest::default_instance_->InitAsDefaultInstance();
  RowInBatchWriteRowResponse::default_instance_->InitAsDefaultInstance();
  TableInBatchWriteRowResponse::default_instance_->InitAsDefaultInstance();
  BatchWriteRowResponse::default_instance_->InitAsDefaultInstance();
  GetRangeRequest::default_instance_->InitAsDefaultInstance();
  GetRangeResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ots_5fprotocol_5f2_2eproto {
  StaticDescriptorInitializer_ots_5fprotocol_5f2_2eproto() {
    protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  }
} static_descriptor_initializer_ots_5fprotocol_5f2_2eproto_;
const ::google::protobuf::EnumDescriptor* ColumnType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnType_descriptor_;
}
bool ColumnType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RowExistenceExpectation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowExistenceExpectation_descriptor_;
}
bool RowExistenceExpectation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OperationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperationType_descriptor_;
}
bool OperationType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Direction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Direction_descriptor_;
}
bool Direction_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Error::kCodeFieldNumber;
const int Error::kMessageFieldNumber;
#endif  // !_MSC_VER

Error::Error()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.Error)
}

void Error::InitAsDefaultInstance() {
}

Error::Error(const Error& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.Error)
}

void Error::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

Error* Error::default_instance_ = NULL;

Error* Error::New() const {
  return new Error;
}

void Error::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.Error)
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.Error)
}

::google::protobuf::uint8* Error::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.Error)
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.Error)
  return target;
}

int Error::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Error* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Error*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Error::Swap(Error* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ColumnSchema::kNameFieldNumber;
const int ColumnSchema::kTypeFieldNumber;
#endif  // !_MSC_VER

ColumnSchema::ColumnSchema()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ColumnSchema)
}

void ColumnSchema::InitAsDefaultInstance() {
}

ColumnSchema::ColumnSchema(const ColumnSchema& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ColumnSchema)
}

void ColumnSchema::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ColumnSchema::~ColumnSchema() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ColumnSchema)
  SharedDtor();
}

void ColumnSchema::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ColumnSchema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnSchema::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnSchema_descriptor_;
}

const ColumnSchema& ColumnSchema::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ColumnSchema* ColumnSchema::default_instance_ = NULL;

ColumnSchema* ColumnSchema::New() const {
  return new ColumnSchema;
}

void ColumnSchema::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ColumnSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ColumnSchema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::aliyun::cloudservice::ots2::ColumnType_IsValid(value)) {
            set_type(static_cast< ::com::aliyun::cloudservice::ots2::ColumnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ColumnSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ColumnSchema)
  return false;
#undef DO_
}

void ColumnSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ColumnSchema)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ColumnSchema)
}

::google::protobuf::uint8* ColumnSchema::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ColumnSchema)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ColumnSchema)
  return target;
}

int ColumnSchema::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnSchema::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ColumnSchema* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ColumnSchema*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ColumnSchema::MergeFrom(const ColumnSchema& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ColumnSchema::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnSchema::CopyFrom(const ColumnSchema& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnSchema::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ColumnSchema::Swap(ColumnSchema* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ColumnSchema::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnSchema_descriptor_;
  metadata.reflection = ColumnSchema_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ColumnValue::kTypeFieldNumber;
const int ColumnValue::kVIntFieldNumber;
const int ColumnValue::kVStringFieldNumber;
const int ColumnValue::kVBoolFieldNumber;
const int ColumnValue::kVDoubleFieldNumber;
const int ColumnValue::kVBinaryFieldNumber;
#endif  // !_MSC_VER

ColumnValue::ColumnValue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ColumnValue)
}

void ColumnValue::InitAsDefaultInstance() {
}

ColumnValue::ColumnValue(const ColumnValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ColumnValue)
}

void ColumnValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  v_int_ = GOOGLE_LONGLONG(0);
  v_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_bool_ = false;
  v_double_ = 0;
  v_binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ColumnValue::~ColumnValue() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ColumnValue)
  SharedDtor();
}

void ColumnValue::SharedDtor() {
  if (v_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete v_string_;
  }
  if (v_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete v_binary_;
  }
  if (this != default_instance_) {
  }
}

void ColumnValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnValue_descriptor_;
}

const ColumnValue& ColumnValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ColumnValue* ColumnValue::default_instance_ = NULL;

ColumnValue* ColumnValue::New() const {
  return new ColumnValue;
}

void ColumnValue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ColumnValue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(v_int_, v_bool_);
    if (has_v_string()) {
      if (v_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        v_string_->clear();
      }
    }
    v_double_ = 0;
    if (has_v_binary()) {
      if (v_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        v_binary_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ColumnValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ColumnValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::aliyun::cloudservice::ots2::ColumnType_IsValid(value)) {
            set_type(static_cast< ::com::aliyun::cloudservice::ots2::ColumnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_v_int;
        break;
      }

      // optional int64 v_int = 2;
      case 2: {
        if (tag == 16) {
         parse_v_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &v_int_)));
          set_has_v_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_v_string;
        break;
      }

      // optional string v_string = 3;
      case 3: {
        if (tag == 26) {
         parse_v_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->v_string().data(), this->v_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "v_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_v_bool;
        break;
      }

      // optional bool v_bool = 4;
      case 4: {
        if (tag == 32) {
         parse_v_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &v_bool_)));
          set_has_v_bool();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_v_double;
        break;
      }

      // optional double v_double = 5;
      case 5: {
        if (tag == 41) {
         parse_v_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_double_)));
          set_has_v_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_v_binary;
        break;
      }

      // optional bytes v_binary = 6;
      case 6: {
        if (tag == 50) {
         parse_v_binary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v_binary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ColumnValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ColumnValue)
  return false;
#undef DO_
}

void ColumnValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ColumnValue)
  // required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 v_int = 2;
  if (has_v_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->v_int(), output);
  }

  // optional string v_string = 3;
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->v_string(), output);
  }

  // optional bool v_bool = 4;
  if (has_v_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->v_bool(), output);
  }

  // optional double v_double = 5;
  if (has_v_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->v_double(), output);
  }

  // optional bytes v_binary = 6;
  if (has_v_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->v_binary(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ColumnValue)
}

::google::protobuf::uint8* ColumnValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ColumnValue)
  // required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 v_int = 2;
  if (has_v_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->v_int(), target);
  }

  // optional string v_string = 3;
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->v_string(), target);
  }

  // optional bool v_bool = 4;
  if (has_v_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->v_bool(), target);
  }

  // optional double v_double = 5;
  if (has_v_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->v_double(), target);
  }

  // optional bytes v_binary = 6;
  if (has_v_binary()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->v_binary(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ColumnValue)
  return target;
}

int ColumnValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int64 v_int = 2;
    if (has_v_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->v_int());
    }

    // optional string v_string = 3;
    if (has_v_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->v_string());
    }

    // optional bool v_bool = 4;
    if (has_v_bool()) {
      total_size += 1 + 1;
    }

    // optional double v_double = 5;
    if (has_v_double()) {
      total_size += 1 + 8;
    }

    // optional bytes v_binary = 6;
    if (has_v_binary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v_binary());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ColumnValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ColumnValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ColumnValue::MergeFrom(const ColumnValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_v_int()) {
      set_v_int(from.v_int());
    }
    if (from.has_v_string()) {
      set_v_string(from.v_string());
    }
    if (from.has_v_bool()) {
      set_v_bool(from.v_bool());
    }
    if (from.has_v_double()) {
      set_v_double(from.v_double());
    }
    if (from.has_v_binary()) {
      set_v_binary(from.v_binary());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ColumnValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnValue::CopyFrom(const ColumnValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ColumnValue::Swap(ColumnValue* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(v_int_, other->v_int_);
    std::swap(v_string_, other->v_string_);
    std::swap(v_bool_, other->v_bool_);
    std::swap(v_double_, other->v_double_);
    std::swap(v_binary_, other->v_binary_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ColumnValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnValue_descriptor_;
  metadata.reflection = ColumnValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Column::kNameFieldNumber;
const int Column::kValueFieldNumber;
#endif  // !_MSC_VER

Column::Column()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.Column)
}

void Column::InitAsDefaultInstance() {
  value_ = const_cast< ::com::aliyun::cloudservice::ots2::ColumnValue*>(&::com::aliyun::cloudservice::ots2::ColumnValue::default_instance());
}

Column::Column(const Column& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.Column)
}

void Column::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Column::~Column() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.Column)
  SharedDtor();
}

void Column::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete value_;
  }
}

void Column::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Column::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Column_descriptor_;
}

const Column& Column::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

Column* Column::default_instance_ = NULL;

Column* Column::New() const {
  return new Column;
}

void Column::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_value()) {
      if (value_ != NULL) value_->::com::aliyun::cloudservice::ots2::ColumnValue::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Column::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.Column)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.Column)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.Column)
  return false;
#undef DO_
}

void Column::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.Column)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.Column)
}

::google::protobuf::uint8* Column::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.Column)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.Column)
  return target;
}

int Column::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Column::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Column* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Column*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Column::MergeFrom(const Column& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value()) {
      mutable_value()->::com::aliyun::cloudservice::ots2::ColumnValue::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Column::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Column::CopyFrom(const Column& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Column::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  return true;
}

void Column::Swap(Column* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Column::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Column_descriptor_;
  metadata.reflection = Column_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Row::kPrimaryKeyColumnsFieldNumber;
const int Row::kAttributeColumnsFieldNumber;
#endif  // !_MSC_VER

Row::Row()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.Row)
}

void Row::InitAsDefaultInstance() {
}

Row::Row(const Row& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.Row)
}

void Row::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Row::~Row() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.Row)
  SharedDtor();
}

void Row::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Row_descriptor_;
}

const Row& Row::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

Row* Row::default_instance_ = NULL;

Row* Row::New() const {
  return new Row;
}

void Row::Clear() {
  primary_key_columns_.Clear();
  attribute_columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.Row)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
      case 1: {
        if (tag == 10) {
         parse_primary_key_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_primary_key_columns;
        if (input->ExpectTag(18)) goto parse_attribute_columns;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
      case 2: {
        if (tag == 18) {
         parse_attribute_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attribute_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.Row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.Row)
  return false;
#undef DO_
}

void Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.Row)
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
  for (int i = 0; i < this->primary_key_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->primary_key_columns(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attribute_columns(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.Row)
}

::google::protobuf::uint8* Row::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.Row)
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
  for (int i = 0; i < this->primary_key_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->primary_key_columns(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attribute_columns(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.Row)
  return target;
}

int Row::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
  total_size += 1 * this->primary_key_columns_size();
  for (int i = 0; i < this->primary_key_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key_columns(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
  total_size += 1 * this->attribute_columns_size();
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_columns(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Row::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Row* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Row*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Row::MergeFrom(const Row& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_columns_.MergeFrom(from.primary_key_columns_);
  attribute_columns_.MergeFrom(from.attribute_columns_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Row::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Row::CopyFrom(const Row& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Row::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key_columns())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attribute_columns())) return false;
  return true;
}

void Row::Swap(Row* other) {
  if (other != this) {
    primary_key_columns_.Swap(&other->primary_key_columns_);
    attribute_columns_.Swap(&other->attribute_columns_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Row_descriptor_;
  metadata.reflection = Row_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TableMeta::kTableNameFieldNumber;
const int TableMeta::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

TableMeta::TableMeta()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.TableMeta)
}

void TableMeta::InitAsDefaultInstance() {
}

TableMeta::TableMeta(const TableMeta& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.TableMeta)
}

void TableMeta::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TableMeta::~TableMeta() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.TableMeta)
  SharedDtor();
}

void TableMeta::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void TableMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableMeta::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableMeta_descriptor_;
}

const TableMeta& TableMeta::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

TableMeta* TableMeta::default_instance_ = NULL;

TableMeta* TableMeta::New() const {
  return new TableMeta;
}

void TableMeta::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TableMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.TableMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.TableMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.TableMeta)
  return false;
#undef DO_
}

void TableMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.TableMeta)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.TableMeta)
}

::google::protobuf::uint8* TableMeta::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.TableMeta)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.TableMeta)
  return target;
}

int TableMeta::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableMeta::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TableMeta* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TableMeta*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TableMeta::MergeFrom(const TableMeta& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TableMeta::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableMeta::CopyFrom(const TableMeta& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void TableMeta::Swap(TableMeta* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TableMeta::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableMeta_descriptor_;
  metadata.reflection = TableMeta_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Condition::kRowExistenceFieldNumber;
#endif  // !_MSC_VER

Condition::Condition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.Condition)
}

void Condition::InitAsDefaultInstance() {
}

Condition::Condition(const Condition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.Condition)
}

void Condition::SharedCtor() {
  _cached_size_ = 0;
  row_existence_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Condition::~Condition() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.Condition)
  SharedDtor();
}

void Condition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Condition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Condition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Condition_descriptor_;
}

const Condition& Condition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

Condition* Condition::default_instance_ = NULL;

Condition* Condition::New() const {
  return new Condition;
}

void Condition::Clear() {
  row_existence_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.Condition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::aliyun::cloudservice::ots2::RowExistenceExpectation_IsValid(value)) {
            set_row_existence(static_cast< ::com::aliyun::cloudservice::ots2::RowExistenceExpectation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.Condition)
  return false;
#undef DO_
}

void Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.Condition)
  // required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
  if (has_row_existence()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->row_existence(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.Condition)
}

::google::protobuf::uint8* Condition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.Condition)
  // required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
  if (has_row_existence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->row_existence(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.Condition)
  return target;
}

int Condition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
    if (has_row_existence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->row_existence());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Condition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Condition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Condition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Condition::MergeFrom(const Condition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row_existence()) {
      set_row_existence(from.row_existence());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Condition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Condition::CopyFrom(const Condition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Condition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Condition::Swap(Condition* other) {
  if (other != this) {
    std::swap(row_existence_, other->row_existence_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Condition_descriptor_;
  metadata.reflection = Condition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CapacityUnit::kReadFieldNumber;
const int CapacityUnit::kWriteFieldNumber;
#endif  // !_MSC_VER

CapacityUnit::CapacityUnit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.CapacityUnit)
}

void CapacityUnit::InitAsDefaultInstance() {
}

CapacityUnit::CapacityUnit(const CapacityUnit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.CapacityUnit)
}

void CapacityUnit::SharedCtor() {
  _cached_size_ = 0;
  read_ = 0;
  write_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CapacityUnit::~CapacityUnit() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.CapacityUnit)
  SharedDtor();
}

void CapacityUnit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CapacityUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CapacityUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CapacityUnit_descriptor_;
}

const CapacityUnit& CapacityUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

CapacityUnit* CapacityUnit::default_instance_ = NULL;

CapacityUnit* CapacityUnit::New() const {
  return new CapacityUnit;
}

void CapacityUnit::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CapacityUnit*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(read_, write_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CapacityUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.CapacityUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 read = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &read_)));
          set_has_read();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_write;
        break;
      }

      // optional int32 write = 2;
      case 2: {
        if (tag == 16) {
         parse_write:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &write_)));
          set_has_write();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.CapacityUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.CapacityUnit)
  return false;
#undef DO_
}

void CapacityUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.CapacityUnit)
  // optional int32 read = 1;
  if (has_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->read(), output);
  }

  // optional int32 write = 2;
  if (has_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->write(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.CapacityUnit)
}

::google::protobuf::uint8* CapacityUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.CapacityUnit)
  // optional int32 read = 1;
  if (has_read()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->read(), target);
  }

  // optional int32 write = 2;
  if (has_write()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->write(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.CapacityUnit)
  return target;
}

int CapacityUnit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 read = 1;
    if (has_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->read());
    }

    // optional int32 write = 2;
    if (has_write()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->write());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CapacityUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CapacityUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CapacityUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CapacityUnit::MergeFrom(const CapacityUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_read()) {
      set_read(from.read());
    }
    if (from.has_write()) {
      set_write(from.write());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CapacityUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapacityUnit::CopyFrom(const CapacityUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapacityUnit::IsInitialized() const {

  return true;
}

void CapacityUnit::Swap(CapacityUnit* other) {
  if (other != this) {
    std::swap(read_, other->read_);
    std::swap(write_, other->write_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CapacityUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CapacityUnit_descriptor_;
  metadata.reflection = CapacityUnit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReservedThroughputDetails::kCapacityUnitFieldNumber;
const int ReservedThroughputDetails::kLastIncreaseTimeFieldNumber;
const int ReservedThroughputDetails::kLastDecreaseTimeFieldNumber;
const int ReservedThroughputDetails::kNumberOfDecreasesTodayFieldNumber;
#endif  // !_MSC_VER

ReservedThroughputDetails::ReservedThroughputDetails()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
}

void ReservedThroughputDetails::InitAsDefaultInstance() {
  capacity_unit_ = const_cast< ::com::aliyun::cloudservice::ots2::CapacityUnit*>(&::com::aliyun::cloudservice::ots2::CapacityUnit::default_instance());
}

ReservedThroughputDetails::ReservedThroughputDetails(const ReservedThroughputDetails& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
}

void ReservedThroughputDetails::SharedCtor() {
  _cached_size_ = 0;
  capacity_unit_ = NULL;
  last_increase_time_ = GOOGLE_LONGLONG(0);
  last_decrease_time_ = GOOGLE_LONGLONG(0);
  number_of_decreases_today_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReservedThroughputDetails::~ReservedThroughputDetails() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  SharedDtor();
}

void ReservedThroughputDetails::SharedDtor() {
  if (this != default_instance_) {
    delete capacity_unit_;
  }
}

void ReservedThroughputDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReservedThroughputDetails::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReservedThroughputDetails_descriptor_;
}

const ReservedThroughputDetails& ReservedThroughputDetails::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ReservedThroughputDetails* ReservedThroughputDetails::default_instance_ = NULL;

ReservedThroughputDetails* ReservedThroughputDetails::New() const {
  return new ReservedThroughputDetails;
}

void ReservedThroughputDetails::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReservedThroughputDetails*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(last_increase_time_, number_of_decreases_today_);
    if (has_capacity_unit()) {
      if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReservedThroughputDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_capacity_unit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last_increase_time;
        break;
      }

      // required int64 last_increase_time = 2;
      case 2: {
        if (tag == 16) {
         parse_last_increase_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_increase_time_)));
          set_has_last_increase_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_last_decrease_time;
        break;
      }

      // optional int64 last_decrease_time = 3;
      case 3: {
        if (tag == 24) {
         parse_last_decrease_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_decrease_time_)));
          set_has_last_decrease_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_number_of_decreases_today;
        break;
      }

      // required int32 number_of_decreases_today = 4;
      case 4: {
        if (tag == 32) {
         parse_number_of_decreases_today:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_of_decreases_today_)));
          set_has_number_of_decreases_today();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  return false;
#undef DO_
}

void ReservedThroughputDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->capacity_unit(), output);
  }

  // required int64 last_increase_time = 2;
  if (has_last_increase_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_increase_time(), output);
  }

  // optional int64 last_decrease_time = 3;
  if (has_last_decrease_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->last_decrease_time(), output);
  }

  // required int32 number_of_decreases_today = 4;
  if (has_number_of_decreases_today()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->number_of_decreases_today(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
}

::google::protobuf::uint8* ReservedThroughputDetails::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->capacity_unit(), target);
  }

  // required int64 last_increase_time = 2;
  if (has_last_increase_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->last_increase_time(), target);
  }

  // optional int64 last_decrease_time = 3;
  if (has_last_decrease_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->last_decrease_time(), target);
  }

  // required int32 number_of_decreases_today = 4;
  if (has_number_of_decreases_today()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->number_of_decreases_today(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
  return target;
}

int ReservedThroughputDetails::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
    if (has_capacity_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->capacity_unit());
    }

    // required int64 last_increase_time = 2;
    if (has_last_increase_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_increase_time());
    }

    // optional int64 last_decrease_time = 3;
    if (has_last_decrease_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_decrease_time());
    }

    // required int32 number_of_decreases_today = 4;
    if (has_number_of_decreases_today()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number_of_decreases_today());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReservedThroughputDetails::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReservedThroughputDetails* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReservedThroughputDetails*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReservedThroughputDetails::MergeFrom(const ReservedThroughputDetails& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_capacity_unit()) {
      mutable_capacity_unit()->::com::aliyun::cloudservice::ots2::CapacityUnit::MergeFrom(from.capacity_unit());
    }
    if (from.has_last_increase_time()) {
      set_last_increase_time(from.last_increase_time());
    }
    if (from.has_last_decrease_time()) {
      set_last_decrease_time(from.last_decrease_time());
    }
    if (from.has_number_of_decreases_today()) {
      set_number_of_decreases_today(from.number_of_decreases_today());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReservedThroughputDetails::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReservedThroughputDetails::CopyFrom(const ReservedThroughputDetails& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReservedThroughputDetails::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  return true;
}

void ReservedThroughputDetails::Swap(ReservedThroughputDetails* other) {
  if (other != this) {
    std::swap(capacity_unit_, other->capacity_unit_);
    std::swap(last_increase_time_, other->last_increase_time_);
    std::swap(last_decrease_time_, other->last_decrease_time_);
    std::swap(number_of_decreases_today_, other->number_of_decreases_today_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReservedThroughputDetails::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReservedThroughputDetails_descriptor_;
  metadata.reflection = ReservedThroughputDetails_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReservedThroughput::kCapacityUnitFieldNumber;
#endif  // !_MSC_VER

ReservedThroughput::ReservedThroughput()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ReservedThroughput)
}

void ReservedThroughput::InitAsDefaultInstance() {
  capacity_unit_ = const_cast< ::com::aliyun::cloudservice::ots2::CapacityUnit*>(&::com::aliyun::cloudservice::ots2::CapacityUnit::default_instance());
}

ReservedThroughput::ReservedThroughput(const ReservedThroughput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ReservedThroughput)
}

void ReservedThroughput::SharedCtor() {
  _cached_size_ = 0;
  capacity_unit_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReservedThroughput::~ReservedThroughput() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ReservedThroughput)
  SharedDtor();
}

void ReservedThroughput::SharedDtor() {
  if (this != default_instance_) {
    delete capacity_unit_;
  }
}

void ReservedThroughput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReservedThroughput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReservedThroughput_descriptor_;
}

const ReservedThroughput& ReservedThroughput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ReservedThroughput* ReservedThroughput::default_instance_ = NULL;

ReservedThroughput* ReservedThroughput::New() const {
  return new ReservedThroughput;
}

void ReservedThroughput::Clear() {
  if (has_capacity_unit()) {
    if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReservedThroughput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ReservedThroughput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_capacity_unit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ReservedThroughput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ReservedThroughput)
  return false;
#undef DO_
}

void ReservedThroughput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ReservedThroughput)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->capacity_unit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ReservedThroughput)
}

::google::protobuf::uint8* ReservedThroughput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ReservedThroughput)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->capacity_unit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ReservedThroughput)
  return target;
}

int ReservedThroughput::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
    if (has_capacity_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->capacity_unit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReservedThroughput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReservedThroughput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReservedThroughput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReservedThroughput::MergeFrom(const ReservedThroughput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_capacity_unit()) {
      mutable_capacity_unit()->::com::aliyun::cloudservice::ots2::CapacityUnit::MergeFrom(from.capacity_unit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReservedThroughput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReservedThroughput::CopyFrom(const ReservedThroughput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReservedThroughput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReservedThroughput::Swap(ReservedThroughput* other) {
  if (other != this) {
    std::swap(capacity_unit_, other->capacity_unit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReservedThroughput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReservedThroughput_descriptor_;
  metadata.reflection = ReservedThroughput_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConsumedCapacity::kCapacityUnitFieldNumber;
#endif  // !_MSC_VER

ConsumedCapacity::ConsumedCapacity()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ConsumedCapacity)
}

void ConsumedCapacity::InitAsDefaultInstance() {
  capacity_unit_ = const_cast< ::com::aliyun::cloudservice::ots2::CapacityUnit*>(&::com::aliyun::cloudservice::ots2::CapacityUnit::default_instance());
}

ConsumedCapacity::ConsumedCapacity(const ConsumedCapacity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ConsumedCapacity)
}

void ConsumedCapacity::SharedCtor() {
  _cached_size_ = 0;
  capacity_unit_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConsumedCapacity::~ConsumedCapacity() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  SharedDtor();
}

void ConsumedCapacity::SharedDtor() {
  if (this != default_instance_) {
    delete capacity_unit_;
  }
}

void ConsumedCapacity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConsumedCapacity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConsumedCapacity_descriptor_;
}

const ConsumedCapacity& ConsumedCapacity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ConsumedCapacity* ConsumedCapacity::default_instance_ = NULL;

ConsumedCapacity* ConsumedCapacity::New() const {
  return new ConsumedCapacity;
}

void ConsumedCapacity::Clear() {
  if (has_capacity_unit()) {
    if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConsumedCapacity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_capacity_unit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  return false;
#undef DO_
}

void ConsumedCapacity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->capacity_unit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ConsumedCapacity)
}

::google::protobuf::uint8* ConsumedCapacity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  if (has_capacity_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->capacity_unit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ConsumedCapacity)
  return target;
}

int ConsumedCapacity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
    if (has_capacity_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->capacity_unit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConsumedCapacity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConsumedCapacity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConsumedCapacity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConsumedCapacity::MergeFrom(const ConsumedCapacity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_capacity_unit()) {
      mutable_capacity_unit()->::com::aliyun::cloudservice::ots2::CapacityUnit::MergeFrom(from.capacity_unit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConsumedCapacity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsumedCapacity::CopyFrom(const ConsumedCapacity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumedCapacity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ConsumedCapacity::Swap(ConsumedCapacity* other) {
  if (other != this) {
    std::swap(capacity_unit_, other->capacity_unit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConsumedCapacity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConsumedCapacity_descriptor_;
  metadata.reflection = ConsumedCapacity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateTableRequest::kTableMetaFieldNumber;
const int CreateTableRequest::kReservedThroughputFieldNumber;
#endif  // !_MSC_VER

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.CreateTableRequest)
}

void CreateTableRequest::InitAsDefaultInstance() {
  table_meta_ = const_cast< ::com::aliyun::cloudservice::ots2::TableMeta*>(&::com::aliyun::cloudservice::ots2::TableMeta::default_instance());
  reserved_throughput_ = const_cast< ::com::aliyun::cloudservice::ots2::ReservedThroughput*>(&::com::aliyun::cloudservice::ots2::ReservedThroughput::default_instance());
}

CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  _cached_size_ = 0;
  table_meta_ = NULL;
  reserved_throughput_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  if (this != default_instance_) {
    delete table_meta_;
    delete reserved_throughput_;
  }
}

void CreateTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTableRequest_descriptor_;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

CreateTableRequest* CreateTableRequest::default_instance_ = NULL;

CreateTableRequest* CreateTableRequest::New() const {
  return new CreateTableRequest;
}

void CreateTableRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_meta()) {
      if (table_meta_ != NULL) table_meta_->::com::aliyun::cloudservice::ots2::TableMeta::Clear();
    }
    if (has_reserved_throughput()) {
      if (reserved_throughput_ != NULL) reserved_throughput_->::com::aliyun::cloudservice::ots2::ReservedThroughput::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.CreateTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table_meta()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reserved_throughput;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
      case 2: {
        if (tag == 18) {
         parse_reserved_throughput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reserved_throughput()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.CreateTableRequest)
  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  if (has_table_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->table_meta(), output);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  if (has_reserved_throughput()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reserved_throughput(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.CreateTableRequest)
  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  if (has_table_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->table_meta(), target);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  if (has_reserved_throughput()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reserved_throughput(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.CreateTableRequest)
  return target;
}

int CreateTableRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
    if (has_table_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->table_meta());
    }

    // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
    if (has_reserved_throughput()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reserved_throughput());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateTableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateTableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_meta()) {
      mutable_table_meta()->::com::aliyun::cloudservice::ots2::TableMeta::MergeFrom(from.table_meta());
    }
    if (from.has_reserved_throughput()) {
      mutable_reserved_throughput()->::com::aliyun::cloudservice::ots2::ReservedThroughput::MergeFrom(from.reserved_throughput());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_table_meta()) {
    if (!this->table_meta().IsInitialized()) return false;
  }
  if (has_reserved_throughput()) {
    if (!this->reserved_throughput().IsInitialized()) return false;
  }
  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other != this) {
    std::swap(table_meta_, other->table_meta_);
    std::swap(reserved_throughput_, other->reserved_throughput_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTableRequest_descriptor_;
  metadata.reflection = CreateTableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CreateTableResponse::CreateTableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.CreateTableResponse)
}

void CreateTableResponse::InitAsDefaultInstance() {
}

CreateTableResponse::CreateTableResponse(const CreateTableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.CreateTableResponse)
}

void CreateTableResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateTableResponse::~CreateTableResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.CreateTableResponse)
  SharedDtor();
}

void CreateTableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateTableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTableResponse_descriptor_;
}

const CreateTableResponse& CreateTableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

CreateTableResponse* CreateTableResponse::default_instance_ = NULL;

CreateTableResponse* CreateTableResponse::New() const {
  return new CreateTableResponse;
}

void CreateTableResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.CreateTableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.CreateTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.CreateTableResponse)
  return false;
#undef DO_
}

void CreateTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.CreateTableResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.CreateTableResponse)
}

::google::protobuf::uint8* CreateTableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.CreateTableResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.CreateTableResponse)
  return target;
}

int CreateTableResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateTableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateTableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateTableResponse::MergeFrom(const CreateTableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableResponse::CopyFrom(const CreateTableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableResponse::IsInitialized() const {

  return true;
}

void CreateTableResponse::Swap(CreateTableResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateTableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTableResponse_descriptor_;
  metadata.reflection = CreateTableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateTableRequest::kTableNameFieldNumber;
const int UpdateTableRequest::kReservedThroughputFieldNumber;
#endif  // !_MSC_VER

UpdateTableRequest::UpdateTableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.UpdateTableRequest)
}

void UpdateTableRequest::InitAsDefaultInstance() {
  reserved_throughput_ = const_cast< ::com::aliyun::cloudservice::ots2::ReservedThroughput*>(&::com::aliyun::cloudservice::ots2::ReservedThroughput::default_instance());
}

UpdateTableRequest::UpdateTableRequest(const UpdateTableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.UpdateTableRequest)
}

void UpdateTableRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserved_throughput_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateTableRequest::~UpdateTableRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  SharedDtor();
}

void UpdateTableRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
    delete reserved_throughput_;
  }
}

void UpdateTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateTableRequest_descriptor_;
}

const UpdateTableRequest& UpdateTableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

UpdateTableRequest* UpdateTableRequest::default_instance_ = NULL;

UpdateTableRequest* UpdateTableRequest::New() const {
  return new UpdateTableRequest;
}

void UpdateTableRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        table_name_->clear();
      }
    }
    if (has_reserved_throughput()) {
      if (reserved_throughput_ != NULL) reserved_throughput_->::com::aliyun::cloudservice::ots2::ReservedThroughput::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reserved_throughput;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
      case 2: {
        if (tag == 18) {
         parse_reserved_throughput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reserved_throughput()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  return false;
#undef DO_
}

void UpdateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  if (has_reserved_throughput()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reserved_throughput(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.UpdateTableRequest)
}

::google::protobuf::uint8* UpdateTableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  if (has_reserved_throughput()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reserved_throughput(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.UpdateTableRequest)
  return target;
}

int UpdateTableRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
    if (has_reserved_throughput()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reserved_throughput());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateTableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateTableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateTableRequest::MergeFrom(const UpdateTableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_reserved_throughput()) {
      mutable_reserved_throughput()->::com::aliyun::cloudservice::ots2::ReservedThroughput::MergeFrom(from.reserved_throughput());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTableRequest::CopyFrom(const UpdateTableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reserved_throughput()) {
    if (!this->reserved_throughput().IsInitialized()) return false;
  }
  return true;
}

void UpdateTableRequest::Swap(UpdateTableRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(reserved_throughput_, other->reserved_throughput_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateTableRequest_descriptor_;
  metadata.reflection = UpdateTableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateTableResponse::kReservedThroughputDetailsFieldNumber;
#endif  // !_MSC_VER

UpdateTableResponse::UpdateTableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.UpdateTableResponse)
}

void UpdateTableResponse::InitAsDefaultInstance() {
  reserved_throughput_details_ = const_cast< ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails*>(&::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::default_instance());
}

UpdateTableResponse::UpdateTableResponse(const UpdateTableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.UpdateTableResponse)
}

void UpdateTableResponse::SharedCtor() {
  _cached_size_ = 0;
  reserved_throughput_details_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateTableResponse::~UpdateTableResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  SharedDtor();
}

void UpdateTableResponse::SharedDtor() {
  if (this != default_instance_) {
    delete reserved_throughput_details_;
  }
}

void UpdateTableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateTableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateTableResponse_descriptor_;
}

const UpdateTableResponse& UpdateTableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

UpdateTableResponse* UpdateTableResponse::default_instance_ = NULL;

UpdateTableResponse* UpdateTableResponse::New() const {
  return new UpdateTableResponse;
}

void UpdateTableResponse::Clear() {
  if (has_reserved_throughput_details()) {
    if (reserved_throughput_details_ != NULL) reserved_throughput_details_->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reserved_throughput_details()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  return false;
#undef DO_
}

void UpdateTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
  if (has_reserved_throughput_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reserved_throughput_details(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.UpdateTableResponse)
}

::google::protobuf::uint8* UpdateTableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
  if (has_reserved_throughput_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reserved_throughput_details(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.UpdateTableResponse)
  return target;
}

int UpdateTableResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
    if (has_reserved_throughput_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reserved_throughput_details());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateTableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateTableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateTableResponse::MergeFrom(const UpdateTableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reserved_throughput_details()) {
      mutable_reserved_throughput_details()->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::MergeFrom(from.reserved_throughput_details());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTableResponse::CopyFrom(const UpdateTableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_reserved_throughput_details()) {
    if (!this->reserved_throughput_details().IsInitialized()) return false;
  }
  return true;
}

void UpdateTableResponse::Swap(UpdateTableResponse* other) {
  if (other != this) {
    std::swap(reserved_throughput_details_, other->reserved_throughput_details_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateTableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateTableResponse_descriptor_;
  metadata.reflection = UpdateTableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DescribeTableRequest::kTableNameFieldNumber;
#endif  // !_MSC_VER

DescribeTableRequest::DescribeTableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DescribeTableRequest)
}

void DescribeTableRequest::InitAsDefaultInstance() {
}

DescribeTableRequest::DescribeTableRequest(const DescribeTableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DescribeTableRequest)
}

void DescribeTableRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DescribeTableRequest::~DescribeTableRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  SharedDtor();
}

void DescribeTableRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void DescribeTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DescribeTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DescribeTableRequest_descriptor_;
}

const DescribeTableRequest& DescribeTableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DescribeTableRequest* DescribeTableRequest::default_instance_ = NULL;

DescribeTableRequest* DescribeTableRequest::New() const {
  return new DescribeTableRequest;
}

void DescribeTableRequest::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DescribeTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  return false;
#undef DO_
}

void DescribeTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DescribeTableRequest)
}

::google::protobuf::uint8* DescribeTableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DescribeTableRequest)
  return target;
}

int DescribeTableRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DescribeTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DescribeTableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DescribeTableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DescribeTableRequest::MergeFrom(const DescribeTableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DescribeTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescribeTableRequest::CopyFrom(const DescribeTableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DescribeTableRequest::Swap(DescribeTableRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DescribeTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DescribeTableRequest_descriptor_;
  metadata.reflection = DescribeTableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DescribeTableResponse::kTableMetaFieldNumber;
const int DescribeTableResponse::kReservedThroughputDetailsFieldNumber;
#endif  // !_MSC_VER

DescribeTableResponse::DescribeTableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DescribeTableResponse)
}

void DescribeTableResponse::InitAsDefaultInstance() {
  table_meta_ = const_cast< ::com::aliyun::cloudservice::ots2::TableMeta*>(&::com::aliyun::cloudservice::ots2::TableMeta::default_instance());
  reserved_throughput_details_ = const_cast< ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails*>(&::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::default_instance());
}

DescribeTableResponse::DescribeTableResponse(const DescribeTableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DescribeTableResponse)
}

void DescribeTableResponse::SharedCtor() {
  _cached_size_ = 0;
  table_meta_ = NULL;
  reserved_throughput_details_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DescribeTableResponse::~DescribeTableResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  SharedDtor();
}

void DescribeTableResponse::SharedDtor() {
  if (this != default_instance_) {
    delete table_meta_;
    delete reserved_throughput_details_;
  }
}

void DescribeTableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DescribeTableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DescribeTableResponse_descriptor_;
}

const DescribeTableResponse& DescribeTableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DescribeTableResponse* DescribeTableResponse::default_instance_ = NULL;

DescribeTableResponse* DescribeTableResponse::New() const {
  return new DescribeTableResponse;
}

void DescribeTableResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_meta()) {
      if (table_meta_ != NULL) table_meta_->::com::aliyun::cloudservice::ots2::TableMeta::Clear();
    }
    if (has_reserved_throughput_details()) {
      if (reserved_throughput_details_ != NULL) reserved_throughput_details_->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DescribeTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table_meta()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reserved_throughput_details;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
      case 2: {
        if (tag == 18) {
         parse_reserved_throughput_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reserved_throughput_details()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  return false;
#undef DO_
}

void DescribeTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  if (has_table_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->table_meta(), output);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
  if (has_reserved_throughput_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reserved_throughput_details(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DescribeTableResponse)
}

::google::protobuf::uint8* DescribeTableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  if (has_table_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->table_meta(), target);
  }

  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
  if (has_reserved_throughput_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reserved_throughput_details(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DescribeTableResponse)
  return target;
}

int DescribeTableResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
    if (has_table_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->table_meta());
    }

    // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
    if (has_reserved_throughput_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reserved_throughput_details());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DescribeTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DescribeTableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DescribeTableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DescribeTableResponse::MergeFrom(const DescribeTableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_meta()) {
      mutable_table_meta()->::com::aliyun::cloudservice::ots2::TableMeta::MergeFrom(from.table_meta());
    }
    if (from.has_reserved_throughput_details()) {
      mutable_reserved_throughput_details()->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::MergeFrom(from.reserved_throughput_details());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DescribeTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescribeTableResponse::CopyFrom(const DescribeTableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescribeTableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_table_meta()) {
    if (!this->table_meta().IsInitialized()) return false;
  }
  if (has_reserved_throughput_details()) {
    if (!this->reserved_throughput_details().IsInitialized()) return false;
  }
  return true;
}

void DescribeTableResponse::Swap(DescribeTableResponse* other) {
  if (other != this) {
    std::swap(table_meta_, other->table_meta_);
    std::swap(reserved_throughput_details_, other->reserved_throughput_details_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DescribeTableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DescribeTableResponse_descriptor_;
  metadata.reflection = DescribeTableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ListTableRequest::ListTableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ListTableRequest)
}

void ListTableRequest::InitAsDefaultInstance() {
}

ListTableRequest::ListTableRequest(const ListTableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ListTableRequest)
}

void ListTableRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListTableRequest::~ListTableRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ListTableRequest)
  SharedDtor();
}

void ListTableRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTableRequest_descriptor_;
}

const ListTableRequest& ListTableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ListTableRequest* ListTableRequest::default_instance_ = NULL;

ListTableRequest* ListTableRequest::New() const {
  return new ListTableRequest;
}

void ListTableRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ListTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ListTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ListTableRequest)
  return false;
#undef DO_
}

void ListTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ListTableRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ListTableRequest)
}

::google::protobuf::uint8* ListTableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ListTableRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ListTableRequest)
  return target;
}

int ListTableRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListTableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListTableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListTableRequest::MergeFrom(const ListTableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTableRequest::CopyFrom(const ListTableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTableRequest::IsInitialized() const {

  return true;
}

void ListTableRequest::Swap(ListTableRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTableRequest_descriptor_;
  metadata.reflection = ListTableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ListTableResponse::kTableNamesFieldNumber;
#endif  // !_MSC_VER

ListTableResponse::ListTableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ListTableResponse)
}

void ListTableResponse::InitAsDefaultInstance() {
}

ListTableResponse::ListTableResponse(const ListTableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ListTableResponse)
}

void ListTableResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListTableResponse::~ListTableResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ListTableResponse)
  SharedDtor();
}

void ListTableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTableResponse_descriptor_;
}

const ListTableResponse& ListTableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ListTableResponse* ListTableResponse::default_instance_ = NULL;

ListTableResponse* ListTableResponse::New() const {
  return new ListTableResponse;
}

void ListTableResponse::Clear() {
  table_names_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ListTableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string table_names = 1;
      case 1: {
        if (tag == 10) {
         parse_table_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_table_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_names(this->table_names_size() - 1).data(),
            this->table_names(this->table_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_table_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ListTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ListTableResponse)
  return false;
#undef DO_
}

void ListTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ListTableResponse)
  // repeated string table_names = 1;
  for (int i = 0; i < this->table_names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->table_names(i).data(), this->table_names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "table_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->table_names(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ListTableResponse)
}

::google::protobuf::uint8* ListTableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ListTableResponse)
  // repeated string table_names = 1;
  for (int i = 0; i < this->table_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_names(i).data(), this->table_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->table_names(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ListTableResponse)
  return target;
}

int ListTableResponse::ByteSize() const {
  int total_size = 0;

  // repeated string table_names = 1;
  total_size += 1 * this->table_names_size();
  for (int i = 0; i < this->table_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->table_names(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListTableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListTableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListTableResponse::MergeFrom(const ListTableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  table_names_.MergeFrom(from.table_names_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTableResponse::CopyFrom(const ListTableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTableResponse::IsInitialized() const {

  return true;
}

void ListTableResponse::Swap(ListTableResponse* other) {
  if (other != this) {
    table_names_.Swap(&other->table_names_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListTableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTableResponse_descriptor_;
  metadata.reflection = ListTableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteTableRequest::kTableNameFieldNumber;
#endif  // !_MSC_VER

DeleteTableRequest::DeleteTableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DeleteTableRequest)
}

void DeleteTableRequest::InitAsDefaultInstance() {
}

DeleteTableRequest::DeleteTableRequest(const DeleteTableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DeleteTableRequest)
}

void DeleteTableRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteTableRequest::~DeleteTableRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  SharedDtor();
}

void DeleteTableRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteTableRequest_descriptor_;
}

const DeleteTableRequest& DeleteTableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DeleteTableRequest* DeleteTableRequest::default_instance_ = NULL;

DeleteTableRequest* DeleteTableRequest::New() const {
  return new DeleteTableRequest;
}

void DeleteTableRequest::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  return false;
#undef DO_
}

void DeleteTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DeleteTableRequest)
}

::google::protobuf::uint8* DeleteTableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DeleteTableRequest)
  return target;
}

int DeleteTableRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteTableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteTableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteTableRequest::MergeFrom(const DeleteTableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTableRequest::CopyFrom(const DeleteTableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTableRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeleteTableRequest::Swap(DeleteTableRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteTableRequest_descriptor_;
  metadata.reflection = DeleteTableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DeleteTableResponse::DeleteTableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DeleteTableResponse)
}

void DeleteTableResponse::InitAsDefaultInstance() {
}

DeleteTableResponse::DeleteTableResponse(const DeleteTableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DeleteTableResponse)
}

void DeleteTableResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteTableResponse::~DeleteTableResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  SharedDtor();
}

void DeleteTableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteTableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteTableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteTableResponse_descriptor_;
}

const DeleteTableResponse& DeleteTableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DeleteTableResponse* DeleteTableResponse::default_instance_ = NULL;

DeleteTableResponse* DeleteTableResponse::New() const {
  return new DeleteTableResponse;
}

void DeleteTableResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteTableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  return false;
#undef DO_
}

void DeleteTableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DeleteTableResponse)
}

::google::protobuf::uint8* DeleteTableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DeleteTableResponse)
  return target;
}

int DeleteTableResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteTableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteTableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteTableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteTableResponse::MergeFrom(const DeleteTableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteTableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTableResponse::CopyFrom(const DeleteTableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTableResponse::IsInitialized() const {

  return true;
}

void DeleteTableResponse::Swap(DeleteTableResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteTableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteTableResponse_descriptor_;
  metadata.reflection = DeleteTableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetRowRequest::kTableNameFieldNumber;
const int GetRowRequest::kPrimaryKeyFieldNumber;
const int GetRowRequest::kColumnsToGetFieldNumber;
#endif  // !_MSC_VER

GetRowRequest::GetRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.GetRowRequest)
}

void GetRowRequest::InitAsDefaultInstance() {
}

GetRowRequest::GetRowRequest(const GetRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.GetRowRequest)
}

void GetRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRowRequest::~GetRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.GetRowRequest)
  SharedDtor();
}

void GetRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void GetRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRowRequest_descriptor_;
}

const GetRowRequest& GetRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

GetRowRequest* GetRowRequest::default_instance_ = NULL;

GetRowRequest* GetRowRequest::New() const {
  return new GetRowRequest;
}

void GetRowRequest::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  primary_key_.Clear();
  columns_to_get_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.GetRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        break;
      }

      // repeated string columns_to_get = 3;
      case 3: {
        if (tag == 26) {
         parse_columns_to_get:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_columns_to_get()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->columns_to_get(this->columns_to_get_size() - 1).data(),
            this->columns_to_get(this->columns_to_get_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "columns_to_get");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.GetRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.GetRowRequest)
  return false;
#undef DO_
}

void GetRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.GetRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->columns_to_get(i).data(), this->columns_to_get(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "columns_to_get");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->columns_to_get(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.GetRowRequest)
}

::google::protobuf::uint8* GetRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.GetRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->columns_to_get(i).data(), this->columns_to_get(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "columns_to_get");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->columns_to_get(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.GetRowRequest)
  return target;
}

int GetRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated string columns_to_get = 3;
  total_size += 1 * this->columns_to_get_size();
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->columns_to_get(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRowRequest::MergeFrom(const GetRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  columns_to_get_.MergeFrom(from.columns_to_get_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRowRequest::CopyFrom(const GetRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void GetRowRequest::Swap(GetRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    primary_key_.Swap(&other->primary_key_);
    columns_to_get_.Swap(&other->columns_to_get_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRowRequest_descriptor_;
  metadata.reflection = GetRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetRowResponse::kConsumedFieldNumber;
const int GetRowResponse::kRowFieldNumber;
#endif  // !_MSC_VER

GetRowResponse::GetRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.GetRowResponse)
}

void GetRowResponse::InitAsDefaultInstance() {
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
  row_ = const_cast< ::com::aliyun::cloudservice::ots2::Row*>(&::com::aliyun::cloudservice::ots2::Row::default_instance());
}

GetRowResponse::GetRowResponse(const GetRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.GetRowResponse)
}

void GetRowResponse::SharedCtor() {
  _cached_size_ = 0;
  consumed_ = NULL;
  row_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRowResponse::~GetRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.GetRowResponse)
  SharedDtor();
}

void GetRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete consumed_;
    delete row_;
  }
}

void GetRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRowResponse_descriptor_;
}

const GetRowResponse& GetRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

GetRowResponse* GetRowResponse::default_instance_ = NULL;

GetRowResponse* GetRowResponse::New() const {
  return new GetRowResponse;
}

void GetRowResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_consumed()) {
      if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
    }
    if (has_row()) {
      if (row_ != NULL) row_->::com::aliyun::cloudservice::ots2::Row::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.GetRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_row;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.Row row = 2;
      case 2: {
        if (tag == 18) {
         parse_row:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_row()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.GetRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.GetRowResponse)
  return false;
#undef DO_
}

void GetRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.GetRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->consumed(), output);
  }

  // required .com.aliyun.cloudservice.ots2.Row row = 2;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->row(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.GetRowResponse)
}

::google::protobuf::uint8* GetRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.GetRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->consumed(), target);
  }

  // required .com.aliyun.cloudservice.ots2.Row row = 2;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->row(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.GetRowResponse)
  return target;
}

int GetRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

    // required .com.aliyun.cloudservice.ots2.Row row = 2;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->row());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRowResponse::MergeFrom(const GetRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
    if (from.has_row()) {
      mutable_row()->::com::aliyun::cloudservice::ots2::Row::MergeFrom(from.row());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRowResponse::CopyFrom(const GetRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  if (has_row()) {
    if (!this->row().IsInitialized()) return false;
  }
  return true;
}

void GetRowResponse::Swap(GetRowResponse* other) {
  if (other != this) {
    std::swap(consumed_, other->consumed_);
    std::swap(row_, other->row_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRowResponse_descriptor_;
  metadata.reflection = GetRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ColumnUpdate::kTypeFieldNumber;
const int ColumnUpdate::kNameFieldNumber;
const int ColumnUpdate::kValueFieldNumber;
#endif  // !_MSC_VER

ColumnUpdate::ColumnUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.ColumnUpdate)
}

void ColumnUpdate::InitAsDefaultInstance() {
  value_ = const_cast< ::com::aliyun::cloudservice::ots2::ColumnValue*>(&::com::aliyun::cloudservice::ots2::ColumnValue::default_instance());
}

ColumnUpdate::ColumnUpdate(const ColumnUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.ColumnUpdate)
}

void ColumnUpdate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ColumnUpdate::~ColumnUpdate() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.ColumnUpdate)
  SharedDtor();
}

void ColumnUpdate::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete value_;
  }
}

void ColumnUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnUpdate_descriptor_;
}

const ColumnUpdate& ColumnUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

ColumnUpdate* ColumnUpdate::default_instance_ = NULL;

ColumnUpdate* ColumnUpdate::New() const {
  return new ColumnUpdate;
}

void ColumnUpdate::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    type_ = 1;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_value()) {
      if (value_ != NULL) value_->::com::aliyun::cloudservice::ots2::ColumnValue::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ColumnUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.ColumnUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.OperationType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::aliyun::cloudservice::ots2::OperationType_IsValid(value)) {
            set_type(static_cast< ::com::aliyun::cloudservice::ots2::OperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.ColumnUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.ColumnUpdate)
  return false;
#undef DO_
}

void ColumnUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.ColumnUpdate)
  // required .com.aliyun.cloudservice.ots2.OperationType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.ColumnUpdate)
}

::google::protobuf::uint8* ColumnUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.ColumnUpdate)
  // required .com.aliyun.cloudservice.ots2.OperationType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.ColumnUpdate)
  return target;
}

int ColumnUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.OperationType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ColumnUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ColumnUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ColumnUpdate::MergeFrom(const ColumnUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value()) {
      mutable_value()->::com::aliyun::cloudservice::ots2::ColumnValue::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ColumnUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnUpdate::CopyFrom(const ColumnUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  return true;
}

void ColumnUpdate::Swap(ColumnUpdate* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(name_, other->name_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ColumnUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnUpdate_descriptor_;
  metadata.reflection = ColumnUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateRowRequest::kTableNameFieldNumber;
const int UpdateRowRequest::kConditionFieldNumber;
const int UpdateRowRequest::kPrimaryKeyFieldNumber;
const int UpdateRowRequest::kAttributeColumnsFieldNumber;
#endif  // !_MSC_VER

UpdateRowRequest::UpdateRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.UpdateRowRequest)
}

void UpdateRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

UpdateRowRequest::UpdateRowRequest(const UpdateRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.UpdateRowRequest)
}

void UpdateRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRowRequest::~UpdateRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  SharedDtor();
}

void UpdateRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
    delete condition_;
  }
}

void UpdateRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRowRequest_descriptor_;
}

const UpdateRowRequest& UpdateRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

UpdateRowRequest* UpdateRowRequest::default_instance_ = NULL;

UpdateRowRequest* UpdateRowRequest::New() const {
  return new UpdateRowRequest;
}

void UpdateRowRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        table_name_->clear();
      }
    }
    if (has_condition()) {
      if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
    }
  }
  primary_key_.Clear();
  attribute_columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
      case 2: {
        if (tag == 18) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
      case 3: {
        if (tag == 26) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        if (input->ExpectTag(34)) goto parse_attribute_columns;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
      case 4: {
        if (tag == 34) {
         parse_attribute_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attribute_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  return false;
#undef DO_
}

void UpdateRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attribute_columns(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.UpdateRowRequest)
}

::google::protobuf::uint8* UpdateRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attribute_columns(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.UpdateRowRequest)
  return target;
}

int UpdateRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
  total_size += 1 * this->attribute_columns_size();
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_columns(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateRowRequest::MergeFrom(const UpdateRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  attribute_columns_.MergeFrom(from.attribute_columns_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRowRequest::CopyFrom(const UpdateRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attribute_columns())) return false;
  return true;
}

void UpdateRowRequest::Swap(UpdateRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    attribute_columns_.Swap(&other->attribute_columns_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRowRequest_descriptor_;
  metadata.reflection = UpdateRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateRowResponse::kConsumedFieldNumber;
#endif  // !_MSC_VER

UpdateRowResponse::UpdateRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.UpdateRowResponse)
}

void UpdateRowResponse::InitAsDefaultInstance() {
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
}

UpdateRowResponse::UpdateRowResponse(const UpdateRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.UpdateRowResponse)
}

void UpdateRowResponse::SharedCtor() {
  _cached_size_ = 0;
  consumed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRowResponse::~UpdateRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  SharedDtor();
}

void UpdateRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete consumed_;
  }
}

void UpdateRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRowResponse_descriptor_;
}

const UpdateRowResponse& UpdateRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

UpdateRowResponse* UpdateRowResponse::default_instance_ = NULL;

UpdateRowResponse* UpdateRowResponse::New() const {
  return new UpdateRowResponse;
}

void UpdateRowResponse::Clear() {
  if (has_consumed()) {
    if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  return false;
#undef DO_
}

void UpdateRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->consumed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.UpdateRowResponse)
}

::google::protobuf::uint8* UpdateRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->consumed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.UpdateRowResponse)
  return target;
}

int UpdateRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateRowResponse::MergeFrom(const UpdateRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRowResponse::CopyFrom(const UpdateRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  return true;
}

void UpdateRowResponse::Swap(UpdateRowResponse* other) {
  if (other != this) {
    std::swap(consumed_, other->consumed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRowResponse_descriptor_;
  metadata.reflection = UpdateRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PutRowRequest::kTableNameFieldNumber;
const int PutRowRequest::kConditionFieldNumber;
const int PutRowRequest::kPrimaryKeyFieldNumber;
const int PutRowRequest::kAttributeColumnsFieldNumber;
#endif  // !_MSC_VER

PutRowRequest::PutRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.PutRowRequest)
}

void PutRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

PutRowRequest::PutRowRequest(const PutRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.PutRowRequest)
}

void PutRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PutRowRequest::~PutRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.PutRowRequest)
  SharedDtor();
}

void PutRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
    delete condition_;
  }
}

void PutRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutRowRequest_descriptor_;
}

const PutRowRequest& PutRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

PutRowRequest* PutRowRequest::default_instance_ = NULL;

PutRowRequest* PutRowRequest::New() const {
  return new PutRowRequest;
}

void PutRowRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        table_name_->clear();
      }
    }
    if (has_condition()) {
      if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
    }
  }
  primary_key_.Clear();
  attribute_columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PutRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.PutRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
      case 2: {
        if (tag == 18) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
      case 3: {
        if (tag == 26) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        if (input->ExpectTag(34)) goto parse_attribute_columns;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
      case 4: {
        if (tag == 34) {
         parse_attribute_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attribute_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.PutRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.PutRowRequest)
  return false;
#undef DO_
}

void PutRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.PutRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attribute_columns(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.PutRowRequest)
}

::google::protobuf::uint8* PutRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.PutRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attribute_columns(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.PutRowRequest)
  return target;
}

int PutRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
  total_size += 1 * this->attribute_columns_size();
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_columns(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PutRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PutRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PutRowRequest::MergeFrom(const PutRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  attribute_columns_.MergeFrom(from.attribute_columns_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PutRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRowRequest::CopyFrom(const PutRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attribute_columns())) return false;
  return true;
}

void PutRowRequest::Swap(PutRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    attribute_columns_.Swap(&other->attribute_columns_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PutRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutRowRequest_descriptor_;
  metadata.reflection = PutRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PutRowResponse::kConsumedFieldNumber;
#endif  // !_MSC_VER

PutRowResponse::PutRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.PutRowResponse)
}

void PutRowResponse::InitAsDefaultInstance() {
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
}

PutRowResponse::PutRowResponse(const PutRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.PutRowResponse)
}

void PutRowResponse::SharedCtor() {
  _cached_size_ = 0;
  consumed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PutRowResponse::~PutRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.PutRowResponse)
  SharedDtor();
}

void PutRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete consumed_;
  }
}

void PutRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutRowResponse_descriptor_;
}

const PutRowResponse& PutRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

PutRowResponse* PutRowResponse::default_instance_ = NULL;

PutRowResponse* PutRowResponse::New() const {
  return new PutRowResponse;
}

void PutRowResponse::Clear() {
  if (has_consumed()) {
    if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PutRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.PutRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.PutRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.PutRowResponse)
  return false;
#undef DO_
}

void PutRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.PutRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->consumed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.PutRowResponse)
}

::google::protobuf::uint8* PutRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.PutRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->consumed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.PutRowResponse)
  return target;
}

int PutRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PutRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PutRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PutRowResponse::MergeFrom(const PutRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PutRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRowResponse::CopyFrom(const PutRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  return true;
}

void PutRowResponse::Swap(PutRowResponse* other) {
  if (other != this) {
    std::swap(consumed_, other->consumed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PutRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutRowResponse_descriptor_;
  metadata.reflection = PutRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteRowRequest::kTableNameFieldNumber;
const int DeleteRowRequest::kConditionFieldNumber;
const int DeleteRowRequest::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

DeleteRowRequest::DeleteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DeleteRowRequest)
}

void DeleteRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

DeleteRowRequest::DeleteRowRequest(const DeleteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DeleteRowRequest)
}

void DeleteRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteRowRequest::~DeleteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  SharedDtor();
}

void DeleteRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
    delete condition_;
  }
}

void DeleteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteRowRequest_descriptor_;
}

const DeleteRowRequest& DeleteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DeleteRowRequest* DeleteRowRequest::default_instance_ = NULL;

DeleteRowRequest* DeleteRowRequest::New() const {
  return new DeleteRowRequest;
}

void DeleteRowRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        table_name_->clear();
      }
    }
    if (has_condition()) {
      if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
    }
  }
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
      case 2: {
        if (tag == 18) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
      case 3: {
        if (tag == 26) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  return false;
#undef DO_
}

void DeleteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DeleteRowRequest)
}

::google::protobuf::uint8* DeleteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DeleteRowRequest)
  return target;
}

int DeleteRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteRowRequest::MergeFrom(const DeleteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRowRequest::CopyFrom(const DeleteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void DeleteRowRequest::Swap(DeleteRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteRowRequest_descriptor_;
  metadata.reflection = DeleteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteRowResponse::kConsumedFieldNumber;
#endif  // !_MSC_VER

DeleteRowResponse::DeleteRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DeleteRowResponse)
}

void DeleteRowResponse::InitAsDefaultInstance() {
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
}

DeleteRowResponse::DeleteRowResponse(const DeleteRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DeleteRowResponse)
}

void DeleteRowResponse::SharedCtor() {
  _cached_size_ = 0;
  consumed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteRowResponse::~DeleteRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  SharedDtor();
}

void DeleteRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete consumed_;
  }
}

void DeleteRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteRowResponse_descriptor_;
}

const DeleteRowResponse& DeleteRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DeleteRowResponse* DeleteRowResponse::default_instance_ = NULL;

DeleteRowResponse* DeleteRowResponse::New() const {
  return new DeleteRowResponse;
}

void DeleteRowResponse::Clear() {
  if (has_consumed()) {
    if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  return false;
#undef DO_
}

void DeleteRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->consumed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DeleteRowResponse)
}

::google::protobuf::uint8* DeleteRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->consumed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DeleteRowResponse)
  return target;
}

int DeleteRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteRowResponse::MergeFrom(const DeleteRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRowResponse::CopyFrom(const DeleteRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  return true;
}

void DeleteRowResponse::Swap(DeleteRowResponse* other) {
  if (other != this) {
    std::swap(consumed_, other->consumed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteRowResponse_descriptor_;
  metadata.reflection = DeleteRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RowInBatchGetRowRequest::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

RowInBatchGetRowRequest::RowInBatchGetRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
}

void RowInBatchGetRowRequest::InitAsDefaultInstance() {
}

RowInBatchGetRowRequest::RowInBatchGetRowRequest(const RowInBatchGetRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
}

void RowInBatchGetRowRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RowInBatchGetRowRequest::~RowInBatchGetRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  SharedDtor();
}

void RowInBatchGetRowRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RowInBatchGetRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowInBatchGetRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowInBatchGetRowRequest_descriptor_;
}

const RowInBatchGetRowRequest& RowInBatchGetRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

RowInBatchGetRowRequest* RowInBatchGetRowRequest::default_instance_ = NULL;

RowInBatchGetRowRequest* RowInBatchGetRowRequest::New() const {
  return new RowInBatchGetRowRequest;
}

void RowInBatchGetRowRequest::Clear() {
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RowInBatchGetRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
      case 1: {
        if (tag == 10) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  return false;
#undef DO_
}

void RowInBatchGetRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
}

::google::protobuf::uint8* RowInBatchGetRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
  return target;
}

int RowInBatchGetRowRequest::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowInBatchGetRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RowInBatchGetRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RowInBatchGetRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RowInBatchGetRowRequest::MergeFrom(const RowInBatchGetRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RowInBatchGetRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowInBatchGetRowRequest::CopyFrom(const RowInBatchGetRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowInBatchGetRowRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void RowInBatchGetRowRequest::Swap(RowInBatchGetRowRequest* other) {
  if (other != this) {
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RowInBatchGetRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowInBatchGetRowRequest_descriptor_;
  metadata.reflection = RowInBatchGetRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TableInBatchGetRowRequest::kTableNameFieldNumber;
const int TableInBatchGetRowRequest::kRowsFieldNumber;
const int TableInBatchGetRowRequest::kColumnsToGetFieldNumber;
#endif  // !_MSC_VER

TableInBatchGetRowRequest::TableInBatchGetRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
}

void TableInBatchGetRowRequest::InitAsDefaultInstance() {
}

TableInBatchGetRowRequest::TableInBatchGetRowRequest(const TableInBatchGetRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
}

void TableInBatchGetRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TableInBatchGetRowRequest::~TableInBatchGetRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  SharedDtor();
}

void TableInBatchGetRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void TableInBatchGetRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInBatchGetRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableInBatchGetRowRequest_descriptor_;
}

const TableInBatchGetRowRequest& TableInBatchGetRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

TableInBatchGetRowRequest* TableInBatchGetRowRequest::default_instance_ = NULL;

TableInBatchGetRowRequest* TableInBatchGetRowRequest::New() const {
  return new TableInBatchGetRowRequest;
}

void TableInBatchGetRowRequest::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  rows_.Clear();
  columns_to_get_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TableInBatchGetRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
      case 2: {
        if (tag == 18) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rows;
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        break;
      }

      // repeated string columns_to_get = 3;
      case 3: {
        if (tag == 26) {
         parse_columns_to_get:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_columns_to_get()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->columns_to_get(this->columns_to_get_size() - 1).data(),
            this->columns_to_get(this->columns_to_get_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "columns_to_get");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  return false;
#undef DO_
}

void TableInBatchGetRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
  for (int i = 0; i < this->rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rows(i), output);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->columns_to_get(i).data(), this->columns_to_get(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "columns_to_get");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->columns_to_get(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
}

::google::protobuf::uint8* TableInBatchGetRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
  for (int i = 0; i < this->rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rows(i), target);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->columns_to_get(i).data(), this->columns_to_get(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "columns_to_get");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->columns_to_get(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
  return target;
}

int TableInBatchGetRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  // repeated string columns_to_get = 3;
  total_size += 1 * this->columns_to_get_size();
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->columns_to_get(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInBatchGetRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TableInBatchGetRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TableInBatchGetRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TableInBatchGetRowRequest::MergeFrom(const TableInBatchGetRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  rows_.MergeFrom(from.rows_);
  columns_to_get_.MergeFrom(from.columns_to_get_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TableInBatchGetRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInBatchGetRowRequest::CopyFrom(const TableInBatchGetRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInBatchGetRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void TableInBatchGetRowRequest::Swap(TableInBatchGetRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    rows_.Swap(&other->rows_);
    columns_to_get_.Swap(&other->columns_to_get_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TableInBatchGetRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableInBatchGetRowRequest_descriptor_;
  metadata.reflection = TableInBatchGetRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BatchGetRowRequest::kTablesFieldNumber;
#endif  // !_MSC_VER

BatchGetRowRequest::BatchGetRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
}

void BatchGetRowRequest::InitAsDefaultInstance() {
}

BatchGetRowRequest::BatchGetRowRequest(const BatchGetRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
}

void BatchGetRowRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchGetRowRequest::~BatchGetRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  SharedDtor();
}

void BatchGetRowRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchGetRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchGetRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchGetRowRequest_descriptor_;
}

const BatchGetRowRequest& BatchGetRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

BatchGetRowRequest* BatchGetRowRequest::default_instance_ = NULL;

BatchGetRowRequest* BatchGetRowRequest::New() const {
  return new BatchGetRowRequest;
}

void BatchGetRowRequest::Clear() {
  tables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BatchGetRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
      case 1: {
        if (tag == 10) {
         parse_tables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  return false;
#undef DO_
}

void BatchGetRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
}

::google::protobuf::uint8* BatchGetRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
  return target;
}

int BatchGetRowRequest::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
  total_size += 1 * this->tables_size();
  for (int i = 0; i < this->tables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchGetRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BatchGetRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BatchGetRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BatchGetRowRequest::MergeFrom(const BatchGetRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  tables_.MergeFrom(from.tables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BatchGetRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetRowRequest::CopyFrom(const BatchGetRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetRowRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tables())) return false;
  return true;
}

void BatchGetRowRequest::Swap(BatchGetRowRequest* other) {
  if (other != this) {
    tables_.Swap(&other->tables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BatchGetRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchGetRowRequest_descriptor_;
  metadata.reflection = BatchGetRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RowInBatchGetRowResponse::kIsOkFieldNumber;
const int RowInBatchGetRowResponse::kErrorFieldNumber;
const int RowInBatchGetRowResponse::kConsumedFieldNumber;
const int RowInBatchGetRowResponse::kRowFieldNumber;
#endif  // !_MSC_VER

RowInBatchGetRowResponse::RowInBatchGetRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
}

void RowInBatchGetRowResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::com::aliyun::cloudservice::ots2::Error*>(&::com::aliyun::cloudservice::ots2::Error::default_instance());
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
  row_ = const_cast< ::com::aliyun::cloudservice::ots2::Row*>(&::com::aliyun::cloudservice::ots2::Row::default_instance());
}

RowInBatchGetRowResponse::RowInBatchGetRowResponse(const RowInBatchGetRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
}

void RowInBatchGetRowResponse::SharedCtor() {
  _cached_size_ = 0;
  is_ok_ = true;
  error_ = NULL;
  consumed_ = NULL;
  row_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RowInBatchGetRowResponse::~RowInBatchGetRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  SharedDtor();
}

void RowInBatchGetRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
    delete consumed_;
    delete row_;
  }
}

void RowInBatchGetRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowInBatchGetRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowInBatchGetRowResponse_descriptor_;
}

const RowInBatchGetRowResponse& RowInBatchGetRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

RowInBatchGetRowResponse* RowInBatchGetRowResponse::default_instance_ = NULL;

RowInBatchGetRowResponse* RowInBatchGetRowResponse::New() const {
  return new RowInBatchGetRowResponse;
}

void RowInBatchGetRowResponse::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    is_ok_ = true;
    if (has_error()) {
      if (error_ != NULL) error_->::com::aliyun::cloudservice::ots2::Error::Clear();
    }
    if (has_consumed()) {
      if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
    }
    if (has_row()) {
      if (row_ != NULL) row_->::com::aliyun::cloudservice::ots2::Row::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RowInBatchGetRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_ok = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ok_)));
          set_has_is_ok();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.Error error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_consumed;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
      case 3: {
        if (tag == 26) {
         parse_consumed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_row;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.Row row = 4;
      case 4: {
        if (tag == 34) {
         parse_row:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_row()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  return false;
#undef DO_
}

void RowInBatchGetRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  // required bool is_ok = 1 [default = true];
  if (has_is_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_ok(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->error(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->consumed(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.Row row = 4;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->row(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
}

::google::protobuf::uint8* RowInBatchGetRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  // required bool is_ok = 1 [default = true];
  if (has_is_ok()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_ok(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->error(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->consumed(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.Row row = 4;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->row(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
  return target;
}

int RowInBatchGetRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool is_ok = 1 [default = true];
    if (has_is_ok()) {
      total_size += 1 + 1;
    }

    // optional .com.aliyun.cloudservice.ots2.Error error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

    // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

    // optional .com.aliyun.cloudservice.ots2.Row row = 4;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->row());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowInBatchGetRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RowInBatchGetRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RowInBatchGetRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RowInBatchGetRowResponse::MergeFrom(const RowInBatchGetRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_ok()) {
      set_is_ok(from.is_ok());
    }
    if (from.has_error()) {
      mutable_error()->::com::aliyun::cloudservice::ots2::Error::MergeFrom(from.error());
    }
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
    if (from.has_row()) {
      mutable_row()->::com::aliyun::cloudservice::ots2::Row::MergeFrom(from.row());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RowInBatchGetRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowInBatchGetRowResponse::CopyFrom(const RowInBatchGetRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowInBatchGetRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  if (has_row()) {
    if (!this->row().IsInitialized()) return false;
  }
  return true;
}

void RowInBatchGetRowResponse::Swap(RowInBatchGetRowResponse* other) {
  if (other != this) {
    std::swap(is_ok_, other->is_ok_);
    std::swap(error_, other->error_);
    std::swap(consumed_, other->consumed_);
    std::swap(row_, other->row_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RowInBatchGetRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowInBatchGetRowResponse_descriptor_;
  metadata.reflection = RowInBatchGetRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TableInBatchGetRowResponse::kTableNameFieldNumber;
const int TableInBatchGetRowResponse::kRowsFieldNumber;
#endif  // !_MSC_VER

TableInBatchGetRowResponse::TableInBatchGetRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
}

void TableInBatchGetRowResponse::InitAsDefaultInstance() {
}

TableInBatchGetRowResponse::TableInBatchGetRowResponse(const TableInBatchGetRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
}

void TableInBatchGetRowResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TableInBatchGetRowResponse::~TableInBatchGetRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  SharedDtor();
}

void TableInBatchGetRowResponse::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void TableInBatchGetRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInBatchGetRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableInBatchGetRowResponse_descriptor_;
}

const TableInBatchGetRowResponse& TableInBatchGetRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

TableInBatchGetRowResponse* TableInBatchGetRowResponse::default_instance_ = NULL;

TableInBatchGetRowResponse* TableInBatchGetRowResponse::New() const {
  return new TableInBatchGetRowResponse;
}

void TableInBatchGetRowResponse::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TableInBatchGetRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
      case 2: {
        if (tag == 18) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  return false;
#undef DO_
}

void TableInBatchGetRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
  for (int i = 0; i < this->rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rows(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
}

::google::protobuf::uint8* TableInBatchGetRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
  for (int i = 0; i < this->rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rows(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
  return target;
}

int TableInBatchGetRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInBatchGetRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TableInBatchGetRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TableInBatchGetRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TableInBatchGetRowResponse::MergeFrom(const TableInBatchGetRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TableInBatchGetRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInBatchGetRowResponse::CopyFrom(const TableInBatchGetRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInBatchGetRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void TableInBatchGetRowResponse::Swap(TableInBatchGetRowResponse* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    rows_.Swap(&other->rows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TableInBatchGetRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableInBatchGetRowResponse_descriptor_;
  metadata.reflection = TableInBatchGetRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BatchGetRowResponse::kTablesFieldNumber;
#endif  // !_MSC_VER

BatchGetRowResponse::BatchGetRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
}

void BatchGetRowResponse::InitAsDefaultInstance() {
}

BatchGetRowResponse::BatchGetRowResponse(const BatchGetRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
}

void BatchGetRowResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchGetRowResponse::~BatchGetRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  SharedDtor();
}

void BatchGetRowResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchGetRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchGetRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchGetRowResponse_descriptor_;
}

const BatchGetRowResponse& BatchGetRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

BatchGetRowResponse* BatchGetRowResponse::default_instance_ = NULL;

BatchGetRowResponse* BatchGetRowResponse::New() const {
  return new BatchGetRowResponse;
}

void BatchGetRowResponse::Clear() {
  tables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BatchGetRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
      case 1: {
        if (tag == 10) {
         parse_tables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  return false;
#undef DO_
}

void BatchGetRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
}

::google::protobuf::uint8* BatchGetRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
  return target;
}

int BatchGetRowResponse::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
  total_size += 1 * this->tables_size();
  for (int i = 0; i < this->tables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchGetRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BatchGetRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BatchGetRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BatchGetRowResponse::MergeFrom(const BatchGetRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  tables_.MergeFrom(from.tables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BatchGetRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetRowResponse::CopyFrom(const BatchGetRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetRowResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tables())) return false;
  return true;
}

void BatchGetRowResponse::Swap(BatchGetRowResponse* other) {
  if (other != this) {
    tables_.Swap(&other->tables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BatchGetRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchGetRowResponse_descriptor_;
  metadata.reflection = BatchGetRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PutRowInBatchWriteRowRequest::kConditionFieldNumber;
const int PutRowInBatchWriteRowRequest::kPrimaryKeyFieldNumber;
const int PutRowInBatchWriteRowRequest::kAttributeColumnsFieldNumber;
#endif  // !_MSC_VER

PutRowInBatchWriteRowRequest::PutRowInBatchWriteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
}

void PutRowInBatchWriteRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

PutRowInBatchWriteRowRequest::PutRowInBatchWriteRowRequest(const PutRowInBatchWriteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
}

void PutRowInBatchWriteRowRequest::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PutRowInBatchWriteRowRequest::~PutRowInBatchWriteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  SharedDtor();
}

void PutRowInBatchWriteRowRequest::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
  }
}

void PutRowInBatchWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRowInBatchWriteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutRowInBatchWriteRowRequest_descriptor_;
}

const PutRowInBatchWriteRowRequest& PutRowInBatchWriteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

PutRowInBatchWriteRowRequest* PutRowInBatchWriteRowRequest::default_instance_ = NULL;

PutRowInBatchWriteRowRequest* PutRowInBatchWriteRowRequest::New() const {
  return new PutRowInBatchWriteRowRequest;
}

void PutRowInBatchWriteRowRequest::Clear() {
  if (has_condition()) {
    if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  }
  primary_key_.Clear();
  attribute_columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PutRowInBatchWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectTag(26)) goto parse_attribute_columns;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
      case 3: {
        if (tag == 26) {
         parse_attribute_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_attribute_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  return false;
#undef DO_
}

void PutRowInBatchWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attribute_columns(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
}

::google::protobuf::uint8* PutRowInBatchWriteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attribute_columns(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
  return target;
}

int PutRowInBatchWriteRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
  total_size += 1 * this->attribute_columns_size();
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_columns(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRowInBatchWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PutRowInBatchWriteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PutRowInBatchWriteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PutRowInBatchWriteRowRequest::MergeFrom(const PutRowInBatchWriteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  attribute_columns_.MergeFrom(from.attribute_columns_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PutRowInBatchWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRowInBatchWriteRowRequest::CopyFrom(const PutRowInBatchWriteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRowInBatchWriteRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attribute_columns())) return false;
  return true;
}

void PutRowInBatchWriteRowRequest::Swap(PutRowInBatchWriteRowRequest* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    attribute_columns_.Swap(&other->attribute_columns_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PutRowInBatchWriteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutRowInBatchWriteRowRequest_descriptor_;
  metadata.reflection = PutRowInBatchWriteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateRowInBatchWriteRowRequest::kConditionFieldNumber;
const int UpdateRowInBatchWriteRowRequest::kPrimaryKeyFieldNumber;
const int UpdateRowInBatchWriteRowRequest::kAttributeColumnsFieldNumber;
#endif  // !_MSC_VER

UpdateRowInBatchWriteRowRequest::UpdateRowInBatchWriteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
}

void UpdateRowInBatchWriteRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

UpdateRowInBatchWriteRowRequest::UpdateRowInBatchWriteRowRequest(const UpdateRowInBatchWriteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
}

void UpdateRowInBatchWriteRowRequest::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRowInBatchWriteRowRequest::~UpdateRowInBatchWriteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  SharedDtor();
}

void UpdateRowInBatchWriteRowRequest::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
  }
}

void UpdateRowInBatchWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRowInBatchWriteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRowInBatchWriteRowRequest_descriptor_;
}

const UpdateRowInBatchWriteRowRequest& UpdateRowInBatchWriteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

UpdateRowInBatchWriteRowRequest* UpdateRowInBatchWriteRowRequest::default_instance_ = NULL;

UpdateRowInBatchWriteRowRequest* UpdateRowInBatchWriteRowRequest::New() const {
  return new UpdateRowInBatchWriteRowRequest;
}

void UpdateRowInBatchWriteRowRequest::Clear() {
  if (has_condition()) {
    if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  }
  primary_key_.Clear();
  attribute_columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateRowInBatchWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectTag(26)) goto parse_attribute_columns;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
      case 3: {
        if (tag == 26) {
         parse_attribute_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_attribute_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  return false;
#undef DO_
}

void UpdateRowInBatchWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attribute_columns(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
}

::google::protobuf::uint8* UpdateRowInBatchWriteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attribute_columns(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
  return target;
}

int UpdateRowInBatchWriteRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
  total_size += 1 * this->attribute_columns_size();
  for (int i = 0; i < this->attribute_columns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_columns(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRowInBatchWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateRowInBatchWriteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateRowInBatchWriteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateRowInBatchWriteRowRequest::MergeFrom(const UpdateRowInBatchWriteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  attribute_columns_.MergeFrom(from.attribute_columns_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateRowInBatchWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRowInBatchWriteRowRequest::CopyFrom(const UpdateRowInBatchWriteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRowInBatchWriteRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attribute_columns())) return false;
  return true;
}

void UpdateRowInBatchWriteRowRequest::Swap(UpdateRowInBatchWriteRowRequest* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    attribute_columns_.Swap(&other->attribute_columns_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateRowInBatchWriteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRowInBatchWriteRowRequest_descriptor_;
  metadata.reflection = UpdateRowInBatchWriteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteRowInBatchWriteRowRequest::kConditionFieldNumber;
const int DeleteRowInBatchWriteRowRequest::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

DeleteRowInBatchWriteRowRequest::DeleteRowInBatchWriteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
}

void DeleteRowInBatchWriteRowRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::com::aliyun::cloudservice::ots2::Condition*>(&::com::aliyun::cloudservice::ots2::Condition::default_instance());
}

DeleteRowInBatchWriteRowRequest::DeleteRowInBatchWriteRowRequest(const DeleteRowInBatchWriteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
}

void DeleteRowInBatchWriteRowRequest::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteRowInBatchWriteRowRequest::~DeleteRowInBatchWriteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  SharedDtor();
}

void DeleteRowInBatchWriteRowRequest::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
  }
}

void DeleteRowInBatchWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRowInBatchWriteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteRowInBatchWriteRowRequest_descriptor_;
}

const DeleteRowInBatchWriteRowRequest& DeleteRowInBatchWriteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

DeleteRowInBatchWriteRowRequest* DeleteRowInBatchWriteRowRequest::default_instance_ = NULL;

DeleteRowInBatchWriteRowRequest* DeleteRowInBatchWriteRowRequest::New() const {
  return new DeleteRowInBatchWriteRowRequest;
}

void DeleteRowInBatchWriteRowRequest::Clear() {
  if (has_condition()) {
    if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  }
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteRowInBatchWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  return false;
#undef DO_
}

void DeleteRowInBatchWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
}

::google::protobuf::uint8* DeleteRowInBatchWriteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
  return target;
}

int DeleteRowInBatchWriteRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRowInBatchWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteRowInBatchWriteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteRowInBatchWriteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteRowInBatchWriteRowRequest::MergeFrom(const DeleteRowInBatchWriteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  primary_key_.MergeFrom(from.primary_key_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::com::aliyun::cloudservice::ots2::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteRowInBatchWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRowInBatchWriteRowRequest::CopyFrom(const DeleteRowInBatchWriteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRowInBatchWriteRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_condition()) {
    if (!this->condition().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void DeleteRowInBatchWriteRowRequest::Swap(DeleteRowInBatchWriteRowRequest* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteRowInBatchWriteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteRowInBatchWriteRowRequest_descriptor_;
  metadata.reflection = DeleteRowInBatchWriteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TableInBatchWriteRowRequest::kTableNameFieldNumber;
const int TableInBatchWriteRowRequest::kPutRowsFieldNumber;
const int TableInBatchWriteRowRequest::kUpdateRowsFieldNumber;
const int TableInBatchWriteRowRequest::kDeleteRowsFieldNumber;
#endif  // !_MSC_VER

TableInBatchWriteRowRequest::TableInBatchWriteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
}

void TableInBatchWriteRowRequest::InitAsDefaultInstance() {
}

TableInBatchWriteRowRequest::TableInBatchWriteRowRequest(const TableInBatchWriteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
}

void TableInBatchWriteRowRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TableInBatchWriteRowRequest::~TableInBatchWriteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  SharedDtor();
}

void TableInBatchWriteRowRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void TableInBatchWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInBatchWriteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableInBatchWriteRowRequest_descriptor_;
}

const TableInBatchWriteRowRequest& TableInBatchWriteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

TableInBatchWriteRowRequest* TableInBatchWriteRowRequest::default_instance_ = NULL;

TableInBatchWriteRowRequest* TableInBatchWriteRowRequest::New() const {
  return new TableInBatchWriteRowRequest;
}

void TableInBatchWriteRowRequest::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  put_rows_.Clear();
  update_rows_.Clear();
  delete_rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TableInBatchWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_put_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
      case 2: {
        if (tag == 18) {
         parse_put_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_put_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_put_rows;
        if (input->ExpectTag(26)) goto parse_update_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
      case 3: {
        if (tag == 26) {
         parse_update_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_update_rows;
        if (input->ExpectTag(34)) goto parse_delete_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
      case 4: {
        if (tag == 34) {
         parse_delete_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_delete_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_delete_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  return false;
#undef DO_
}

void TableInBatchWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
  for (int i = 0; i < this->put_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->put_rows(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
  for (int i = 0; i < this->update_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->update_rows(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
  for (int i = 0; i < this->delete_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->delete_rows(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
}

::google::protobuf::uint8* TableInBatchWriteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
  for (int i = 0; i < this->put_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->put_rows(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
  for (int i = 0; i < this->update_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->update_rows(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
  for (int i = 0; i < this->delete_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->delete_rows(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
  return target;
}

int TableInBatchWriteRowRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
  total_size += 1 * this->put_rows_size();
  for (int i = 0; i < this->put_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->put_rows(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
  total_size += 1 * this->update_rows_size();
  for (int i = 0; i < this->update_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->update_rows(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
  total_size += 1 * this->delete_rows_size();
  for (int i = 0; i < this->delete_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->delete_rows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInBatchWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TableInBatchWriteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TableInBatchWriteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TableInBatchWriteRowRequest::MergeFrom(const TableInBatchWriteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  put_rows_.MergeFrom(from.put_rows_);
  update_rows_.MergeFrom(from.update_rows_);
  delete_rows_.MergeFrom(from.delete_rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TableInBatchWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInBatchWriteRowRequest::CopyFrom(const TableInBatchWriteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInBatchWriteRowRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->put_rows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->update_rows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delete_rows())) return false;
  return true;
}

void TableInBatchWriteRowRequest::Swap(TableInBatchWriteRowRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    put_rows_.Swap(&other->put_rows_);
    update_rows_.Swap(&other->update_rows_);
    delete_rows_.Swap(&other->delete_rows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TableInBatchWriteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableInBatchWriteRowRequest_descriptor_;
  metadata.reflection = TableInBatchWriteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BatchWriteRowRequest::kTablesFieldNumber;
#endif  // !_MSC_VER

BatchWriteRowRequest::BatchWriteRowRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
}

void BatchWriteRowRequest::InitAsDefaultInstance() {
}

BatchWriteRowRequest::BatchWriteRowRequest(const BatchWriteRowRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
}

void BatchWriteRowRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchWriteRowRequest::~BatchWriteRowRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  SharedDtor();
}

void BatchWriteRowRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchWriteRowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchWriteRowRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchWriteRowRequest_descriptor_;
}

const BatchWriteRowRequest& BatchWriteRowRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

BatchWriteRowRequest* BatchWriteRowRequest::default_instance_ = NULL;

BatchWriteRowRequest* BatchWriteRowRequest::New() const {
  return new BatchWriteRowRequest;
}

void BatchWriteRowRequest::Clear() {
  tables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BatchWriteRowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
      case 1: {
        if (tag == 10) {
         parse_tables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  return false;
#undef DO_
}

void BatchWriteRowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
}

::google::protobuf::uint8* BatchWriteRowRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
  return target;
}

int BatchWriteRowRequest::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
  total_size += 1 * this->tables_size();
  for (int i = 0; i < this->tables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchWriteRowRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BatchWriteRowRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BatchWriteRowRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BatchWriteRowRequest::MergeFrom(const BatchWriteRowRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  tables_.MergeFrom(from.tables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BatchWriteRowRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchWriteRowRequest::CopyFrom(const BatchWriteRowRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchWriteRowRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tables())) return false;
  return true;
}

void BatchWriteRowRequest::Swap(BatchWriteRowRequest* other) {
  if (other != this) {
    tables_.Swap(&other->tables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BatchWriteRowRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchWriteRowRequest_descriptor_;
  metadata.reflection = BatchWriteRowRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RowInBatchWriteRowResponse::kIsOkFieldNumber;
const int RowInBatchWriteRowResponse::kErrorFieldNumber;
const int RowInBatchWriteRowResponse::kConsumedFieldNumber;
#endif  // !_MSC_VER

RowInBatchWriteRowResponse::RowInBatchWriteRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
}

void RowInBatchWriteRowResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::com::aliyun::cloudservice::ots2::Error*>(&::com::aliyun::cloudservice::ots2::Error::default_instance());
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
}

RowInBatchWriteRowResponse::RowInBatchWriteRowResponse(const RowInBatchWriteRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
}

void RowInBatchWriteRowResponse::SharedCtor() {
  _cached_size_ = 0;
  is_ok_ = true;
  error_ = NULL;
  consumed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RowInBatchWriteRowResponse::~RowInBatchWriteRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  SharedDtor();
}

void RowInBatchWriteRowResponse::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
    delete consumed_;
  }
}

void RowInBatchWriteRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowInBatchWriteRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowInBatchWriteRowResponse_descriptor_;
}

const RowInBatchWriteRowResponse& RowInBatchWriteRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

RowInBatchWriteRowResponse* RowInBatchWriteRowResponse::default_instance_ = NULL;

RowInBatchWriteRowResponse* RowInBatchWriteRowResponse::New() const {
  return new RowInBatchWriteRowResponse;
}

void RowInBatchWriteRowResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    is_ok_ = true;
    if (has_error()) {
      if (error_ != NULL) error_->::com::aliyun::cloudservice::ots2::Error::Clear();
    }
    if (has_consumed()) {
      if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RowInBatchWriteRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_ok = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ok_)));
          set_has_is_ok();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.Error error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_consumed;
        break;
      }

      // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
      case 3: {
        if (tag == 26) {
         parse_consumed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  return false;
#undef DO_
}

void RowInBatchWriteRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  // required bool is_ok = 1 [default = true];
  if (has_is_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_ok(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->error(), output);
  }

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->consumed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
}

::google::protobuf::uint8* RowInBatchWriteRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  // required bool is_ok = 1 [default = true];
  if (has_is_ok()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_ok(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->error(), target);
  }

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->consumed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
  return target;
}

int RowInBatchWriteRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool is_ok = 1 [default = true];
    if (has_is_ok()) {
      total_size += 1 + 1;
    }

    // optional .com.aliyun.cloudservice.ots2.Error error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

    // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowInBatchWriteRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RowInBatchWriteRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RowInBatchWriteRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RowInBatchWriteRowResponse::MergeFrom(const RowInBatchWriteRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_ok()) {
      set_is_ok(from.is_ok());
    }
    if (from.has_error()) {
      mutable_error()->::com::aliyun::cloudservice::ots2::Error::MergeFrom(from.error());
    }
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RowInBatchWriteRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowInBatchWriteRowResponse::CopyFrom(const RowInBatchWriteRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowInBatchWriteRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  return true;
}

void RowInBatchWriteRowResponse::Swap(RowInBatchWriteRowResponse* other) {
  if (other != this) {
    std::swap(is_ok_, other->is_ok_);
    std::swap(error_, other->error_);
    std::swap(consumed_, other->consumed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RowInBatchWriteRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowInBatchWriteRowResponse_descriptor_;
  metadata.reflection = RowInBatchWriteRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TableInBatchWriteRowResponse::kTableNameFieldNumber;
const int TableInBatchWriteRowResponse::kPutRowsFieldNumber;
const int TableInBatchWriteRowResponse::kUpdateRowsFieldNumber;
const int TableInBatchWriteRowResponse::kDeleteRowsFieldNumber;
#endif  // !_MSC_VER

TableInBatchWriteRowResponse::TableInBatchWriteRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
}

void TableInBatchWriteRowResponse::InitAsDefaultInstance() {
}

TableInBatchWriteRowResponse::TableInBatchWriteRowResponse(const TableInBatchWriteRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
}

void TableInBatchWriteRowResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TableInBatchWriteRowResponse::~TableInBatchWriteRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  SharedDtor();
}

void TableInBatchWriteRowResponse::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void TableInBatchWriteRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TableInBatchWriteRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TableInBatchWriteRowResponse_descriptor_;
}

const TableInBatchWriteRowResponse& TableInBatchWriteRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

TableInBatchWriteRowResponse* TableInBatchWriteRowResponse::default_instance_ = NULL;

TableInBatchWriteRowResponse* TableInBatchWriteRowResponse::New() const {
  return new TableInBatchWriteRowResponse;
}

void TableInBatchWriteRowResponse::Clear() {
  if (has_table_name()) {
    if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      table_name_->clear();
    }
  }
  put_rows_.Clear();
  update_rows_.Clear();
  delete_rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TableInBatchWriteRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_put_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
      case 2: {
        if (tag == 18) {
         parse_put_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_put_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_put_rows;
        if (input->ExpectTag(26)) goto parse_update_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
      case 3: {
        if (tag == 26) {
         parse_update_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_update_rows;
        if (input->ExpectTag(34)) goto parse_delete_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
      case 4: {
        if (tag == 34) {
         parse_delete_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_delete_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_delete_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  return false;
#undef DO_
}

void TableInBatchWriteRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
  for (int i = 0; i < this->put_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->put_rows(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
  for (int i = 0; i < this->update_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->update_rows(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
  for (int i = 0; i < this->delete_rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->delete_rows(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
}

::google::protobuf::uint8* TableInBatchWriteRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
  for (int i = 0; i < this->put_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->put_rows(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
  for (int i = 0; i < this->update_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->update_rows(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
  for (int i = 0; i < this->delete_rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->delete_rows(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
  return target;
}

int TableInBatchWriteRowResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
  total_size += 1 * this->put_rows_size();
  for (int i = 0; i < this->put_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->put_rows(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
  total_size += 1 * this->update_rows_size();
  for (int i = 0; i < this->update_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->update_rows(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
  total_size += 1 * this->delete_rows_size();
  for (int i = 0; i < this->delete_rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->delete_rows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TableInBatchWriteRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TableInBatchWriteRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TableInBatchWriteRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TableInBatchWriteRowResponse::MergeFrom(const TableInBatchWriteRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  put_rows_.MergeFrom(from.put_rows_);
  update_rows_.MergeFrom(from.update_rows_);
  delete_rows_.MergeFrom(from.delete_rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TableInBatchWriteRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableInBatchWriteRowResponse::CopyFrom(const TableInBatchWriteRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableInBatchWriteRowResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->put_rows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->update_rows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delete_rows())) return false;
  return true;
}

void TableInBatchWriteRowResponse::Swap(TableInBatchWriteRowResponse* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    put_rows_.Swap(&other->put_rows_);
    update_rows_.Swap(&other->update_rows_);
    delete_rows_.Swap(&other->delete_rows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TableInBatchWriteRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TableInBatchWriteRowResponse_descriptor_;
  metadata.reflection = TableInBatchWriteRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BatchWriteRowResponse::kTablesFieldNumber;
#endif  // !_MSC_VER

BatchWriteRowResponse::BatchWriteRowResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
}

void BatchWriteRowResponse::InitAsDefaultInstance() {
}

BatchWriteRowResponse::BatchWriteRowResponse(const BatchWriteRowResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
}

void BatchWriteRowResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchWriteRowResponse::~BatchWriteRowResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  SharedDtor();
}

void BatchWriteRowResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchWriteRowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchWriteRowResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchWriteRowResponse_descriptor_;
}

const BatchWriteRowResponse& BatchWriteRowResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

BatchWriteRowResponse* BatchWriteRowResponse::default_instance_ = NULL;

BatchWriteRowResponse* BatchWriteRowResponse::New() const {
  return new BatchWriteRowResponse;
}

void BatchWriteRowResponse::Clear() {
  tables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BatchWriteRowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
      case 1: {
        if (tag == 10) {
         parse_tables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  return false;
#undef DO_
}

void BatchWriteRowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
}

::google::protobuf::uint8* BatchWriteRowResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
  for (int i = 0; i < this->tables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
  return target;
}

int BatchWriteRowResponse::ByteSize() const {
  int total_size = 0;

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
  total_size += 1 * this->tables_size();
  for (int i = 0; i < this->tables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchWriteRowResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BatchWriteRowResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BatchWriteRowResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BatchWriteRowResponse::MergeFrom(const BatchWriteRowResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  tables_.MergeFrom(from.tables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BatchWriteRowResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchWriteRowResponse::CopyFrom(const BatchWriteRowResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchWriteRowResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tables())) return false;
  return true;
}

void BatchWriteRowResponse::Swap(BatchWriteRowResponse* other) {
  if (other != this) {
    tables_.Swap(&other->tables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BatchWriteRowResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchWriteRowResponse_descriptor_;
  metadata.reflection = BatchWriteRowResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetRangeRequest::kTableNameFieldNumber;
const int GetRangeRequest::kDirectionFieldNumber;
const int GetRangeRequest::kColumnsToGetFieldNumber;
const int GetRangeRequest::kLimitFieldNumber;
const int GetRangeRequest::kInclusiveStartPrimaryKeyFieldNumber;
const int GetRangeRequest::kExclusiveEndPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

GetRangeRequest::GetRangeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.GetRangeRequest)
}

void GetRangeRequest::InitAsDefaultInstance() {
}

GetRangeRequest::GetRangeRequest(const GetRangeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.GetRangeRequest)
}

void GetRangeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
  limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRangeRequest::~GetRangeRequest() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.GetRangeRequest)
  SharedDtor();
}

void GetRangeRequest::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (this != default_instance_) {
  }
}

void GetRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRangeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRangeRequest_descriptor_;
}

const GetRangeRequest& GetRangeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

GetRangeRequest* GetRangeRequest::default_instance_ = NULL;

GetRangeRequest* GetRangeRequest::New() const {
  return new GetRangeRequest;
}

void GetRangeRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetRangeRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(direction_, limit_);
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        table_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  columns_to_get_.Clear();
  inclusive_start_primary_key_.Clear();
  exclusive_end_primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.GetRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "table_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_direction;
        break;
      }

      // required .com.aliyun.cloudservice.ots2.Direction direction = 2;
      case 2: {
        if (tag == 16) {
         parse_direction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::aliyun::cloudservice::ots2::Direction_IsValid(value)) {
            set_direction(static_cast< ::com::aliyun::cloudservice::ots2::Direction >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        break;
      }

      // repeated string columns_to_get = 3;
      case 3: {
        if (tag == 26) {
         parse_columns_to_get:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_columns_to_get()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->columns_to_get(this->columns_to_get_size() - 1).data(),
            this->columns_to_get(this->columns_to_get_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "columns_to_get");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_columns_to_get;
        if (input->ExpectTag(32)) goto parse_limit;
        break;
      }

      // optional int32 limit = 4;
      case 4: {
        if (tag == 32) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_inclusive_start_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
      case 5: {
        if (tag == 42) {
         parse_inclusive_start_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inclusive_start_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_inclusive_start_primary_key;
        if (input->ExpectTag(50)) goto parse_exclusive_end_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
      case 6: {
        if (tag == 50) {
         parse_exclusive_end_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_exclusive_end_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_exclusive_end_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.GetRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.GetRangeRequest)
  return false;
#undef DO_
}

void GetRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.GetRangeRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // required .com.aliyun.cloudservice.ots2.Direction direction = 2;
  if (has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->columns_to_get(i).data(), this->columns_to_get(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "columns_to_get");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->columns_to_get(i), output);
  }

  // optional int32 limit = 4;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
  for (int i = 0; i < this->inclusive_start_primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->inclusive_start_primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
  for (int i = 0; i < this->exclusive_end_primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->exclusive_end_primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.GetRangeRequest)
}

::google::protobuf::uint8* GetRangeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.GetRangeRequest)
  // required string table_name = 1;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // required .com.aliyun.cloudservice.ots2.Direction direction = 2;
  if (has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // repeated string columns_to_get = 3;
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->columns_to_get(i).data(), this->columns_to_get(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "columns_to_get");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->columns_to_get(i), target);
  }

  // optional int32 limit = 4;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
  for (int i = 0; i < this->inclusive_start_primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->inclusive_start_primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
  for (int i = 0; i < this->exclusive_end_primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->exclusive_end_primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.GetRangeRequest)
  return target;
}

int GetRangeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string table_name = 1;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required .com.aliyun.cloudservice.ots2.Direction direction = 2;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
    }

    // optional int32 limit = 4;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

  }
  // repeated string columns_to_get = 3;
  total_size += 1 * this->columns_to_get_size();
  for (int i = 0; i < this->columns_to_get_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->columns_to_get(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
  total_size += 1 * this->inclusive_start_primary_key_size();
  for (int i = 0; i < this->inclusive_start_primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inclusive_start_primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
  total_size += 1 * this->exclusive_end_primary_key_size();
  for (int i = 0; i < this->exclusive_end_primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exclusive_end_primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRangeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRangeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRangeRequest::MergeFrom(const GetRangeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  columns_to_get_.MergeFrom(from.columns_to_get_);
  inclusive_start_primary_key_.MergeFrom(from.inclusive_start_primary_key_);
  exclusive_end_primary_key_.MergeFrom(from.exclusive_end_primary_key_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_direction()) {
      set_direction(from.direction());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRangeRequest::CopyFrom(const GetRangeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRangeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->inclusive_start_primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->exclusive_end_primary_key())) return false;
  return true;
}

void GetRangeRequest::Swap(GetRangeRequest* other) {
  if (other != this) {
    std::swap(table_name_, other->table_name_);
    std::swap(direction_, other->direction_);
    columns_to_get_.Swap(&other->columns_to_get_);
    std::swap(limit_, other->limit_);
    inclusive_start_primary_key_.Swap(&other->inclusive_start_primary_key_);
    exclusive_end_primary_key_.Swap(&other->exclusive_end_primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRangeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRangeRequest_descriptor_;
  metadata.reflection = GetRangeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetRangeResponse::kConsumedFieldNumber;
const int GetRangeResponse::kNextStartPrimaryKeyFieldNumber;
const int GetRangeResponse::kRowsFieldNumber;
#endif  // !_MSC_VER

GetRangeResponse::GetRangeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.aliyun.cloudservice.ots2.GetRangeResponse)
}

void GetRangeResponse::InitAsDefaultInstance() {
  consumed_ = const_cast< ::com::aliyun::cloudservice::ots2::ConsumedCapacity*>(&::com::aliyun::cloudservice::ots2::ConsumedCapacity::default_instance());
}

GetRangeResponse::GetRangeResponse(const GetRangeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.aliyun.cloudservice.ots2.GetRangeResponse)
}

void GetRangeResponse::SharedCtor() {
  _cached_size_ = 0;
  consumed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRangeResponse::~GetRangeResponse() {
  // @@protoc_insertion_point(destructor:com.aliyun.cloudservice.ots2.GetRangeResponse)
  SharedDtor();
}

void GetRangeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete consumed_;
  }
}

void GetRangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRangeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRangeResponse_descriptor_;
}

const GetRangeResponse& GetRangeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  return *default_instance_;
}

GetRangeResponse* GetRangeResponse::default_instance_ = NULL;

GetRangeResponse* GetRangeResponse::New() const {
  return new GetRangeResponse;
}

void GetRangeResponse::Clear() {
  if (has_consumed()) {
    if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  }
  next_start_primary_key_.Clear();
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.aliyun.cloudservice.ots2.GetRangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consumed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_next_start_primary_key;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_next_start_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_next_start_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_next_start_primary_key;
        if (input->ExpectTag(26)) goto parse_rows;
        break;
      }

      // repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
      case 3: {
        if (tag == 26) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.aliyun.cloudservice.ots2.GetRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.aliyun.cloudservice.ots2.GetRangeResponse)
  return false;
#undef DO_
}

void GetRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.aliyun.cloudservice.ots2.GetRangeResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->consumed(), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
  for (int i = 0; i < this->next_start_primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->next_start_primary_key(i), output);
  }

  // repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
  for (int i = 0; i < this->rows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rows(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.aliyun.cloudservice.ots2.GetRangeResponse)
}

::google::protobuf::uint8* GetRangeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.aliyun.cloudservice.ots2.GetRangeResponse)
  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  if (has_consumed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->consumed(), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
  for (int i = 0; i < this->next_start_primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->next_start_primary_key(i), target);
  }

  // repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
  for (int i = 0; i < this->rows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rows(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.aliyun.cloudservice.ots2.GetRangeResponse)
  return target;
}

int GetRangeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
    if (has_consumed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consumed());
    }

  }
  // repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
  total_size += 1 * this->next_start_primary_key_size();
  for (int i = 0; i < this->next_start_primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->next_start_primary_key(i));
  }

  // repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRangeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRangeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRangeResponse::MergeFrom(const GetRangeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  next_start_primary_key_.MergeFrom(from.next_start_primary_key_);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_consumed()) {
      mutable_consumed()->::com::aliyun::cloudservice::ots2::ConsumedCapacity::MergeFrom(from.consumed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRangeResponse::CopyFrom(const GetRangeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRangeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_consumed()) {
    if (!this->consumed().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->next_start_primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void GetRangeResponse::Swap(GetRangeResponse* other) {
  if (other != this) {
    std::swap(consumed_, other->consumed_);
    next_start_primary_key_.Swap(&other->next_start_primary_key_);
    rows_.Swap(&other->rows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRangeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRangeResponse_descriptor_;
  metadata.reflection = GetRangeResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ots2
}  // namespace cloudservice
}  // namespace aliyun
}  // namespace com

// @@protoc_insertion_point(global_scope)
