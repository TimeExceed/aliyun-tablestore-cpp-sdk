// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ots_protocol_2.proto

#ifndef PROTOBUF_ots_5fprotocol_5f2_2eproto__INCLUDED
#define PROTOBUF_ots_5fprotocol_5f2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace aliyun {
namespace cloudservice {
namespace ots2 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

class Error;
class ColumnSchema;
class ColumnValue;
class Column;
class Row;
class TableMeta;
class Condition;
class CapacityUnit;
class ReservedThroughputDetails;
class ReservedThroughput;
class ConsumedCapacity;
class CreateTableRequest;
class CreateTableResponse;
class UpdateTableRequest;
class UpdateTableResponse;
class DescribeTableRequest;
class DescribeTableResponse;
class ListTableRequest;
class ListTableResponse;
class DeleteTableRequest;
class DeleteTableResponse;
class GetRowRequest;
class GetRowResponse;
class ColumnUpdate;
class UpdateRowRequest;
class UpdateRowResponse;
class PutRowRequest;
class PutRowResponse;
class DeleteRowRequest;
class DeleteRowResponse;
class RowInBatchGetRowRequest;
class TableInBatchGetRowRequest;
class BatchGetRowRequest;
class RowInBatchGetRowResponse;
class TableInBatchGetRowResponse;
class BatchGetRowResponse;
class PutRowInBatchWriteRowRequest;
class UpdateRowInBatchWriteRowRequest;
class DeleteRowInBatchWriteRowRequest;
class TableInBatchWriteRowRequest;
class BatchWriteRowRequest;
class RowInBatchWriteRowResponse;
class TableInBatchWriteRowResponse;
class BatchWriteRowResponse;
class GetRangeRequest;
class GetRangeResponse;

enum ColumnType {
  INF_MIN = 0,
  INF_MAX = 1,
  INTEGER = 2,
  STRING = 3,
  BOOLEAN = 4,
  DOUBLE = 5,
  BINARY = 6
};
bool ColumnType_IsValid(int value);
const ColumnType ColumnType_MIN = INF_MIN;
const ColumnType ColumnType_MAX = BINARY;
const int ColumnType_ARRAYSIZE = ColumnType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ColumnType_descriptor();
inline const ::std::string& ColumnType_Name(ColumnType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ColumnType_descriptor(), value);
}
inline bool ColumnType_Parse(
    const ::std::string& name, ColumnType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ColumnType>(
    ColumnType_descriptor(), name, value);
}
enum RowExistenceExpectation {
  IGNORE = 0,
  EXPECT_EXIST = 1,
  EXPECT_NOT_EXIST = 2
};
bool RowExistenceExpectation_IsValid(int value);
const RowExistenceExpectation RowExistenceExpectation_MIN = IGNORE;
const RowExistenceExpectation RowExistenceExpectation_MAX = EXPECT_NOT_EXIST;
const int RowExistenceExpectation_ARRAYSIZE = RowExistenceExpectation_MAX + 1;

const ::google::protobuf::EnumDescriptor* RowExistenceExpectation_descriptor();
inline const ::std::string& RowExistenceExpectation_Name(RowExistenceExpectation value) {
  return ::google::protobuf::internal::NameOfEnum(
    RowExistenceExpectation_descriptor(), value);
}
inline bool RowExistenceExpectation_Parse(
    const ::std::string& name, RowExistenceExpectation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RowExistenceExpectation>(
    RowExistenceExpectation_descriptor(), name, value);
}
enum OperationType {
  PUT = 1,
  DELETE = 2
};
bool OperationType_IsValid(int value);
const OperationType OperationType_MIN = PUT;
const OperationType OperationType_MAX = DELETE;
const int OperationType_ARRAYSIZE = OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationType_descriptor();
inline const ::std::string& OperationType_Name(OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationType_descriptor(), value);
}
inline bool OperationType_Parse(
    const ::std::string& name, OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationType>(
    OperationType_descriptor(), name, value);
}
enum Direction {
  FORWARD = 0,
  BACKWARD = 1
};
bool Direction_IsValid(int value);
const Direction Direction_MIN = FORWARD;
const Direction Direction_MAX = BACKWARD;
const int Direction_ARRAYSIZE = Direction_MAX + 1;

const ::google::protobuf::EnumDescriptor* Direction_descriptor();
inline const ::std::string& Direction_Name(Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    Direction_descriptor(), value);
}
inline bool Direction_Parse(
    const ::std::string& name, Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Direction>(
    Direction_descriptor(), name, value);
}
// ===================================================================

class Error : public ::google::protobuf::Message {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  Error* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.Error)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* code_;
  ::std::string* message_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static Error* default_instance_;
};
// -------------------------------------------------------------------

class ColumnSchema : public ::google::protobuf::Message {
 public:
  ColumnSchema();
  virtual ~ColumnSchema();

  ColumnSchema(const ColumnSchema& from);

  inline ColumnSchema& operator=(const ColumnSchema& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnSchema& default_instance();

  void Swap(ColumnSchema* other);

  // implements Message ----------------------------------------------

  ColumnSchema* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnSchema& from);
  void MergeFrom(const ColumnSchema& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::com::aliyun::cloudservice::ots2::ColumnType type() const;
  inline void set_type(::com::aliyun::cloudservice::ots2::ColumnType value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ColumnSchema)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  int type_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ColumnSchema* default_instance_;
};
// -------------------------------------------------------------------

class ColumnValue : public ::google::protobuf::Message {
 public:
  ColumnValue();
  virtual ~ColumnValue();

  ColumnValue(const ColumnValue& from);

  inline ColumnValue& operator=(const ColumnValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnValue& default_instance();

  void Swap(ColumnValue* other);

  // implements Message ----------------------------------------------

  ColumnValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnValue& from);
  void MergeFrom(const ColumnValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::com::aliyun::cloudservice::ots2::ColumnType type() const;
  inline void set_type(::com::aliyun::cloudservice::ots2::ColumnType value);

  // optional int64 v_int = 2;
  inline bool has_v_int() const;
  inline void clear_v_int();
  static const int kVIntFieldNumber = 2;
  inline ::google::protobuf::int64 v_int() const;
  inline void set_v_int(::google::protobuf::int64 value);

  // optional string v_string = 3;
  inline bool has_v_string() const;
  inline void clear_v_string();
  static const int kVStringFieldNumber = 3;
  inline const ::std::string& v_string() const;
  inline void set_v_string(const ::std::string& value);
  inline void set_v_string(const char* value);
  inline void set_v_string(const char* value, size_t size);
  inline ::std::string* mutable_v_string();
  inline ::std::string* release_v_string();
  inline void set_allocated_v_string(::std::string* v_string);

  // optional bool v_bool = 4;
  inline bool has_v_bool() const;
  inline void clear_v_bool();
  static const int kVBoolFieldNumber = 4;
  inline bool v_bool() const;
  inline void set_v_bool(bool value);

  // optional double v_double = 5;
  inline bool has_v_double() const;
  inline void clear_v_double();
  static const int kVDoubleFieldNumber = 5;
  inline double v_double() const;
  inline void set_v_double(double value);

  // optional bytes v_binary = 6;
  inline bool has_v_binary() const;
  inline void clear_v_binary();
  static const int kVBinaryFieldNumber = 6;
  inline const ::std::string& v_binary() const;
  inline void set_v_binary(const ::std::string& value);
  inline void set_v_binary(const char* value);
  inline void set_v_binary(const void* value, size_t size);
  inline ::std::string* mutable_v_binary();
  inline ::std::string* release_v_binary();
  inline void set_allocated_v_binary(::std::string* v_binary);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ColumnValue)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_v_int();
  inline void clear_has_v_int();
  inline void set_has_v_string();
  inline void clear_has_v_string();
  inline void set_has_v_bool();
  inline void clear_has_v_bool();
  inline void set_has_v_double();
  inline void clear_has_v_double();
  inline void set_has_v_binary();
  inline void clear_has_v_binary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 v_int_;
  int type_;
  bool v_bool_;
  ::std::string* v_string_;
  double v_double_;
  ::std::string* v_binary_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ColumnValue* default_instance_;
};
// -------------------------------------------------------------------

class Column : public ::google::protobuf::Message {
 public:
  Column();
  virtual ~Column();

  Column(const Column& from);

  inline Column& operator=(const Column& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Column& default_instance();

  void Swap(Column* other);

  // implements Message ----------------------------------------------

  Column* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Column& from);
  void MergeFrom(const Column& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::ColumnValue& value() const;
  inline ::com::aliyun::cloudservice::ots2::ColumnValue* mutable_value();
  inline ::com::aliyun::cloudservice::ots2::ColumnValue* release_value();
  inline void set_allocated_value(::com::aliyun::cloudservice::ots2::ColumnValue* value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.Column)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::com::aliyun::cloudservice::ots2::ColumnValue* value_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static Column* default_instance_;
};
// -------------------------------------------------------------------

class Row : public ::google::protobuf::Message {
 public:
  Row();
  virtual ~Row();

  Row(const Row& from);

  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Row& default_instance();

  void Swap(Row* other);

  // implements Message ----------------------------------------------

  Row* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Row& from);
  void MergeFrom(const Row& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
  inline int primary_key_columns_size() const;
  inline void clear_primary_key_columns();
  static const int kPrimaryKeyColumnsFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key_columns();

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
  inline int attribute_columns_size() const;
  inline void clear_attribute_columns();
  static const int kAttributeColumnsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& attribute_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_attribute_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_attribute_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      attribute_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_attribute_columns();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.Row)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_columns_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > attribute_columns_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static Row* default_instance_;
};
// -------------------------------------------------------------------

class TableMeta : public ::google::protobuf::Message {
 public:
  TableMeta();
  virtual ~TableMeta();

  TableMeta(const TableMeta& from);

  inline TableMeta& operator=(const TableMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableMeta& default_instance();

  void Swap(TableMeta* other);

  // implements Message ----------------------------------------------

  TableMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableMeta& from);
  void MergeFrom(const TableMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::ColumnSchema& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::ColumnSchema* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::ColumnSchema* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnSchema >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnSchema >*
      mutable_primary_key();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.TableMeta)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnSchema > primary_key_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static TableMeta* default_instance_;
};
// -------------------------------------------------------------------

class Condition : public ::google::protobuf::Message {
 public:
  Condition();
  virtual ~Condition();

  Condition(const Condition& from);

  inline Condition& operator=(const Condition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Condition& default_instance();

  void Swap(Condition* other);

  // implements Message ----------------------------------------------

  Condition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Condition& from);
  void MergeFrom(const Condition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
  inline bool has_row_existence() const;
  inline void clear_row_existence();
  static const int kRowExistenceFieldNumber = 1;
  inline ::com::aliyun::cloudservice::ots2::RowExistenceExpectation row_existence() const;
  inline void set_row_existence(::com::aliyun::cloudservice::ots2::RowExistenceExpectation value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.Condition)
 private:
  inline void set_has_row_existence();
  inline void clear_has_row_existence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int row_existence_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static Condition* default_instance_;
};
// -------------------------------------------------------------------

class CapacityUnit : public ::google::protobuf::Message {
 public:
  CapacityUnit();
  virtual ~CapacityUnit();

  CapacityUnit(const CapacityUnit& from);

  inline CapacityUnit& operator=(const CapacityUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CapacityUnit& default_instance();

  void Swap(CapacityUnit* other);

  // implements Message ----------------------------------------------

  CapacityUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CapacityUnit& from);
  void MergeFrom(const CapacityUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 read = 1;
  inline bool has_read() const;
  inline void clear_read();
  static const int kReadFieldNumber = 1;
  inline ::google::protobuf::int32 read() const;
  inline void set_read(::google::protobuf::int32 value);

  // optional int32 write = 2;
  inline bool has_write() const;
  inline void clear_write();
  static const int kWriteFieldNumber = 2;
  inline ::google::protobuf::int32 write() const;
  inline void set_write(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.CapacityUnit)
 private:
  inline void set_has_read();
  inline void clear_has_read();
  inline void set_has_write();
  inline void clear_has_write();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 read_;
  ::google::protobuf::int32 write_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static CapacityUnit* default_instance_;
};
// -------------------------------------------------------------------

class ReservedThroughputDetails : public ::google::protobuf::Message {
 public:
  ReservedThroughputDetails();
  virtual ~ReservedThroughputDetails();

  ReservedThroughputDetails(const ReservedThroughputDetails& from);

  inline ReservedThroughputDetails& operator=(const ReservedThroughputDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReservedThroughputDetails& default_instance();

  void Swap(ReservedThroughputDetails* other);

  // implements Message ----------------------------------------------

  ReservedThroughputDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReservedThroughputDetails& from);
  void MergeFrom(const ReservedThroughputDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  inline bool has_capacity_unit() const;
  inline void clear_capacity_unit();
  static const int kCapacityUnitFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& capacity_unit() const;
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* mutable_capacity_unit();
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* release_capacity_unit();
  inline void set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit);

  // required int64 last_increase_time = 2;
  inline bool has_last_increase_time() const;
  inline void clear_last_increase_time();
  static const int kLastIncreaseTimeFieldNumber = 2;
  inline ::google::protobuf::int64 last_increase_time() const;
  inline void set_last_increase_time(::google::protobuf::int64 value);

  // optional int64 last_decrease_time = 3;
  inline bool has_last_decrease_time() const;
  inline void clear_last_decrease_time();
  static const int kLastDecreaseTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_decrease_time() const;
  inline void set_last_decrease_time(::google::protobuf::int64 value);

  // required int32 number_of_decreases_today = 4;
  inline bool has_number_of_decreases_today() const;
  inline void clear_number_of_decreases_today();
  static const int kNumberOfDecreasesTodayFieldNumber = 4;
  inline ::google::protobuf::int32 number_of_decreases_today() const;
  inline void set_number_of_decreases_today(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ReservedThroughputDetails)
 private:
  inline void set_has_capacity_unit();
  inline void clear_has_capacity_unit();
  inline void set_has_last_increase_time();
  inline void clear_has_last_increase_time();
  inline void set_has_last_decrease_time();
  inline void clear_has_last_decrease_time();
  inline void set_has_number_of_decreases_today();
  inline void clear_has_number_of_decreases_today();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit_;
  ::google::protobuf::int64 last_increase_time_;
  ::google::protobuf::int64 last_decrease_time_;
  ::google::protobuf::int32 number_of_decreases_today_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ReservedThroughputDetails* default_instance_;
};
// -------------------------------------------------------------------

class ReservedThroughput : public ::google::protobuf::Message {
 public:
  ReservedThroughput();
  virtual ~ReservedThroughput();

  ReservedThroughput(const ReservedThroughput& from);

  inline ReservedThroughput& operator=(const ReservedThroughput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReservedThroughput& default_instance();

  void Swap(ReservedThroughput* other);

  // implements Message ----------------------------------------------

  ReservedThroughput* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReservedThroughput& from);
  void MergeFrom(const ReservedThroughput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  inline bool has_capacity_unit() const;
  inline void clear_capacity_unit();
  static const int kCapacityUnitFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& capacity_unit() const;
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* mutable_capacity_unit();
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* release_capacity_unit();
  inline void set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ReservedThroughput)
 private:
  inline void set_has_capacity_unit();
  inline void clear_has_capacity_unit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ReservedThroughput* default_instance_;
};
// -------------------------------------------------------------------

class ConsumedCapacity : public ::google::protobuf::Message {
 public:
  ConsumedCapacity();
  virtual ~ConsumedCapacity();

  ConsumedCapacity(const ConsumedCapacity& from);

  inline ConsumedCapacity& operator=(const ConsumedCapacity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumedCapacity& default_instance();

  void Swap(ConsumedCapacity* other);

  // implements Message ----------------------------------------------

  ConsumedCapacity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsumedCapacity& from);
  void MergeFrom(const ConsumedCapacity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
  inline bool has_capacity_unit() const;
  inline void clear_capacity_unit();
  static const int kCapacityUnitFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& capacity_unit() const;
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* mutable_capacity_unit();
  inline ::com::aliyun::cloudservice::ots2::CapacityUnit* release_capacity_unit();
  inline void set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ConsumedCapacity)
 private:
  inline void set_has_capacity_unit();
  inline void clear_has_capacity_unit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ConsumedCapacity* default_instance_;
};
// -------------------------------------------------------------------

class CreateTableRequest : public ::google::protobuf::Message {
 public:
  CreateTableRequest();
  virtual ~CreateTableRequest();

  CreateTableRequest(const CreateTableRequest& from);

  inline CreateTableRequest& operator=(const CreateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRequest& default_instance();

  void Swap(CreateTableRequest* other);

  // implements Message ----------------------------------------------

  CreateTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableRequest& from);
  void MergeFrom(const CreateTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  inline bool has_table_meta() const;
  inline void clear_table_meta();
  static const int kTableMetaFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableMeta& table_meta() const;
  inline ::com::aliyun::cloudservice::ots2::TableMeta* mutable_table_meta();
  inline ::com::aliyun::cloudservice::ots2::TableMeta* release_table_meta();
  inline void set_allocated_table_meta(::com::aliyun::cloudservice::ots2::TableMeta* table_meta);

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  inline bool has_reserved_throughput() const;
  inline void clear_reserved_throughput();
  static const int kReservedThroughputFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::ReservedThroughput& reserved_throughput() const;
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* mutable_reserved_throughput();
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* release_reserved_throughput();
  inline void set_allocated_reserved_throughput(::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.CreateTableRequest)
 private:
  inline void set_has_table_meta();
  inline void clear_has_table_meta();
  inline void set_has_reserved_throughput();
  inline void clear_has_reserved_throughput();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::TableMeta* table_meta_;
  ::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static CreateTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateTableResponse : public ::google::protobuf::Message {
 public:
  CreateTableResponse();
  virtual ~CreateTableResponse();

  CreateTableResponse(const CreateTableResponse& from);

  inline CreateTableResponse& operator=(const CreateTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableResponse& default_instance();

  void Swap(CreateTableResponse* other);

  // implements Message ----------------------------------------------

  CreateTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableResponse& from);
  void MergeFrom(const CreateTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.CreateTableResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static CreateTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateTableRequest : public ::google::protobuf::Message {
 public:
  UpdateTableRequest();
  virtual ~UpdateTableRequest();

  UpdateTableRequest(const UpdateTableRequest& from);

  inline UpdateTableRequest& operator=(const UpdateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTableRequest& default_instance();

  void Swap(UpdateTableRequest* other);

  // implements Message ----------------------------------------------

  UpdateTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateTableRequest& from);
  void MergeFrom(const UpdateTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
  inline bool has_reserved_throughput() const;
  inline void clear_reserved_throughput();
  static const int kReservedThroughputFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::ReservedThroughput& reserved_throughput() const;
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* mutable_reserved_throughput();
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* release_reserved_throughput();
  inline void set_allocated_reserved_throughput(::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.UpdateTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_reserved_throughput();
  inline void clear_has_reserved_throughput();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static UpdateTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateTableResponse : public ::google::protobuf::Message {
 public:
  UpdateTableResponse();
  virtual ~UpdateTableResponse();

  UpdateTableResponse(const UpdateTableResponse& from);

  inline UpdateTableResponse& operator=(const UpdateTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTableResponse& default_instance();

  void Swap(UpdateTableResponse* other);

  // implements Message ----------------------------------------------

  UpdateTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateTableResponse& from);
  void MergeFrom(const UpdateTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
  inline bool has_reserved_throughput_details() const;
  inline void clear_reserved_throughput_details();
  static const int kReservedThroughputDetailsFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails& reserved_throughput_details() const;
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* mutable_reserved_throughput_details();
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* release_reserved_throughput_details();
  inline void set_allocated_reserved_throughput_details(::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.UpdateTableResponse)
 private:
  inline void set_has_reserved_throughput_details();
  inline void clear_has_reserved_throughput_details();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static UpdateTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class DescribeTableRequest : public ::google::protobuf::Message {
 public:
  DescribeTableRequest();
  virtual ~DescribeTableRequest();

  DescribeTableRequest(const DescribeTableRequest& from);

  inline DescribeTableRequest& operator=(const DescribeTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DescribeTableRequest& default_instance();

  void Swap(DescribeTableRequest* other);

  // implements Message ----------------------------------------------

  DescribeTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DescribeTableRequest& from);
  void MergeFrom(const DescribeTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DescribeTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DescribeTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class DescribeTableResponse : public ::google::protobuf::Message {
 public:
  DescribeTableResponse();
  virtual ~DescribeTableResponse();

  DescribeTableResponse(const DescribeTableResponse& from);

  inline DescribeTableResponse& operator=(const DescribeTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DescribeTableResponse& default_instance();

  void Swap(DescribeTableResponse* other);

  // implements Message ----------------------------------------------

  DescribeTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DescribeTableResponse& from);
  void MergeFrom(const DescribeTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
  inline bool has_table_meta() const;
  inline void clear_table_meta();
  static const int kTableMetaFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableMeta& table_meta() const;
  inline ::com::aliyun::cloudservice::ots2::TableMeta* mutable_table_meta();
  inline ::com::aliyun::cloudservice::ots2::TableMeta* release_table_meta();
  inline void set_allocated_table_meta(::com::aliyun::cloudservice::ots2::TableMeta* table_meta);

  // required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
  inline bool has_reserved_throughput_details() const;
  inline void clear_reserved_throughput_details();
  static const int kReservedThroughputDetailsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails& reserved_throughput_details() const;
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* mutable_reserved_throughput_details();
  inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* release_reserved_throughput_details();
  inline void set_allocated_reserved_throughput_details(::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DescribeTableResponse)
 private:
  inline void set_has_table_meta();
  inline void clear_has_table_meta();
  inline void set_has_reserved_throughput_details();
  inline void clear_has_reserved_throughput_details();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::TableMeta* table_meta_;
  ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DescribeTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListTableRequest : public ::google::protobuf::Message {
 public:
  ListTableRequest();
  virtual ~ListTableRequest();

  ListTableRequest(const ListTableRequest& from);

  inline ListTableRequest& operator=(const ListTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableRequest& default_instance();

  void Swap(ListTableRequest* other);

  // implements Message ----------------------------------------------

  ListTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableRequest& from);
  void MergeFrom(const ListTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ListTableRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ListTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListTableResponse : public ::google::protobuf::Message {
 public:
  ListTableResponse();
  virtual ~ListTableResponse();

  ListTableResponse(const ListTableResponse& from);

  inline ListTableResponse& operator=(const ListTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableResponse& default_instance();

  void Swap(ListTableResponse* other);

  // implements Message ----------------------------------------------

  ListTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableResponse& from);
  void MergeFrom(const ListTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string table_names = 1;
  inline int table_names_size() const;
  inline void clear_table_names();
  static const int kTableNamesFieldNumber = 1;
  inline const ::std::string& table_names(int index) const;
  inline ::std::string* mutable_table_names(int index);
  inline void set_table_names(int index, const ::std::string& value);
  inline void set_table_names(int index, const char* value);
  inline void set_table_names(int index, const char* value, size_t size);
  inline ::std::string* add_table_names();
  inline void add_table_names(const ::std::string& value);
  inline void add_table_names(const char* value);
  inline void add_table_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& table_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_table_names();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ListTableResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> table_names_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ListTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteTableRequest : public ::google::protobuf::Message {
 public:
  DeleteTableRequest();
  virtual ~DeleteTableRequest();

  DeleteTableRequest(const DeleteTableRequest& from);

  inline DeleteTableRequest& operator=(const DeleteTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTableRequest& default_instance();

  void Swap(DeleteTableRequest* other);

  // implements Message ----------------------------------------------

  DeleteTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteTableRequest& from);
  void MergeFrom(const DeleteTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DeleteTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DeleteTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteTableResponse : public ::google::protobuf::Message {
 public:
  DeleteTableResponse();
  virtual ~DeleteTableResponse();

  DeleteTableResponse(const DeleteTableResponse& from);

  inline DeleteTableResponse& operator=(const DeleteTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTableResponse& default_instance();

  void Swap(DeleteTableResponse* other);

  // implements Message ----------------------------------------------

  DeleteTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteTableResponse& from);
  void MergeFrom(const DeleteTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DeleteTableResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DeleteTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetRowRequest : public ::google::protobuf::Message {
 public:
  GetRowRequest();
  virtual ~GetRowRequest();

  GetRowRequest(const GetRowRequest& from);

  inline GetRowRequest& operator=(const GetRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRowRequest& default_instance();

  void Swap(GetRowRequest* other);

  // implements Message ----------------------------------------------

  GetRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRowRequest& from);
  void MergeFrom(const GetRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // repeated string columns_to_get = 3;
  inline int columns_to_get_size() const;
  inline void clear_columns_to_get();
  static const int kColumnsToGetFieldNumber = 3;
  inline const ::std::string& columns_to_get(int index) const;
  inline ::std::string* mutable_columns_to_get(int index);
  inline void set_columns_to_get(int index, const ::std::string& value);
  inline void set_columns_to_get(int index, const char* value);
  inline void set_columns_to_get(int index, const char* value, size_t size);
  inline ::std::string* add_columns_to_get();
  inline void add_columns_to_get(const ::std::string& value);
  inline void add_columns_to_get(const char* value);
  inline void add_columns_to_get(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& columns_to_get() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_columns_to_get();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.GetRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> columns_to_get_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static GetRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRowResponse : public ::google::protobuf::Message {
 public:
  GetRowResponse();
  virtual ~GetRowResponse();

  GetRowResponse(const GetRowResponse& from);

  inline GetRowResponse& operator=(const GetRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRowResponse& default_instance();

  void Swap(GetRowResponse* other);

  // implements Message ----------------------------------------------

  GetRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRowResponse& from);
  void MergeFrom(const GetRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // required .com.aliyun.cloudservice.ots2.Row row = 2;
  inline bool has_row() const;
  inline void clear_row();
  static const int kRowFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Row& row() const;
  inline ::com::aliyun::cloudservice::ots2::Row* mutable_row();
  inline ::com::aliyun::cloudservice::ots2::Row* release_row();
  inline void set_allocated_row(::com::aliyun::cloudservice::ots2::Row* row);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.GetRowResponse)
 private:
  inline void set_has_consumed();
  inline void clear_has_consumed();
  inline void set_has_row();
  inline void clear_has_row();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  ::com::aliyun::cloudservice::ots2::Row* row_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static GetRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class ColumnUpdate : public ::google::protobuf::Message {
 public:
  ColumnUpdate();
  virtual ~ColumnUpdate();

  ColumnUpdate(const ColumnUpdate& from);

  inline ColumnUpdate& operator=(const ColumnUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnUpdate& default_instance();

  void Swap(ColumnUpdate* other);

  // implements Message ----------------------------------------------

  ColumnUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnUpdate& from);
  void MergeFrom(const ColumnUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.OperationType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::com::aliyun::cloudservice::ots2::OperationType type() const;
  inline void set_type(::com::aliyun::cloudservice::ots2::OperationType value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::ColumnValue& value() const;
  inline ::com::aliyun::cloudservice::ots2::ColumnValue* mutable_value();
  inline ::com::aliyun::cloudservice::ots2::ColumnValue* release_value();
  inline void set_allocated_value(::com::aliyun::cloudservice::ots2::ColumnValue* value);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.ColumnUpdate)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::com::aliyun::cloudservice::ots2::ColumnValue* value_;
  int type_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static ColumnUpdate* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRowRequest : public ::google::protobuf::Message {
 public:
  UpdateRowRequest();
  virtual ~UpdateRowRequest();

  UpdateRowRequest(const UpdateRowRequest& from);

  inline UpdateRowRequest& operator=(const UpdateRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRowRequest& default_instance();

  void Swap(UpdateRowRequest* other);

  // implements Message ----------------------------------------------

  UpdateRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRowRequest& from);
  void MergeFrom(const UpdateRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
  inline int attribute_columns_size() const;
  inline void clear_attribute_columns();
  static const int kAttributeColumnsFieldNumber = 4;
  inline const ::com::aliyun::cloudservice::ots2::ColumnUpdate& attribute_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* mutable_attribute_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* add_attribute_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >&
      attribute_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >*
      mutable_attribute_columns();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.UpdateRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate > attribute_columns_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static UpdateRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRowResponse : public ::google::protobuf::Message {
 public:
  UpdateRowResponse();
  virtual ~UpdateRowResponse();

  UpdateRowResponse(const UpdateRowResponse& from);

  inline UpdateRowResponse& operator=(const UpdateRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRowResponse& default_instance();

  void Swap(UpdateRowResponse* other);

  // implements Message ----------------------------------------------

  UpdateRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRowResponse& from);
  void MergeFrom(const UpdateRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.UpdateRowResponse)
 private:
  inline void set_has_consumed();
  inline void clear_has_consumed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static UpdateRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRowRequest : public ::google::protobuf::Message {
 public:
  PutRowRequest();
  virtual ~PutRowRequest();

  PutRowRequest(const PutRowRequest& from);

  inline PutRowRequest& operator=(const PutRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRowRequest& default_instance();

  void Swap(PutRowRequest* other);

  // implements Message ----------------------------------------------

  PutRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRowRequest& from);
  void MergeFrom(const PutRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
  inline int attribute_columns_size() const;
  inline void clear_attribute_columns();
  static const int kAttributeColumnsFieldNumber = 4;
  inline const ::com::aliyun::cloudservice::ots2::Column& attribute_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_attribute_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_attribute_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      attribute_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_attribute_columns();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.PutRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > attribute_columns_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static PutRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class PutRowResponse : public ::google::protobuf::Message {
 public:
  PutRowResponse();
  virtual ~PutRowResponse();

  PutRowResponse(const PutRowResponse& from);

  inline PutRowResponse& operator=(const PutRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRowResponse& default_instance();

  void Swap(PutRowResponse* other);

  // implements Message ----------------------------------------------

  PutRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRowResponse& from);
  void MergeFrom(const PutRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.PutRowResponse)
 private:
  inline void set_has_consumed();
  inline void clear_has_consumed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static PutRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRowRequest : public ::google::protobuf::Message {
 public:
  DeleteRowRequest();
  virtual ~DeleteRowRequest();

  DeleteRowRequest(const DeleteRowRequest& from);

  inline DeleteRowRequest& operator=(const DeleteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRowRequest& default_instance();

  void Swap(DeleteRowRequest* other);

  // implements Message ----------------------------------------------

  DeleteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRowRequest& from);
  void MergeFrom(const DeleteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // required .com.aliyun.cloudservice.ots2.Condition condition = 2;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DeleteRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DeleteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRowResponse : public ::google::protobuf::Message {
 public:
  DeleteRowResponse();
  virtual ~DeleteRowResponse();

  DeleteRowResponse(const DeleteRowResponse& from);

  inline DeleteRowResponse& operator=(const DeleteRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRowResponse& default_instance();

  void Swap(DeleteRowResponse* other);

  // implements Message ----------------------------------------------

  DeleteRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRowResponse& from);
  void MergeFrom(const DeleteRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DeleteRowResponse)
 private:
  inline void set_has_consumed();
  inline void clear_has_consumed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DeleteRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class RowInBatchGetRowRequest : public ::google::protobuf::Message {
 public:
  RowInBatchGetRowRequest();
  virtual ~RowInBatchGetRowRequest();

  RowInBatchGetRowRequest(const RowInBatchGetRowRequest& from);

  inline RowInBatchGetRowRequest& operator=(const RowInBatchGetRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RowInBatchGetRowRequest& default_instance();

  void Swap(RowInBatchGetRowRequest* other);

  // implements Message ----------------------------------------------

  RowInBatchGetRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowInBatchGetRowRequest& from);
  void MergeFrom(const RowInBatchGetRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static RowInBatchGetRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class TableInBatchGetRowRequest : public ::google::protobuf::Message {
 public:
  TableInBatchGetRowRequest();
  virtual ~TableInBatchGetRowRequest();

  TableInBatchGetRowRequest(const TableInBatchGetRowRequest& from);

  inline TableInBatchGetRowRequest& operator=(const TableInBatchGetRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInBatchGetRowRequest& default_instance();

  void Swap(TableInBatchGetRowRequest* other);

  // implements Message ----------------------------------------------

  TableInBatchGetRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInBatchGetRowRequest& from);
  void MergeFrom(const TableInBatchGetRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
  inline int rows_size() const;
  inline void clear_rows();
  static const int kRowsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest& rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest* mutable_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest* add_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest >&
      rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest >*
      mutable_rows();

  // repeated string columns_to_get = 3;
  inline int columns_to_get_size() const;
  inline void clear_columns_to_get();
  static const int kColumnsToGetFieldNumber = 3;
  inline const ::std::string& columns_to_get(int index) const;
  inline ::std::string* mutable_columns_to_get(int index);
  inline void set_columns_to_get(int index, const ::std::string& value);
  inline void set_columns_to_get(int index, const char* value);
  inline void set_columns_to_get(int index, const char* value, size_t size);
  inline ::std::string* add_columns_to_get();
  inline void add_columns_to_get(const ::std::string& value);
  inline void add_columns_to_get(const char* value);
  inline void add_columns_to_get(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& columns_to_get() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_columns_to_get();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest > rows_;
  ::google::protobuf::RepeatedPtrField< ::std::string> columns_to_get_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static TableInBatchGetRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetRowRequest : public ::google::protobuf::Message {
 public:
  BatchGetRowRequest();
  virtual ~BatchGetRowRequest();

  BatchGetRowRequest(const BatchGetRowRequest& from);

  inline BatchGetRowRequest& operator=(const BatchGetRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetRowRequest& default_instance();

  void Swap(BatchGetRowRequest* other);

  // implements Message ----------------------------------------------

  BatchGetRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetRowRequest& from);
  void MergeFrom(const BatchGetRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
  inline int tables_size() const;
  inline void clear_tables();
  static const int kTablesFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest& tables(int index) const;
  inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest* mutable_tables(int index);
  inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest* add_tables();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest >&
      tables() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest >*
      mutable_tables();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.BatchGetRowRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest > tables_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static BatchGetRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class RowInBatchGetRowResponse : public ::google::protobuf::Message {
 public:
  RowInBatchGetRowResponse();
  virtual ~RowInBatchGetRowResponse();

  RowInBatchGetRowResponse(const RowInBatchGetRowResponse& from);

  inline RowInBatchGetRowResponse& operator=(const RowInBatchGetRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RowInBatchGetRowResponse& default_instance();

  void Swap(RowInBatchGetRowResponse* other);

  // implements Message ----------------------------------------------

  RowInBatchGetRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowInBatchGetRowResponse& from);
  void MergeFrom(const RowInBatchGetRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_ok = 1 [default = true];
  inline bool has_is_ok() const;
  inline void clear_is_ok();
  static const int kIsOkFieldNumber = 1;
  inline bool is_ok() const;
  inline void set_is_ok(bool value);

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Error& error() const;
  inline ::com::aliyun::cloudservice::ots2::Error* mutable_error();
  inline ::com::aliyun::cloudservice::ots2::Error* release_error();
  inline void set_allocated_error(::com::aliyun::cloudservice::ots2::Error* error);

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // optional .com.aliyun.cloudservice.ots2.Row row = 4;
  inline bool has_row() const;
  inline void clear_row();
  static const int kRowFieldNumber = 4;
  inline const ::com::aliyun::cloudservice::ots2::Row& row() const;
  inline ::com::aliyun::cloudservice::ots2::Row* mutable_row();
  inline ::com::aliyun::cloudservice::ots2::Row* release_row();
  inline void set_allocated_row(::com::aliyun::cloudservice::ots2::Row* row);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse)
 private:
  inline void set_has_is_ok();
  inline void clear_has_is_ok();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_consumed();
  inline void clear_has_consumed();
  inline void set_has_row();
  inline void clear_has_row();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::Error* error_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  ::com::aliyun::cloudservice::ots2::Row* row_;
  bool is_ok_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static RowInBatchGetRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class TableInBatchGetRowResponse : public ::google::protobuf::Message {
 public:
  TableInBatchGetRowResponse();
  virtual ~TableInBatchGetRowResponse();

  TableInBatchGetRowResponse(const TableInBatchGetRowResponse& from);

  inline TableInBatchGetRowResponse& operator=(const TableInBatchGetRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInBatchGetRowResponse& default_instance();

  void Swap(TableInBatchGetRowResponse* other);

  // implements Message ----------------------------------------------

  TableInBatchGetRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInBatchGetRowResponse& from);
  void MergeFrom(const TableInBatchGetRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
  inline int rows_size() const;
  inline void clear_rows();
  static const int kRowsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse& rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse* mutable_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse* add_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse >&
      rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse >*
      mutable_rows();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse > rows_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static TableInBatchGetRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetRowResponse : public ::google::protobuf::Message {
 public:
  BatchGetRowResponse();
  virtual ~BatchGetRowResponse();

  BatchGetRowResponse(const BatchGetRowResponse& from);

  inline BatchGetRowResponse& operator=(const BatchGetRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetRowResponse& default_instance();

  void Swap(BatchGetRowResponse* other);

  // implements Message ----------------------------------------------

  BatchGetRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetRowResponse& from);
  void MergeFrom(const BatchGetRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
  inline int tables_size() const;
  inline void clear_tables();
  static const int kTablesFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse& tables(int index) const;
  inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse* mutable_tables(int index);
  inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse* add_tables();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse >&
      tables() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse >*
      mutable_tables();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.BatchGetRowResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse > tables_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static BatchGetRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRowInBatchWriteRowRequest : public ::google::protobuf::Message {
 public:
  PutRowInBatchWriteRowRequest();
  virtual ~PutRowInBatchWriteRowRequest();

  PutRowInBatchWriteRowRequest(const PutRowInBatchWriteRowRequest& from);

  inline PutRowInBatchWriteRowRequest& operator=(const PutRowInBatchWriteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRowInBatchWriteRowRequest& default_instance();

  void Swap(PutRowInBatchWriteRowRequest* other);

  // implements Message ----------------------------------------------

  PutRowInBatchWriteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRowInBatchWriteRowRequest& from);
  void MergeFrom(const PutRowInBatchWriteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
  inline int attribute_columns_size() const;
  inline void clear_attribute_columns();
  static const int kAttributeColumnsFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::Column& attribute_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_attribute_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_attribute_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      attribute_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_attribute_columns();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > attribute_columns_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static PutRowInBatchWriteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRowInBatchWriteRowRequest : public ::google::protobuf::Message {
 public:
  UpdateRowInBatchWriteRowRequest();
  virtual ~UpdateRowInBatchWriteRowRequest();

  UpdateRowInBatchWriteRowRequest(const UpdateRowInBatchWriteRowRequest& from);

  inline UpdateRowInBatchWriteRowRequest& operator=(const UpdateRowInBatchWriteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRowInBatchWriteRowRequest& default_instance();

  void Swap(UpdateRowInBatchWriteRowRequest* other);

  // implements Message ----------------------------------------------

  UpdateRowInBatchWriteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRowInBatchWriteRowRequest& from);
  void MergeFrom(const UpdateRowInBatchWriteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
  inline int attribute_columns_size() const;
  inline void clear_attribute_columns();
  static const int kAttributeColumnsFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::ColumnUpdate& attribute_columns(int index) const;
  inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* mutable_attribute_columns(int index);
  inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* add_attribute_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >&
      attribute_columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >*
      mutable_attribute_columns();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate > attribute_columns_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static UpdateRowInBatchWriteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRowInBatchWriteRowRequest : public ::google::protobuf::Message {
 public:
  DeleteRowInBatchWriteRowRequest();
  virtual ~DeleteRowInBatchWriteRowRequest();

  DeleteRowInBatchWriteRowRequest(const DeleteRowInBatchWriteRowRequest& from);

  inline DeleteRowInBatchWriteRowRequest& operator=(const DeleteRowInBatchWriteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRowInBatchWriteRowRequest& default_instance();

  void Swap(DeleteRowInBatchWriteRowRequest* other);

  // implements Message ----------------------------------------------

  DeleteRowInBatchWriteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRowInBatchWriteRowRequest& from);
  void MergeFrom(const DeleteRowInBatchWriteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.Condition condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::Condition& condition() const;
  inline ::com::aliyun::cloudservice::ots2::Condition* mutable_condition();
  inline ::com::aliyun::cloudservice::ots2::Condition* release_condition();
  inline void set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition);

  // repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
  inline int primary_key_size() const;
  inline void clear_primary_key();
  static const int kPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_primary_key();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::Condition* condition_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > primary_key_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static DeleteRowInBatchWriteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class TableInBatchWriteRowRequest : public ::google::protobuf::Message {
 public:
  TableInBatchWriteRowRequest();
  virtual ~TableInBatchWriteRowRequest();

  TableInBatchWriteRowRequest(const TableInBatchWriteRowRequest& from);

  inline TableInBatchWriteRowRequest& operator=(const TableInBatchWriteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInBatchWriteRowRequest& default_instance();

  void Swap(TableInBatchWriteRowRequest* other);

  // implements Message ----------------------------------------------

  TableInBatchWriteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInBatchWriteRowRequest& from);
  void MergeFrom(const TableInBatchWriteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
  inline int put_rows_size() const;
  inline void clear_put_rows();
  static const int kPutRowsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest& put_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest* mutable_put_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest* add_put_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest >&
      put_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest >*
      mutable_put_rows();

  // repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
  inline int update_rows_size() const;
  inline void clear_update_rows();
  static const int kUpdateRowsFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest& update_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest* mutable_update_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest* add_update_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest >&
      update_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest >*
      mutable_update_rows();

  // repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
  inline int delete_rows_size() const;
  inline void clear_delete_rows();
  static const int kDeleteRowsFieldNumber = 4;
  inline const ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest& delete_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest* mutable_delete_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest* add_delete_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest >&
      delete_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest >*
      mutable_delete_rows();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest > put_rows_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest > update_rows_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest > delete_rows_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static TableInBatchWriteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchWriteRowRequest : public ::google::protobuf::Message {
 public:
  BatchWriteRowRequest();
  virtual ~BatchWriteRowRequest();

  BatchWriteRowRequest(const BatchWriteRowRequest& from);

  inline BatchWriteRowRequest& operator=(const BatchWriteRowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchWriteRowRequest& default_instance();

  void Swap(BatchWriteRowRequest* other);

  // implements Message ----------------------------------------------

  BatchWriteRowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchWriteRowRequest& from);
  void MergeFrom(const BatchWriteRowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
  inline int tables_size() const;
  inline void clear_tables();
  static const int kTablesFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest& tables(int index) const;
  inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest* mutable_tables(int index);
  inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest* add_tables();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest >&
      tables() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest >*
      mutable_tables();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.BatchWriteRowRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest > tables_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static BatchWriteRowRequest* default_instance_;
};
// -------------------------------------------------------------------

class RowInBatchWriteRowResponse : public ::google::protobuf::Message {
 public:
  RowInBatchWriteRowResponse();
  virtual ~RowInBatchWriteRowResponse();

  RowInBatchWriteRowResponse(const RowInBatchWriteRowResponse& from);

  inline RowInBatchWriteRowResponse& operator=(const RowInBatchWriteRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RowInBatchWriteRowResponse& default_instance();

  void Swap(RowInBatchWriteRowResponse* other);

  // implements Message ----------------------------------------------

  RowInBatchWriteRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowInBatchWriteRowResponse& from);
  void MergeFrom(const RowInBatchWriteRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_ok = 1 [default = true];
  inline bool has_is_ok() const;
  inline void clear_is_ok();
  static const int kIsOkFieldNumber = 1;
  inline bool is_ok() const;
  inline void set_is_ok(bool value);

  // optional .com.aliyun.cloudservice.ots2.Error error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Error& error() const;
  inline ::com::aliyun::cloudservice::ots2::Error* mutable_error();
  inline ::com::aliyun::cloudservice::ots2::Error* release_error();
  inline void set_allocated_error(::com::aliyun::cloudservice::ots2::Error* error);

  // optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse)
 private:
  inline void set_has_is_ok();
  inline void clear_has_is_ok();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_consumed();
  inline void clear_has_consumed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::Error* error_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  bool is_ok_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static RowInBatchWriteRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class TableInBatchWriteRowResponse : public ::google::protobuf::Message {
 public:
  TableInBatchWriteRowResponse();
  virtual ~TableInBatchWriteRowResponse();

  TableInBatchWriteRowResponse(const TableInBatchWriteRowResponse& from);

  inline TableInBatchWriteRowResponse& operator=(const TableInBatchWriteRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInBatchWriteRowResponse& default_instance();

  void Swap(TableInBatchWriteRowResponse* other);

  // implements Message ----------------------------------------------

  TableInBatchWriteRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInBatchWriteRowResponse& from);
  void MergeFrom(const TableInBatchWriteRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
  inline int put_rows_size() const;
  inline void clear_put_rows();
  static const int kPutRowsFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& put_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* mutable_put_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* add_put_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
      put_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
      mutable_put_rows();

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
  inline int update_rows_size() const;
  inline void clear_update_rows();
  static const int kUpdateRowsFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& update_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* mutable_update_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* add_update_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
      update_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
      mutable_update_rows();

  // repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
  inline int delete_rows_size() const;
  inline void clear_delete_rows();
  static const int kDeleteRowsFieldNumber = 4;
  inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& delete_rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* mutable_delete_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* add_delete_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
      delete_rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
      mutable_delete_rows();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse > put_rows_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse > update_rows_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse > delete_rows_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static TableInBatchWriteRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchWriteRowResponse : public ::google::protobuf::Message {
 public:
  BatchWriteRowResponse();
  virtual ~BatchWriteRowResponse();

  BatchWriteRowResponse(const BatchWriteRowResponse& from);

  inline BatchWriteRowResponse& operator=(const BatchWriteRowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchWriteRowResponse& default_instance();

  void Swap(BatchWriteRowResponse* other);

  // implements Message ----------------------------------------------

  BatchWriteRowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchWriteRowResponse& from);
  void MergeFrom(const BatchWriteRowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
  inline int tables_size() const;
  inline void clear_tables();
  static const int kTablesFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse& tables(int index) const;
  inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse* mutable_tables(int index);
  inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse* add_tables();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse >&
      tables() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse >*
      mutable_tables();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.BatchWriteRowResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse > tables_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static BatchWriteRowResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetRangeRequest : public ::google::protobuf::Message {
 public:
  GetRangeRequest();
  virtual ~GetRangeRequest();

  GetRangeRequest(const GetRangeRequest& from);

  inline GetRangeRequest& operator=(const GetRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRangeRequest& default_instance();

  void Swap(GetRangeRequest* other);

  // implements Message ----------------------------------------------

  GetRangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRangeRequest& from);
  void MergeFrom(const GetRangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // required .com.aliyun.cloudservice.ots2.Direction direction = 2;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 2;
  inline ::com::aliyun::cloudservice::ots2::Direction direction() const;
  inline void set_direction(::com::aliyun::cloudservice::ots2::Direction value);

  // repeated string columns_to_get = 3;
  inline int columns_to_get_size() const;
  inline void clear_columns_to_get();
  static const int kColumnsToGetFieldNumber = 3;
  inline const ::std::string& columns_to_get(int index) const;
  inline ::std::string* mutable_columns_to_get(int index);
  inline void set_columns_to_get(int index, const ::std::string& value);
  inline void set_columns_to_get(int index, const char* value);
  inline void set_columns_to_get(int index, const char* value, size_t size);
  inline ::std::string* add_columns_to_get();
  inline void add_columns_to_get(const ::std::string& value);
  inline void add_columns_to_get(const char* value);
  inline void add_columns_to_get(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& columns_to_get() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_columns_to_get();

  // optional int32 limit = 4;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 4;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
  inline int inclusive_start_primary_key_size() const;
  inline void clear_inclusive_start_primary_key();
  static const int kInclusiveStartPrimaryKeyFieldNumber = 5;
  inline const ::com::aliyun::cloudservice::ots2::Column& inclusive_start_primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_inclusive_start_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_inclusive_start_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      inclusive_start_primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_inclusive_start_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
  inline int exclusive_end_primary_key_size() const;
  inline void clear_exclusive_end_primary_key();
  static const int kExclusiveEndPrimaryKeyFieldNumber = 6;
  inline const ::com::aliyun::cloudservice::ots2::Column& exclusive_end_primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_exclusive_end_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_exclusive_end_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      exclusive_end_primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_exclusive_end_primary_key();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.GetRangeRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* table_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> columns_to_get_;
  int direction_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > inclusive_start_primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > exclusive_end_primary_key_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static GetRangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRangeResponse : public ::google::protobuf::Message {
 public:
  GetRangeResponse();
  virtual ~GetRangeResponse();

  GetRangeResponse(const GetRangeResponse& from);

  inline GetRangeResponse& operator=(const GetRangeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRangeResponse& default_instance();

  void Swap(GetRangeResponse* other);

  // implements Message ----------------------------------------------

  GetRangeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRangeResponse& from);
  void MergeFrom(const GetRangeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
  inline bool has_consumed() const;
  inline void clear_consumed();
  static const int kConsumedFieldNumber = 1;
  inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& consumed() const;
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* mutable_consumed();
  inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* release_consumed();
  inline void set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed);

  // repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
  inline int next_start_primary_key_size() const;
  inline void clear_next_start_primary_key();
  static const int kNextStartPrimaryKeyFieldNumber = 2;
  inline const ::com::aliyun::cloudservice::ots2::Column& next_start_primary_key(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Column* mutable_next_start_primary_key(int index);
  inline ::com::aliyun::cloudservice::ots2::Column* add_next_start_primary_key();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
      next_start_primary_key() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
      mutable_next_start_primary_key();

  // repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
  inline int rows_size() const;
  inline void clear_rows();
  static const int kRowsFieldNumber = 3;
  inline const ::com::aliyun::cloudservice::ots2::Row& rows(int index) const;
  inline ::com::aliyun::cloudservice::ots2::Row* mutable_rows(int index);
  inline ::com::aliyun::cloudservice::ots2::Row* add_rows();
  inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Row >&
      rows() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Row >*
      mutable_rows();

  // @@protoc_insertion_point(class_scope:com.aliyun.cloudservice.ots2.GetRangeResponse)
 private:
  inline void set_has_consumed();
  inline void clear_has_consumed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column > next_start_primary_key_;
  ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Row > rows_;
  friend void  protobuf_AddDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_AssignDesc_ots_5fprotocol_5f2_2eproto();
  friend void protobuf_ShutdownFile_ots_5fprotocol_5f2_2eproto();

  void InitAsDefaultInstance();
  static GetRangeResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// Error

// required string code = 1;
inline bool Error::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Error::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Error::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Error::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& Error::code() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Error.code)
  return *code_;
}
inline void Error::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.Error.code)
}
inline void Error::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.Error.code)
}
inline void Error::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.Error.code)
}
inline ::std::string* Error::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Error.code)
  return code_;
}
inline ::std::string* Error::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Error::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.Error.code)
}

// optional string message = 2;
inline bool Error::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Error::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Error::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Error.message)
  return *message_;
}
inline void Error::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.Error.message)
}
inline void Error::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.Error.message)
}
inline void Error::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.Error.message)
}
inline ::std::string* Error::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Error.message)
  return message_;
}
inline ::std::string* Error::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Error::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.Error.message)
}

// -------------------------------------------------------------------

// ColumnSchema

// required string name = 1;
inline bool ColumnSchema::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColumnSchema::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColumnSchema::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColumnSchema::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ColumnSchema::name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnSchema.name)
  return *name_;
}
inline void ColumnSchema::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnSchema.name)
}
inline void ColumnSchema::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.ColumnSchema.name)
}
inline void ColumnSchema::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.ColumnSchema.name)
}
inline ::std::string* ColumnSchema::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ColumnSchema.name)
  return name_;
}
inline ::std::string* ColumnSchema::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnSchema::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ColumnSchema.name)
}

// required .com.aliyun.cloudservice.ots2.ColumnType type = 2;
inline bool ColumnSchema::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColumnSchema::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColumnSchema::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColumnSchema::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::com::aliyun::cloudservice::ots2::ColumnType ColumnSchema::type() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnSchema.type)
  return static_cast< ::com::aliyun::cloudservice::ots2::ColumnType >(type_);
}
inline void ColumnSchema::set_type(::com::aliyun::cloudservice::ots2::ColumnType value) {
  assert(::com::aliyun::cloudservice::ots2::ColumnType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnSchema.type)
}

// -------------------------------------------------------------------

// ColumnValue

// required .com.aliyun.cloudservice.ots2.ColumnType type = 1;
inline bool ColumnValue::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColumnValue::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColumnValue::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColumnValue::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::com::aliyun::cloudservice::ots2::ColumnType ColumnValue::type() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.type)
  return static_cast< ::com::aliyun::cloudservice::ots2::ColumnType >(type_);
}
inline void ColumnValue::set_type(::com::aliyun::cloudservice::ots2::ColumnType value) {
  assert(::com::aliyun::cloudservice::ots2::ColumnType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.type)
}

// optional int64 v_int = 2;
inline bool ColumnValue::has_v_int() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColumnValue::set_has_v_int() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColumnValue::clear_has_v_int() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColumnValue::clear_v_int() {
  v_int_ = GOOGLE_LONGLONG(0);
  clear_has_v_int();
}
inline ::google::protobuf::int64 ColumnValue::v_int() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.v_int)
  return v_int_;
}
inline void ColumnValue::set_v_int(::google::protobuf::int64 value) {
  set_has_v_int();
  v_int_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.v_int)
}

// optional string v_string = 3;
inline bool ColumnValue::has_v_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColumnValue::set_has_v_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColumnValue::clear_has_v_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColumnValue::clear_v_string() {
  if (v_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_string_->clear();
  }
  clear_has_v_string();
}
inline const ::std::string& ColumnValue::v_string() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
  return *v_string_;
}
inline void ColumnValue::set_v_string(const ::std::string& value) {
  set_has_v_string();
  if (v_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_string_ = new ::std::string;
  }
  v_string_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
}
inline void ColumnValue::set_v_string(const char* value) {
  set_has_v_string();
  if (v_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_string_ = new ::std::string;
  }
  v_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
}
inline void ColumnValue::set_v_string(const char* value, size_t size) {
  set_has_v_string();
  if (v_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_string_ = new ::std::string;
  }
  v_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
}
inline ::std::string* ColumnValue::mutable_v_string() {
  set_has_v_string();
  if (v_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
  return v_string_;
}
inline ::std::string* ColumnValue::release_v_string() {
  clear_has_v_string();
  if (v_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = v_string_;
    v_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnValue::set_allocated_v_string(::std::string* v_string) {
  if (v_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete v_string_;
  }
  if (v_string) {
    set_has_v_string();
    v_string_ = v_string;
  } else {
    clear_has_v_string();
    v_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ColumnValue.v_string)
}

// optional bool v_bool = 4;
inline bool ColumnValue::has_v_bool() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ColumnValue::set_has_v_bool() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ColumnValue::clear_has_v_bool() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ColumnValue::clear_v_bool() {
  v_bool_ = false;
  clear_has_v_bool();
}
inline bool ColumnValue::v_bool() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.v_bool)
  return v_bool_;
}
inline void ColumnValue::set_v_bool(bool value) {
  set_has_v_bool();
  v_bool_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.v_bool)
}

// optional double v_double = 5;
inline bool ColumnValue::has_v_double() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ColumnValue::set_has_v_double() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ColumnValue::clear_has_v_double() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ColumnValue::clear_v_double() {
  v_double_ = 0;
  clear_has_v_double();
}
inline double ColumnValue::v_double() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.v_double)
  return v_double_;
}
inline void ColumnValue::set_v_double(double value) {
  set_has_v_double();
  v_double_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.v_double)
}

// optional bytes v_binary = 6;
inline bool ColumnValue::has_v_binary() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ColumnValue::set_has_v_binary() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ColumnValue::clear_has_v_binary() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ColumnValue::clear_v_binary() {
  if (v_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_binary_->clear();
  }
  clear_has_v_binary();
}
inline const ::std::string& ColumnValue::v_binary() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
  return *v_binary_;
}
inline void ColumnValue::set_v_binary(const ::std::string& value) {
  set_has_v_binary();
  if (v_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_binary_ = new ::std::string;
  }
  v_binary_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
}
inline void ColumnValue::set_v_binary(const char* value) {
  set_has_v_binary();
  if (v_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_binary_ = new ::std::string;
  }
  v_binary_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
}
inline void ColumnValue::set_v_binary(const void* value, size_t size) {
  set_has_v_binary();
  if (v_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_binary_ = new ::std::string;
  }
  v_binary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
}
inline ::std::string* ColumnValue::mutable_v_binary() {
  set_has_v_binary();
  if (v_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    v_binary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
  return v_binary_;
}
inline ::std::string* ColumnValue::release_v_binary() {
  clear_has_v_binary();
  if (v_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = v_binary_;
    v_binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnValue::set_allocated_v_binary(::std::string* v_binary) {
  if (v_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete v_binary_;
  }
  if (v_binary) {
    set_has_v_binary();
    v_binary_ = v_binary;
  } else {
    clear_has_v_binary();
    v_binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ColumnValue.v_binary)
}

// -------------------------------------------------------------------

// Column

// required string name = 1;
inline bool Column::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Column::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Column::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Column::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Column::name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Column.name)
  return *name_;
}
inline void Column::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.Column.name)
}
inline void Column::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.Column.name)
}
inline void Column::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.Column.name)
}
inline ::std::string* Column::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Column.name)
  return name_;
}
inline ::std::string* Column::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Column::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.Column.name)
}

// required .com.aliyun.cloudservice.ots2.ColumnValue value = 2;
inline bool Column::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Column::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Column::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Column::clear_value() {
  if (value_ != NULL) value_->::com::aliyun::cloudservice::ots2::ColumnValue::Clear();
  clear_has_value();
}
inline const ::com::aliyun::cloudservice::ots2::ColumnValue& Column::value() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Column.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::com::aliyun::cloudservice::ots2::ColumnValue* Column::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::com::aliyun::cloudservice::ots2::ColumnValue;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Column.value)
  return value_;
}
inline ::com::aliyun::cloudservice::ots2::ColumnValue* Column::release_value() {
  clear_has_value();
  ::com::aliyun::cloudservice::ots2::ColumnValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Column::set_allocated_value(::com::aliyun::cloudservice::ots2::ColumnValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.Column.value)
}

// -------------------------------------------------------------------

// Row

// repeated .com.aliyun.cloudservice.ots2.Column primary_key_columns = 1;
inline int Row::primary_key_columns_size() const {
  return primary_key_columns_.size();
}
inline void Row::clear_primary_key_columns() {
  primary_key_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& Row::primary_key_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Row.primary_key_columns)
  return primary_key_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* Row::mutable_primary_key_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Row.primary_key_columns)
  return primary_key_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* Row::add_primary_key_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.Row.primary_key_columns)
  return primary_key_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
Row::primary_key_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.Row.primary_key_columns)
  return primary_key_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
Row::mutable_primary_key_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.Row.primary_key_columns)
  return &primary_key_columns_;
}

// repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 2;
inline int Row::attribute_columns_size() const {
  return attribute_columns_.size();
}
inline void Row::clear_attribute_columns() {
  attribute_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& Row::attribute_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Row.attribute_columns)
  return attribute_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* Row::mutable_attribute_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.Row.attribute_columns)
  return attribute_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* Row::add_attribute_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.Row.attribute_columns)
  return attribute_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
Row::attribute_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.Row.attribute_columns)
  return attribute_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
Row::mutable_attribute_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.Row.attribute_columns)
  return &attribute_columns_;
}

// -------------------------------------------------------------------

// TableMeta

// required string table_name = 1;
inline bool TableMeta::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableMeta::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableMeta::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableMeta::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& TableMeta::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableMeta.table_name)
  return *table_name_;
}
inline void TableMeta::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableMeta.table_name)
}
inline void TableMeta::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableMeta.table_name)
}
inline void TableMeta::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableMeta.table_name)
}
inline ::std::string* TableMeta::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableMeta.table_name)
  return table_name_;
}
inline ::std::string* TableMeta::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableMeta::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.TableMeta.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.ColumnSchema primary_key = 2;
inline int TableMeta::primary_key_size() const {
  return primary_key_.size();
}
inline void TableMeta::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::ColumnSchema& TableMeta::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableMeta.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnSchema* TableMeta::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableMeta.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnSchema* TableMeta::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableMeta.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnSchema >&
TableMeta::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableMeta.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnSchema >*
TableMeta::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableMeta.primary_key)
  return &primary_key_;
}

// -------------------------------------------------------------------

// Condition

// required .com.aliyun.cloudservice.ots2.RowExistenceExpectation row_existence = 1;
inline bool Condition::has_row_existence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Condition::set_has_row_existence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Condition::clear_has_row_existence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Condition::clear_row_existence() {
  row_existence_ = 0;
  clear_has_row_existence();
}
inline ::com::aliyun::cloudservice::ots2::RowExistenceExpectation Condition::row_existence() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.Condition.row_existence)
  return static_cast< ::com::aliyun::cloudservice::ots2::RowExistenceExpectation >(row_existence_);
}
inline void Condition::set_row_existence(::com::aliyun::cloudservice::ots2::RowExistenceExpectation value) {
  assert(::com::aliyun::cloudservice::ots2::RowExistenceExpectation_IsValid(value));
  set_has_row_existence();
  row_existence_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.Condition.row_existence)
}

// -------------------------------------------------------------------

// CapacityUnit

// optional int32 read = 1;
inline bool CapacityUnit::has_read() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CapacityUnit::set_has_read() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CapacityUnit::clear_has_read() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CapacityUnit::clear_read() {
  read_ = 0;
  clear_has_read();
}
inline ::google::protobuf::int32 CapacityUnit::read() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.CapacityUnit.read)
  return read_;
}
inline void CapacityUnit::set_read(::google::protobuf::int32 value) {
  set_has_read();
  read_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.CapacityUnit.read)
}

// optional int32 write = 2;
inline bool CapacityUnit::has_write() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CapacityUnit::set_has_write() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CapacityUnit::clear_has_write() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CapacityUnit::clear_write() {
  write_ = 0;
  clear_has_write();
}
inline ::google::protobuf::int32 CapacityUnit::write() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.CapacityUnit.write)
  return write_;
}
inline void CapacityUnit::set_write(::google::protobuf::int32 value) {
  set_has_write();
  write_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.CapacityUnit.write)
}

// -------------------------------------------------------------------

// ReservedThroughputDetails

// required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
inline bool ReservedThroughputDetails::has_capacity_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReservedThroughputDetails::set_has_capacity_unit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReservedThroughputDetails::clear_has_capacity_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReservedThroughputDetails::clear_capacity_unit() {
  if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
  clear_has_capacity_unit();
}
inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& ReservedThroughputDetails::capacity_unit() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.capacity_unit)
  return capacity_unit_ != NULL ? *capacity_unit_ : *default_instance_->capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ReservedThroughputDetails::mutable_capacity_unit() {
  set_has_capacity_unit();
  if (capacity_unit_ == NULL) capacity_unit_ = new ::com::aliyun::cloudservice::ots2::CapacityUnit;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.capacity_unit)
  return capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ReservedThroughputDetails::release_capacity_unit() {
  clear_has_capacity_unit();
  ::com::aliyun::cloudservice::ots2::CapacityUnit* temp = capacity_unit_;
  capacity_unit_ = NULL;
  return temp;
}
inline void ReservedThroughputDetails::set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit) {
  delete capacity_unit_;
  capacity_unit_ = capacity_unit;
  if (capacity_unit) {
    set_has_capacity_unit();
  } else {
    clear_has_capacity_unit();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.capacity_unit)
}

// required int64 last_increase_time = 2;
inline bool ReservedThroughputDetails::has_last_increase_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReservedThroughputDetails::set_has_last_increase_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReservedThroughputDetails::clear_has_last_increase_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReservedThroughputDetails::clear_last_increase_time() {
  last_increase_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_increase_time();
}
inline ::google::protobuf::int64 ReservedThroughputDetails::last_increase_time() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.last_increase_time)
  return last_increase_time_;
}
inline void ReservedThroughputDetails::set_last_increase_time(::google::protobuf::int64 value) {
  set_has_last_increase_time();
  last_increase_time_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.last_increase_time)
}

// optional int64 last_decrease_time = 3;
inline bool ReservedThroughputDetails::has_last_decrease_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReservedThroughputDetails::set_has_last_decrease_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReservedThroughputDetails::clear_has_last_decrease_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReservedThroughputDetails::clear_last_decrease_time() {
  last_decrease_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_decrease_time();
}
inline ::google::protobuf::int64 ReservedThroughputDetails::last_decrease_time() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.last_decrease_time)
  return last_decrease_time_;
}
inline void ReservedThroughputDetails::set_last_decrease_time(::google::protobuf::int64 value) {
  set_has_last_decrease_time();
  last_decrease_time_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.last_decrease_time)
}

// required int32 number_of_decreases_today = 4;
inline bool ReservedThroughputDetails::has_number_of_decreases_today() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReservedThroughputDetails::set_has_number_of_decreases_today() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReservedThroughputDetails::clear_has_number_of_decreases_today() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReservedThroughputDetails::clear_number_of_decreases_today() {
  number_of_decreases_today_ = 0;
  clear_has_number_of_decreases_today();
}
inline ::google::protobuf::int32 ReservedThroughputDetails::number_of_decreases_today() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.number_of_decreases_today)
  return number_of_decreases_today_;
}
inline void ReservedThroughputDetails::set_number_of_decreases_today(::google::protobuf::int32 value) {
  set_has_number_of_decreases_today();
  number_of_decreases_today_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ReservedThroughputDetails.number_of_decreases_today)
}

// -------------------------------------------------------------------

// ReservedThroughput

// required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
inline bool ReservedThroughput::has_capacity_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReservedThroughput::set_has_capacity_unit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReservedThroughput::clear_has_capacity_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReservedThroughput::clear_capacity_unit() {
  if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
  clear_has_capacity_unit();
}
inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& ReservedThroughput::capacity_unit() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ReservedThroughput.capacity_unit)
  return capacity_unit_ != NULL ? *capacity_unit_ : *default_instance_->capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ReservedThroughput::mutable_capacity_unit() {
  set_has_capacity_unit();
  if (capacity_unit_ == NULL) capacity_unit_ = new ::com::aliyun::cloudservice::ots2::CapacityUnit;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ReservedThroughput.capacity_unit)
  return capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ReservedThroughput::release_capacity_unit() {
  clear_has_capacity_unit();
  ::com::aliyun::cloudservice::ots2::CapacityUnit* temp = capacity_unit_;
  capacity_unit_ = NULL;
  return temp;
}
inline void ReservedThroughput::set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit) {
  delete capacity_unit_;
  capacity_unit_ = capacity_unit;
  if (capacity_unit) {
    set_has_capacity_unit();
  } else {
    clear_has_capacity_unit();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ReservedThroughput.capacity_unit)
}

// -------------------------------------------------------------------

// ConsumedCapacity

// required .com.aliyun.cloudservice.ots2.CapacityUnit capacity_unit = 1;
inline bool ConsumedCapacity::has_capacity_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumedCapacity::set_has_capacity_unit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumedCapacity::clear_has_capacity_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumedCapacity::clear_capacity_unit() {
  if (capacity_unit_ != NULL) capacity_unit_->::com::aliyun::cloudservice::ots2::CapacityUnit::Clear();
  clear_has_capacity_unit();
}
inline const ::com::aliyun::cloudservice::ots2::CapacityUnit& ConsumedCapacity::capacity_unit() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ConsumedCapacity.capacity_unit)
  return capacity_unit_ != NULL ? *capacity_unit_ : *default_instance_->capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ConsumedCapacity::mutable_capacity_unit() {
  set_has_capacity_unit();
  if (capacity_unit_ == NULL) capacity_unit_ = new ::com::aliyun::cloudservice::ots2::CapacityUnit;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ConsumedCapacity.capacity_unit)
  return capacity_unit_;
}
inline ::com::aliyun::cloudservice::ots2::CapacityUnit* ConsumedCapacity::release_capacity_unit() {
  clear_has_capacity_unit();
  ::com::aliyun::cloudservice::ots2::CapacityUnit* temp = capacity_unit_;
  capacity_unit_ = NULL;
  return temp;
}
inline void ConsumedCapacity::set_allocated_capacity_unit(::com::aliyun::cloudservice::ots2::CapacityUnit* capacity_unit) {
  delete capacity_unit_;
  capacity_unit_ = capacity_unit;
  if (capacity_unit) {
    set_has_capacity_unit();
  } else {
    clear_has_capacity_unit();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ConsumedCapacity.capacity_unit)
}

// -------------------------------------------------------------------

// CreateTableRequest

// required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
inline bool CreateTableRequest::has_table_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTableRequest::set_has_table_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTableRequest::clear_has_table_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTableRequest::clear_table_meta() {
  if (table_meta_ != NULL) table_meta_->::com::aliyun::cloudservice::ots2::TableMeta::Clear();
  clear_has_table_meta();
}
inline const ::com::aliyun::cloudservice::ots2::TableMeta& CreateTableRequest::table_meta() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.CreateTableRequest.table_meta)
  return table_meta_ != NULL ? *table_meta_ : *default_instance_->table_meta_;
}
inline ::com::aliyun::cloudservice::ots2::TableMeta* CreateTableRequest::mutable_table_meta() {
  set_has_table_meta();
  if (table_meta_ == NULL) table_meta_ = new ::com::aliyun::cloudservice::ots2::TableMeta;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.CreateTableRequest.table_meta)
  return table_meta_;
}
inline ::com::aliyun::cloudservice::ots2::TableMeta* CreateTableRequest::release_table_meta() {
  clear_has_table_meta();
  ::com::aliyun::cloudservice::ots2::TableMeta* temp = table_meta_;
  table_meta_ = NULL;
  return temp;
}
inline void CreateTableRequest::set_allocated_table_meta(::com::aliyun::cloudservice::ots2::TableMeta* table_meta) {
  delete table_meta_;
  table_meta_ = table_meta;
  if (table_meta) {
    set_has_table_meta();
  } else {
    clear_has_table_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.CreateTableRequest.table_meta)
}

// required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
inline bool CreateTableRequest::has_reserved_throughput() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTableRequest::set_has_reserved_throughput() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTableRequest::clear_has_reserved_throughput() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTableRequest::clear_reserved_throughput() {
  if (reserved_throughput_ != NULL) reserved_throughput_->::com::aliyun::cloudservice::ots2::ReservedThroughput::Clear();
  clear_has_reserved_throughput();
}
inline const ::com::aliyun::cloudservice::ots2::ReservedThroughput& CreateTableRequest::reserved_throughput() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.CreateTableRequest.reserved_throughput)
  return reserved_throughput_ != NULL ? *reserved_throughput_ : *default_instance_->reserved_throughput_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* CreateTableRequest::mutable_reserved_throughput() {
  set_has_reserved_throughput();
  if (reserved_throughput_ == NULL) reserved_throughput_ = new ::com::aliyun::cloudservice::ots2::ReservedThroughput;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.CreateTableRequest.reserved_throughput)
  return reserved_throughput_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* CreateTableRequest::release_reserved_throughput() {
  clear_has_reserved_throughput();
  ::com::aliyun::cloudservice::ots2::ReservedThroughput* temp = reserved_throughput_;
  reserved_throughput_ = NULL;
  return temp;
}
inline void CreateTableRequest::set_allocated_reserved_throughput(::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput) {
  delete reserved_throughput_;
  reserved_throughput_ = reserved_throughput;
  if (reserved_throughput) {
    set_has_reserved_throughput();
  } else {
    clear_has_reserved_throughput();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.CreateTableRequest.reserved_throughput)
}

// -------------------------------------------------------------------

// CreateTableResponse

// -------------------------------------------------------------------

// UpdateTableRequest

// required string table_name = 1;
inline bool UpdateTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTableRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& UpdateTableRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
  return *table_name_;
}
inline void UpdateTableRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
}
inline void UpdateTableRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
}
inline void UpdateTableRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
}
inline ::std::string* UpdateTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
  return table_name_;
}
inline ::std::string* UpdateTableRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateTableRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateTableRequest.table_name)
}

// required .com.aliyun.cloudservice.ots2.ReservedThroughput reserved_throughput = 2;
inline bool UpdateTableRequest::has_reserved_throughput() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTableRequest::set_has_reserved_throughput() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTableRequest::clear_has_reserved_throughput() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateTableRequest::clear_reserved_throughput() {
  if (reserved_throughput_ != NULL) reserved_throughput_->::com::aliyun::cloudservice::ots2::ReservedThroughput::Clear();
  clear_has_reserved_throughput();
}
inline const ::com::aliyun::cloudservice::ots2::ReservedThroughput& UpdateTableRequest::reserved_throughput() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateTableRequest.reserved_throughput)
  return reserved_throughput_ != NULL ? *reserved_throughput_ : *default_instance_->reserved_throughput_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* UpdateTableRequest::mutable_reserved_throughput() {
  set_has_reserved_throughput();
  if (reserved_throughput_ == NULL) reserved_throughput_ = new ::com::aliyun::cloudservice::ots2::ReservedThroughput;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateTableRequest.reserved_throughput)
  return reserved_throughput_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughput* UpdateTableRequest::release_reserved_throughput() {
  clear_has_reserved_throughput();
  ::com::aliyun::cloudservice::ots2::ReservedThroughput* temp = reserved_throughput_;
  reserved_throughput_ = NULL;
  return temp;
}
inline void UpdateTableRequest::set_allocated_reserved_throughput(::com::aliyun::cloudservice::ots2::ReservedThroughput* reserved_throughput) {
  delete reserved_throughput_;
  reserved_throughput_ = reserved_throughput;
  if (reserved_throughput) {
    set_has_reserved_throughput();
  } else {
    clear_has_reserved_throughput();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateTableRequest.reserved_throughput)
}

// -------------------------------------------------------------------

// UpdateTableResponse

// required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 1;
inline bool UpdateTableResponse::has_reserved_throughput_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTableResponse::set_has_reserved_throughput_details() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTableResponse::clear_has_reserved_throughput_details() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTableResponse::clear_reserved_throughput_details() {
  if (reserved_throughput_details_ != NULL) reserved_throughput_details_->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::Clear();
  clear_has_reserved_throughput_details();
}
inline const ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails& UpdateTableResponse::reserved_throughput_details() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateTableResponse.reserved_throughput_details)
  return reserved_throughput_details_ != NULL ? *reserved_throughput_details_ : *default_instance_->reserved_throughput_details_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* UpdateTableResponse::mutable_reserved_throughput_details() {
  set_has_reserved_throughput_details();
  if (reserved_throughput_details_ == NULL) reserved_throughput_details_ = new ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateTableResponse.reserved_throughput_details)
  return reserved_throughput_details_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* UpdateTableResponse::release_reserved_throughput_details() {
  clear_has_reserved_throughput_details();
  ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* temp = reserved_throughput_details_;
  reserved_throughput_details_ = NULL;
  return temp;
}
inline void UpdateTableResponse::set_allocated_reserved_throughput_details(::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details) {
  delete reserved_throughput_details_;
  reserved_throughput_details_ = reserved_throughput_details;
  if (reserved_throughput_details) {
    set_has_reserved_throughput_details();
  } else {
    clear_has_reserved_throughput_details();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateTableResponse.reserved_throughput_details)
}

// -------------------------------------------------------------------

// DescribeTableRequest

// required string table_name = 1;
inline bool DescribeTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DescribeTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DescribeTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DescribeTableRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& DescribeTableRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
  return *table_name_;
}
inline void DescribeTableRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
}
inline void DescribeTableRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
}
inline void DescribeTableRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
}
inline ::std::string* DescribeTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
  return table_name_;
}
inline ::std::string* DescribeTableRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DescribeTableRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DescribeTableRequest.table_name)
}

// -------------------------------------------------------------------

// DescribeTableResponse

// required .com.aliyun.cloudservice.ots2.TableMeta table_meta = 1;
inline bool DescribeTableResponse::has_table_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DescribeTableResponse::set_has_table_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DescribeTableResponse::clear_has_table_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DescribeTableResponse::clear_table_meta() {
  if (table_meta_ != NULL) table_meta_->::com::aliyun::cloudservice::ots2::TableMeta::Clear();
  clear_has_table_meta();
}
inline const ::com::aliyun::cloudservice::ots2::TableMeta& DescribeTableResponse::table_meta() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DescribeTableResponse.table_meta)
  return table_meta_ != NULL ? *table_meta_ : *default_instance_->table_meta_;
}
inline ::com::aliyun::cloudservice::ots2::TableMeta* DescribeTableResponse::mutable_table_meta() {
  set_has_table_meta();
  if (table_meta_ == NULL) table_meta_ = new ::com::aliyun::cloudservice::ots2::TableMeta;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DescribeTableResponse.table_meta)
  return table_meta_;
}
inline ::com::aliyun::cloudservice::ots2::TableMeta* DescribeTableResponse::release_table_meta() {
  clear_has_table_meta();
  ::com::aliyun::cloudservice::ots2::TableMeta* temp = table_meta_;
  table_meta_ = NULL;
  return temp;
}
inline void DescribeTableResponse::set_allocated_table_meta(::com::aliyun::cloudservice::ots2::TableMeta* table_meta) {
  delete table_meta_;
  table_meta_ = table_meta;
  if (table_meta) {
    set_has_table_meta();
  } else {
    clear_has_table_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DescribeTableResponse.table_meta)
}

// required .com.aliyun.cloudservice.ots2.ReservedThroughputDetails reserved_throughput_details = 2;
inline bool DescribeTableResponse::has_reserved_throughput_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DescribeTableResponse::set_has_reserved_throughput_details() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DescribeTableResponse::clear_has_reserved_throughput_details() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DescribeTableResponse::clear_reserved_throughput_details() {
  if (reserved_throughput_details_ != NULL) reserved_throughput_details_->::com::aliyun::cloudservice::ots2::ReservedThroughputDetails::Clear();
  clear_has_reserved_throughput_details();
}
inline const ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails& DescribeTableResponse::reserved_throughput_details() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DescribeTableResponse.reserved_throughput_details)
  return reserved_throughput_details_ != NULL ? *reserved_throughput_details_ : *default_instance_->reserved_throughput_details_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* DescribeTableResponse::mutable_reserved_throughput_details() {
  set_has_reserved_throughput_details();
  if (reserved_throughput_details_ == NULL) reserved_throughput_details_ = new ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DescribeTableResponse.reserved_throughput_details)
  return reserved_throughput_details_;
}
inline ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* DescribeTableResponse::release_reserved_throughput_details() {
  clear_has_reserved_throughput_details();
  ::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* temp = reserved_throughput_details_;
  reserved_throughput_details_ = NULL;
  return temp;
}
inline void DescribeTableResponse::set_allocated_reserved_throughput_details(::com::aliyun::cloudservice::ots2::ReservedThroughputDetails* reserved_throughput_details) {
  delete reserved_throughput_details_;
  reserved_throughput_details_ = reserved_throughput_details;
  if (reserved_throughput_details) {
    set_has_reserved_throughput_details();
  } else {
    clear_has_reserved_throughput_details();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DescribeTableResponse.reserved_throughput_details)
}

// -------------------------------------------------------------------

// ListTableRequest

// -------------------------------------------------------------------

// ListTableResponse

// repeated string table_names = 1;
inline int ListTableResponse::table_names_size() const {
  return table_names_.size();
}
inline void ListTableResponse::clear_table_names() {
  table_names_.Clear();
}
inline const ::std::string& ListTableResponse::table_names(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
  return table_names_.Get(index);
}
inline ::std::string* ListTableResponse::mutable_table_names(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
  return table_names_.Mutable(index);
}
inline void ListTableResponse::set_table_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
  table_names_.Mutable(index)->assign(value);
}
inline void ListTableResponse::set_table_names(int index, const char* value) {
  table_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
}
inline void ListTableResponse::set_table_names(int index, const char* value, size_t size) {
  table_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
}
inline ::std::string* ListTableResponse::add_table_names() {
  return table_names_.Add();
}
inline void ListTableResponse::add_table_names(const ::std::string& value) {
  table_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
}
inline void ListTableResponse::add_table_names(const char* value) {
  table_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
}
inline void ListTableResponse::add_table_names(const char* value, size_t size) {
  table_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListTableResponse::table_names() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
  return table_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListTableResponse::mutable_table_names() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.ListTableResponse.table_names)
  return &table_names_;
}

// -------------------------------------------------------------------

// DeleteTableRequest

// required string table_name = 1;
inline bool DeleteTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteTableRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& DeleteTableRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
  return *table_name_;
}
inline void DeleteTableRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
}
inline void DeleteTableRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
}
inline void DeleteTableRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
}
inline ::std::string* DeleteTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
  return table_name_;
}
inline ::std::string* DeleteTableRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteTableRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DeleteTableRequest.table_name)
}

// -------------------------------------------------------------------

// DeleteTableResponse

// -------------------------------------------------------------------

// GetRowRequest

// required string table_name = 1;
inline bool GetRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& GetRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
  return *table_name_;
}
inline void GetRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
}
inline void GetRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
}
inline void GetRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
}
inline ::std::string* GetRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
  return table_name_;
}
inline ::std::string* GetRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.GetRowRequest.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
inline int GetRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void GetRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& GetRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
GetRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
GetRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRowRequest.primary_key)
  return &primary_key_;
}

// repeated string columns_to_get = 3;
inline int GetRowRequest::columns_to_get_size() const {
  return columns_to_get_.size();
}
inline void GetRowRequest::clear_columns_to_get() {
  columns_to_get_.Clear();
}
inline const ::std::string& GetRowRequest::columns_to_get(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
  return columns_to_get_.Get(index);
}
inline ::std::string* GetRowRequest::mutable_columns_to_get(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
  return columns_to_get_.Mutable(index);
}
inline void GetRowRequest::set_columns_to_get(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
  columns_to_get_.Mutable(index)->assign(value);
}
inline void GetRowRequest::set_columns_to_get(int index, const char* value) {
  columns_to_get_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
}
inline void GetRowRequest::set_columns_to_get(int index, const char* value, size_t size) {
  columns_to_get_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
}
inline ::std::string* GetRowRequest::add_columns_to_get() {
  return columns_to_get_.Add();
}
inline void GetRowRequest::add_columns_to_get(const ::std::string& value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
}
inline void GetRowRequest::add_columns_to_get(const char* value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
}
inline void GetRowRequest::add_columns_to_get(const char* value, size_t size) {
  columns_to_get_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRowRequest::columns_to_get() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
  return columns_to_get_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetRowRequest::mutable_columns_to_get() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRowRequest.columns_to_get)
  return &columns_to_get_;
}

// -------------------------------------------------------------------

// GetRowResponse

// required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
inline bool GetRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& GetRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* GetRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* GetRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void GetRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.GetRowResponse.consumed)
}

// required .com.aliyun.cloudservice.ots2.Row row = 2;
inline bool GetRowResponse::has_row() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRowResponse::set_has_row() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRowResponse::clear_has_row() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRowResponse::clear_row() {
  if (row_ != NULL) row_->::com::aliyun::cloudservice::ots2::Row::Clear();
  clear_has_row();
}
inline const ::com::aliyun::cloudservice::ots2::Row& GetRowResponse::row() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRowResponse.row)
  return row_ != NULL ? *row_ : *default_instance_->row_;
}
inline ::com::aliyun::cloudservice::ots2::Row* GetRowResponse::mutable_row() {
  set_has_row();
  if (row_ == NULL) row_ = new ::com::aliyun::cloudservice::ots2::Row;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRowResponse.row)
  return row_;
}
inline ::com::aliyun::cloudservice::ots2::Row* GetRowResponse::release_row() {
  clear_has_row();
  ::com::aliyun::cloudservice::ots2::Row* temp = row_;
  row_ = NULL;
  return temp;
}
inline void GetRowResponse::set_allocated_row(::com::aliyun::cloudservice::ots2::Row* row) {
  delete row_;
  row_ = row;
  if (row) {
    set_has_row();
  } else {
    clear_has_row();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.GetRowResponse.row)
}

// -------------------------------------------------------------------

// ColumnUpdate

// required .com.aliyun.cloudservice.ots2.OperationType type = 1;
inline bool ColumnUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColumnUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColumnUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColumnUpdate::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::com::aliyun::cloudservice::ots2::OperationType ColumnUpdate::type() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnUpdate.type)
  return static_cast< ::com::aliyun::cloudservice::ots2::OperationType >(type_);
}
inline void ColumnUpdate::set_type(::com::aliyun::cloudservice::ots2::OperationType value) {
  assert(::com::aliyun::cloudservice::ots2::OperationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnUpdate.type)
}

// required string name = 2;
inline bool ColumnUpdate::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColumnUpdate::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColumnUpdate::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColumnUpdate::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ColumnUpdate::name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
  return *name_;
}
inline void ColumnUpdate::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
}
inline void ColumnUpdate::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
}
inline void ColumnUpdate::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
}
inline ::std::string* ColumnUpdate::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
  return name_;
}
inline ::std::string* ColumnUpdate::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnUpdate::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ColumnUpdate.name)
}

// optional .com.aliyun.cloudservice.ots2.ColumnValue value = 3;
inline bool ColumnUpdate::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColumnUpdate::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColumnUpdate::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColumnUpdate::clear_value() {
  if (value_ != NULL) value_->::com::aliyun::cloudservice::ots2::ColumnValue::Clear();
  clear_has_value();
}
inline const ::com::aliyun::cloudservice::ots2::ColumnValue& ColumnUpdate::value() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.ColumnUpdate.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::com::aliyun::cloudservice::ots2::ColumnValue* ColumnUpdate::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::com::aliyun::cloudservice::ots2::ColumnValue;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.ColumnUpdate.value)
  return value_;
}
inline ::com::aliyun::cloudservice::ots2::ColumnValue* ColumnUpdate::release_value() {
  clear_has_value();
  ::com::aliyun::cloudservice::ots2::ColumnValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void ColumnUpdate::set_allocated_value(::com::aliyun::cloudservice::ots2::ColumnValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.ColumnUpdate.value)
}

// -------------------------------------------------------------------

// UpdateRowRequest

// required string table_name = 1;
inline bool UpdateRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& UpdateRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
  return *table_name_;
}
inline void UpdateRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
}
inline void UpdateRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
}
inline void UpdateRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
}
inline ::std::string* UpdateRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
  return table_name_;
}
inline ::std::string* UpdateRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateRowRequest.table_name)
}

// required .com.aliyun.cloudservice.ots2.Condition condition = 2;
inline bool UpdateRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& UpdateRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* UpdateRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* UpdateRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void UpdateRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
inline int UpdateRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void UpdateRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& UpdateRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* UpdateRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* UpdateRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.UpdateRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
UpdateRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.UpdateRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
UpdateRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.UpdateRowRequest.primary_key)
  return &primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 4;
inline int UpdateRowRequest::attribute_columns_size() const {
  return attribute_columns_.size();
}
inline void UpdateRowRequest::clear_attribute_columns() {
  attribute_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::ColumnUpdate& UpdateRowRequest::attribute_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowRequest.attribute_columns)
  return attribute_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* UpdateRowRequest::mutable_attribute_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowRequest.attribute_columns)
  return attribute_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* UpdateRowRequest::add_attribute_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.UpdateRowRequest.attribute_columns)
  return attribute_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >&
UpdateRowRequest::attribute_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.UpdateRowRequest.attribute_columns)
  return attribute_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >*
UpdateRowRequest::mutable_attribute_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.UpdateRowRequest.attribute_columns)
  return &attribute_columns_;
}

// -------------------------------------------------------------------

// UpdateRowResponse

// required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
inline bool UpdateRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& UpdateRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* UpdateRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* UpdateRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void UpdateRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateRowResponse.consumed)
}

// -------------------------------------------------------------------

// PutRowRequest

// required string table_name = 1;
inline bool PutRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& PutRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
  return *table_name_;
}
inline void PutRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
}
inline void PutRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
}
inline void PutRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
}
inline ::std::string* PutRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
  return table_name_;
}
inline ::std::string* PutRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PutRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.PutRowRequest.table_name)
}

// required .com.aliyun.cloudservice.ots2.Condition condition = 2;
inline bool PutRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& PutRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* PutRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* PutRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void PutRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.PutRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
inline int PutRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void PutRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& PutRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.PutRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
PutRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.PutRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
PutRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.PutRowRequest.primary_key)
  return &primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 4;
inline int PutRowRequest::attribute_columns_size() const {
  return attribute_columns_.size();
}
inline void PutRowRequest::clear_attribute_columns() {
  attribute_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& PutRowRequest::attribute_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowRequest.attribute_columns)
  return attribute_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowRequest::mutable_attribute_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowRequest.attribute_columns)
  return attribute_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowRequest::add_attribute_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.PutRowRequest.attribute_columns)
  return attribute_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
PutRowRequest::attribute_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.PutRowRequest.attribute_columns)
  return attribute_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
PutRowRequest::mutable_attribute_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.PutRowRequest.attribute_columns)
  return &attribute_columns_;
}

// -------------------------------------------------------------------

// PutRowResponse

// required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
inline bool PutRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& PutRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* PutRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* PutRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void PutRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.PutRowResponse.consumed)
}

// -------------------------------------------------------------------

// DeleteRowRequest

// required string table_name = 1;
inline bool DeleteRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& DeleteRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
  return *table_name_;
}
inline void DeleteRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
}
inline void DeleteRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
}
inline void DeleteRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
}
inline ::std::string* DeleteRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
  return table_name_;
}
inline ::std::string* DeleteRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DeleteRowRequest.table_name)
}

// required .com.aliyun.cloudservice.ots2.Condition condition = 2;
inline bool DeleteRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& DeleteRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* DeleteRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* DeleteRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void DeleteRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DeleteRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 3;
inline int DeleteRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void DeleteRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& DeleteRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* DeleteRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* DeleteRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.DeleteRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
DeleteRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.DeleteRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
DeleteRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.DeleteRowRequest.primary_key)
  return &primary_key_;
}

// -------------------------------------------------------------------

// DeleteRowResponse

// required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
inline bool DeleteRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& DeleteRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* DeleteRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* DeleteRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void DeleteRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DeleteRowResponse.consumed)
}

// -------------------------------------------------------------------

// RowInBatchGetRowRequest

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 1;
inline int RowInBatchGetRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void RowInBatchGetRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& RowInBatchGetRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* RowInBatchGetRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* RowInBatchGetRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
RowInBatchGetRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
RowInBatchGetRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.primary_key)
  return &primary_key_;
}

// -------------------------------------------------------------------

// TableInBatchGetRowRequest

// required string table_name = 1;
inline bool TableInBatchGetRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableInBatchGetRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableInBatchGetRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableInBatchGetRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& TableInBatchGetRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
  return *table_name_;
}
inline void TableInBatchGetRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
}
inline void TableInBatchGetRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
}
inline void TableInBatchGetRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
}
inline ::std::string* TableInBatchGetRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
  return table_name_;
}
inline ::std::string* TableInBatchGetRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableInBatchGetRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest rows = 2;
inline int TableInBatchGetRowRequest::rows_size() const {
  return rows_.size();
}
inline void TableInBatchGetRowRequest::clear_rows() {
  rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest& TableInBatchGetRowRequest::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.rows)
  return rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest* TableInBatchGetRowRequest::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.rows)
  return rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest* TableInBatchGetRowRequest::add_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest >&
TableInBatchGetRowRequest::rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.rows)
  return rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowRequest >*
TableInBatchGetRowRequest::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.rows)
  return &rows_;
}

// repeated string columns_to_get = 3;
inline int TableInBatchGetRowRequest::columns_to_get_size() const {
  return columns_to_get_.size();
}
inline void TableInBatchGetRowRequest::clear_columns_to_get() {
  columns_to_get_.Clear();
}
inline const ::std::string& TableInBatchGetRowRequest::columns_to_get(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
  return columns_to_get_.Get(index);
}
inline ::std::string* TableInBatchGetRowRequest::mutable_columns_to_get(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
  return columns_to_get_.Mutable(index);
}
inline void TableInBatchGetRowRequest::set_columns_to_get(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
  columns_to_get_.Mutable(index)->assign(value);
}
inline void TableInBatchGetRowRequest::set_columns_to_get(int index, const char* value) {
  columns_to_get_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
}
inline void TableInBatchGetRowRequest::set_columns_to_get(int index, const char* value, size_t size) {
  columns_to_get_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
}
inline ::std::string* TableInBatchGetRowRequest::add_columns_to_get() {
  return columns_to_get_.Add();
}
inline void TableInBatchGetRowRequest::add_columns_to_get(const ::std::string& value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
}
inline void TableInBatchGetRowRequest::add_columns_to_get(const char* value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
}
inline void TableInBatchGetRowRequest::add_columns_to_get(const char* value, size_t size) {
  columns_to_get_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TableInBatchGetRowRequest::columns_to_get() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
  return columns_to_get_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TableInBatchGetRowRequest::mutable_columns_to_get() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.columns_to_get)
  return &columns_to_get_;
}

// -------------------------------------------------------------------

// BatchGetRowRequest

// repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest tables = 1;
inline int BatchGetRowRequest::tables_size() const {
  return tables_.size();
}
inline void BatchGetRowRequest::clear_tables() {
  tables_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest& BatchGetRowRequest::tables(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.BatchGetRowRequest.tables)
  return tables_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest* BatchGetRowRequest::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.BatchGetRowRequest.tables)
  return tables_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest* BatchGetRowRequest::add_tables() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.BatchGetRowRequest.tables)
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest >&
BatchGetRowRequest::tables() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.BatchGetRowRequest.tables)
  return tables_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowRequest >*
BatchGetRowRequest::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.BatchGetRowRequest.tables)
  return &tables_;
}

// -------------------------------------------------------------------

// RowInBatchGetRowResponse

// required bool is_ok = 1 [default = true];
inline bool RowInBatchGetRowResponse::has_is_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RowInBatchGetRowResponse::set_has_is_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RowInBatchGetRowResponse::clear_has_is_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RowInBatchGetRowResponse::clear_is_ok() {
  is_ok_ = true;
  clear_has_is_ok();
}
inline bool RowInBatchGetRowResponse::is_ok() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.is_ok)
  return is_ok_;
}
inline void RowInBatchGetRowResponse::set_is_ok(bool value) {
  set_has_is_ok();
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.is_ok)
}

// optional .com.aliyun.cloudservice.ots2.Error error = 2;
inline bool RowInBatchGetRowResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RowInBatchGetRowResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RowInBatchGetRowResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RowInBatchGetRowResponse::clear_error() {
  if (error_ != NULL) error_->::com::aliyun::cloudservice::ots2::Error::Clear();
  clear_has_error();
}
inline const ::com::aliyun::cloudservice::ots2::Error& RowInBatchGetRowResponse::error() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::com::aliyun::cloudservice::ots2::Error* RowInBatchGetRowResponse::mutable_error() {
  set_has_error();
  if (error_ == NULL) error_ = new ::com::aliyun::cloudservice::ots2::Error;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.error)
  return error_;
}
inline ::com::aliyun::cloudservice::ots2::Error* RowInBatchGetRowResponse::release_error() {
  clear_has_error();
  ::com::aliyun::cloudservice::ots2::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void RowInBatchGetRowResponse::set_allocated_error(::com::aliyun::cloudservice::ots2::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.error)
}

// optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
inline bool RowInBatchGetRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RowInBatchGetRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RowInBatchGetRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RowInBatchGetRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& RowInBatchGetRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* RowInBatchGetRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* RowInBatchGetRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void RowInBatchGetRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.consumed)
}

// optional .com.aliyun.cloudservice.ots2.Row row = 4;
inline bool RowInBatchGetRowResponse::has_row() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RowInBatchGetRowResponse::set_has_row() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RowInBatchGetRowResponse::clear_has_row() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RowInBatchGetRowResponse::clear_row() {
  if (row_ != NULL) row_->::com::aliyun::cloudservice::ots2::Row::Clear();
  clear_has_row();
}
inline const ::com::aliyun::cloudservice::ots2::Row& RowInBatchGetRowResponse::row() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.row)
  return row_ != NULL ? *row_ : *default_instance_->row_;
}
inline ::com::aliyun::cloudservice::ots2::Row* RowInBatchGetRowResponse::mutable_row() {
  set_has_row();
  if (row_ == NULL) row_ = new ::com::aliyun::cloudservice::ots2::Row;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.row)
  return row_;
}
inline ::com::aliyun::cloudservice::ots2::Row* RowInBatchGetRowResponse::release_row() {
  clear_has_row();
  ::com::aliyun::cloudservice::ots2::Row* temp = row_;
  row_ = NULL;
  return temp;
}
inline void RowInBatchGetRowResponse::set_allocated_row(::com::aliyun::cloudservice::ots2::Row* row) {
  delete row_;
  row_ = row;
  if (row) {
    set_has_row();
  } else {
    clear_has_row();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.row)
}

// -------------------------------------------------------------------

// TableInBatchGetRowResponse

// required string table_name = 1;
inline bool TableInBatchGetRowResponse::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableInBatchGetRowResponse::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableInBatchGetRowResponse::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableInBatchGetRowResponse::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& TableInBatchGetRowResponse::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
  return *table_name_;
}
inline void TableInBatchGetRowResponse::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
}
inline void TableInBatchGetRowResponse::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
}
inline void TableInBatchGetRowResponse::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
}
inline ::std::string* TableInBatchGetRowResponse::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
  return table_name_;
}
inline ::std::string* TableInBatchGetRowResponse::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableInBatchGetRowResponse::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse rows = 2;
inline int TableInBatchGetRowResponse::rows_size() const {
  return rows_.size();
}
inline void TableInBatchGetRowResponse::clear_rows() {
  rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse& TableInBatchGetRowResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.rows)
  return rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse* TableInBatchGetRowResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.rows)
  return rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse* TableInBatchGetRowResponse::add_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse >&
TableInBatchGetRowResponse::rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.rows)
  return rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchGetRowResponse >*
TableInBatchGetRowResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.rows)
  return &rows_;
}

// -------------------------------------------------------------------

// BatchGetRowResponse

// repeated .com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse tables = 1;
inline int BatchGetRowResponse::tables_size() const {
  return tables_.size();
}
inline void BatchGetRowResponse::clear_tables() {
  tables_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse& BatchGetRowResponse::tables(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.BatchGetRowResponse.tables)
  return tables_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse* BatchGetRowResponse::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.BatchGetRowResponse.tables)
  return tables_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse* BatchGetRowResponse::add_tables() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.BatchGetRowResponse.tables)
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse >&
BatchGetRowResponse::tables() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.BatchGetRowResponse.tables)
  return tables_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchGetRowResponse >*
BatchGetRowResponse::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.BatchGetRowResponse.tables)
  return &tables_;
}

// -------------------------------------------------------------------

// PutRowInBatchWriteRowRequest

// required .com.aliyun.cloudservice.ots2.Condition condition = 1;
inline bool PutRowInBatchWriteRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRowInBatchWriteRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRowInBatchWriteRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRowInBatchWriteRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& PutRowInBatchWriteRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* PutRowInBatchWriteRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* PutRowInBatchWriteRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void PutRowInBatchWriteRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
inline int PutRowInBatchWriteRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void PutRowInBatchWriteRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& PutRowInBatchWriteRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowInBatchWriteRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowInBatchWriteRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
PutRowInBatchWriteRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
PutRowInBatchWriteRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.primary_key)
  return &primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.Column attribute_columns = 3;
inline int PutRowInBatchWriteRowRequest::attribute_columns_size() const {
  return attribute_columns_.size();
}
inline void PutRowInBatchWriteRowRequest::clear_attribute_columns() {
  attribute_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& PutRowInBatchWriteRowRequest::attribute_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowInBatchWriteRowRequest::mutable_attribute_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* PutRowInBatchWriteRowRequest::add_attribute_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
PutRowInBatchWriteRowRequest::attribute_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
PutRowInBatchWriteRowRequest::mutable_attribute_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.attribute_columns)
  return &attribute_columns_;
}

// -------------------------------------------------------------------

// UpdateRowInBatchWriteRowRequest

// required .com.aliyun.cloudservice.ots2.Condition condition = 1;
inline bool UpdateRowInBatchWriteRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRowInBatchWriteRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRowInBatchWriteRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRowInBatchWriteRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& UpdateRowInBatchWriteRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* UpdateRowInBatchWriteRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* UpdateRowInBatchWriteRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void UpdateRowInBatchWriteRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
inline int UpdateRowInBatchWriteRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void UpdateRowInBatchWriteRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& UpdateRowInBatchWriteRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* UpdateRowInBatchWriteRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* UpdateRowInBatchWriteRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
UpdateRowInBatchWriteRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
UpdateRowInBatchWriteRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.primary_key)
  return &primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.ColumnUpdate attribute_columns = 3;
inline int UpdateRowInBatchWriteRowRequest::attribute_columns_size() const {
  return attribute_columns_.size();
}
inline void UpdateRowInBatchWriteRowRequest::clear_attribute_columns() {
  attribute_columns_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::ColumnUpdate& UpdateRowInBatchWriteRowRequest::attribute_columns(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* UpdateRowInBatchWriteRowRequest::mutable_attribute_columns(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::ColumnUpdate* UpdateRowInBatchWriteRowRequest::add_attribute_columns() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >&
UpdateRowInBatchWriteRowRequest::attribute_columns() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.attribute_columns)
  return attribute_columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::ColumnUpdate >*
UpdateRowInBatchWriteRowRequest::mutable_attribute_columns() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.attribute_columns)
  return &attribute_columns_;
}

// -------------------------------------------------------------------

// DeleteRowInBatchWriteRowRequest

// required .com.aliyun.cloudservice.ots2.Condition condition = 1;
inline bool DeleteRowInBatchWriteRowRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRowInBatchWriteRowRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRowInBatchWriteRowRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRowInBatchWriteRowRequest::clear_condition() {
  if (condition_ != NULL) condition_->::com::aliyun::cloudservice::ots2::Condition::Clear();
  clear_has_condition();
}
inline const ::com::aliyun::cloudservice::ots2::Condition& DeleteRowInBatchWriteRowRequest::condition() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* DeleteRowInBatchWriteRowRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::com::aliyun::cloudservice::ots2::Condition;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.condition)
  return condition_;
}
inline ::com::aliyun::cloudservice::ots2::Condition* DeleteRowInBatchWriteRowRequest::release_condition() {
  clear_has_condition();
  ::com::aliyun::cloudservice::ots2::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void DeleteRowInBatchWriteRowRequest::set_allocated_condition(::com::aliyun::cloudservice::ots2::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.condition)
}

// repeated .com.aliyun.cloudservice.ots2.Column primary_key = 2;
inline int DeleteRowInBatchWriteRowRequest::primary_key_size() const {
  return primary_key_.size();
}
inline void DeleteRowInBatchWriteRowRequest::clear_primary_key() {
  primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& DeleteRowInBatchWriteRowRequest::primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* DeleteRowInBatchWriteRowRequest::mutable_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* DeleteRowInBatchWriteRowRequest::add_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.primary_key)
  return primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
DeleteRowInBatchWriteRowRequest::primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.primary_key)
  return primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
DeleteRowInBatchWriteRowRequest::mutable_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.primary_key)
  return &primary_key_;
}

// -------------------------------------------------------------------

// TableInBatchWriteRowRequest

// required string table_name = 1;
inline bool TableInBatchWriteRowRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableInBatchWriteRowRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableInBatchWriteRowRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableInBatchWriteRowRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& TableInBatchWriteRowRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
  return *table_name_;
}
inline void TableInBatchWriteRowRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
}
inline void TableInBatchWriteRowRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
}
inline void TableInBatchWriteRowRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
}
inline ::std::string* TableInBatchWriteRowRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
  return table_name_;
}
inline ::std::string* TableInBatchWriteRowRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableInBatchWriteRowRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest put_rows = 2;
inline int TableInBatchWriteRowRequest::put_rows_size() const {
  return put_rows_.size();
}
inline void TableInBatchWriteRowRequest::clear_put_rows() {
  put_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest& TableInBatchWriteRowRequest::put_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.put_rows)
  return put_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::mutable_put_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.put_rows)
  return put_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::add_put_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.put_rows)
  return put_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest >&
TableInBatchWriteRowRequest::put_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.put_rows)
  return put_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::PutRowInBatchWriteRowRequest >*
TableInBatchWriteRowRequest::mutable_put_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.put_rows)
  return &put_rows_;
}

// repeated .com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest update_rows = 3;
inline int TableInBatchWriteRowRequest::update_rows_size() const {
  return update_rows_.size();
}
inline void TableInBatchWriteRowRequest::clear_update_rows() {
  update_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest& TableInBatchWriteRowRequest::update_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.update_rows)
  return update_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::mutable_update_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.update_rows)
  return update_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::add_update_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.update_rows)
  return update_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest >&
TableInBatchWriteRowRequest::update_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.update_rows)
  return update_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::UpdateRowInBatchWriteRowRequest >*
TableInBatchWriteRowRequest::mutable_update_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.update_rows)
  return &update_rows_;
}

// repeated .com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest delete_rows = 4;
inline int TableInBatchWriteRowRequest::delete_rows_size() const {
  return delete_rows_.size();
}
inline void TableInBatchWriteRowRequest::clear_delete_rows() {
  delete_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest& TableInBatchWriteRowRequest::delete_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.delete_rows)
  return delete_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::mutable_delete_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.delete_rows)
  return delete_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest* TableInBatchWriteRowRequest::add_delete_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.delete_rows)
  return delete_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest >&
TableInBatchWriteRowRequest::delete_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.delete_rows)
  return delete_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::DeleteRowInBatchWriteRowRequest >*
TableInBatchWriteRowRequest::mutable_delete_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.delete_rows)
  return &delete_rows_;
}

// -------------------------------------------------------------------

// BatchWriteRowRequest

// repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest tables = 1;
inline int BatchWriteRowRequest::tables_size() const {
  return tables_.size();
}
inline void BatchWriteRowRequest::clear_tables() {
  tables_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest& BatchWriteRowRequest::tables(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.BatchWriteRowRequest.tables)
  return tables_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest* BatchWriteRowRequest::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.BatchWriteRowRequest.tables)
  return tables_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest* BatchWriteRowRequest::add_tables() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.BatchWriteRowRequest.tables)
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest >&
BatchWriteRowRequest::tables() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.BatchWriteRowRequest.tables)
  return tables_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowRequest >*
BatchWriteRowRequest::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.BatchWriteRowRequest.tables)
  return &tables_;
}

// -------------------------------------------------------------------

// RowInBatchWriteRowResponse

// required bool is_ok = 1 [default = true];
inline bool RowInBatchWriteRowResponse::has_is_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RowInBatchWriteRowResponse::set_has_is_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RowInBatchWriteRowResponse::clear_has_is_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RowInBatchWriteRowResponse::clear_is_ok() {
  is_ok_ = true;
  clear_has_is_ok();
}
inline bool RowInBatchWriteRowResponse::is_ok() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.is_ok)
  return is_ok_;
}
inline void RowInBatchWriteRowResponse::set_is_ok(bool value) {
  set_has_is_ok();
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.is_ok)
}

// optional .com.aliyun.cloudservice.ots2.Error error = 2;
inline bool RowInBatchWriteRowResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RowInBatchWriteRowResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RowInBatchWriteRowResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RowInBatchWriteRowResponse::clear_error() {
  if (error_ != NULL) error_->::com::aliyun::cloudservice::ots2::Error::Clear();
  clear_has_error();
}
inline const ::com::aliyun::cloudservice::ots2::Error& RowInBatchWriteRowResponse::error() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::com::aliyun::cloudservice::ots2::Error* RowInBatchWriteRowResponse::mutable_error() {
  set_has_error();
  if (error_ == NULL) error_ = new ::com::aliyun::cloudservice::ots2::Error;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.error)
  return error_;
}
inline ::com::aliyun::cloudservice::ots2::Error* RowInBatchWriteRowResponse::release_error() {
  clear_has_error();
  ::com::aliyun::cloudservice::ots2::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void RowInBatchWriteRowResponse::set_allocated_error(::com::aliyun::cloudservice::ots2::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.error)
}

// optional .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 3;
inline bool RowInBatchWriteRowResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RowInBatchWriteRowResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RowInBatchWriteRowResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RowInBatchWriteRowResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& RowInBatchWriteRowResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* RowInBatchWriteRowResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* RowInBatchWriteRowResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void RowInBatchWriteRowResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.consumed)
}

// -------------------------------------------------------------------

// TableInBatchWriteRowResponse

// required string table_name = 1;
inline bool TableInBatchWriteRowResponse::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableInBatchWriteRowResponse::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableInBatchWriteRowResponse::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableInBatchWriteRowResponse::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& TableInBatchWriteRowResponse::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
  return *table_name_;
}
inline void TableInBatchWriteRowResponse::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
}
inline void TableInBatchWriteRowResponse::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
}
inline void TableInBatchWriteRowResponse::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
}
inline ::std::string* TableInBatchWriteRowResponse::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
  return table_name_;
}
inline ::std::string* TableInBatchWriteRowResponse::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableInBatchWriteRowResponse::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.table_name)
}

// repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse put_rows = 2;
inline int TableInBatchWriteRowResponse::put_rows_size() const {
  return put_rows_.size();
}
inline void TableInBatchWriteRowResponse::clear_put_rows() {
  put_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& TableInBatchWriteRowResponse::put_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.put_rows)
  return put_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::mutable_put_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.put_rows)
  return put_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::add_put_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.put_rows)
  return put_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
TableInBatchWriteRowResponse::put_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.put_rows)
  return put_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
TableInBatchWriteRowResponse::mutable_put_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.put_rows)
  return &put_rows_;
}

// repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse update_rows = 3;
inline int TableInBatchWriteRowResponse::update_rows_size() const {
  return update_rows_.size();
}
inline void TableInBatchWriteRowResponse::clear_update_rows() {
  update_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& TableInBatchWriteRowResponse::update_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.update_rows)
  return update_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::mutable_update_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.update_rows)
  return update_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::add_update_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.update_rows)
  return update_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
TableInBatchWriteRowResponse::update_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.update_rows)
  return update_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
TableInBatchWriteRowResponse::mutable_update_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.update_rows)
  return &update_rows_;
}

// repeated .com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse delete_rows = 4;
inline int TableInBatchWriteRowResponse::delete_rows_size() const {
  return delete_rows_.size();
}
inline void TableInBatchWriteRowResponse::clear_delete_rows() {
  delete_rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse& TableInBatchWriteRowResponse::delete_rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.delete_rows)
  return delete_rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::mutable_delete_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.delete_rows)
  return delete_rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse* TableInBatchWriteRowResponse::add_delete_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.delete_rows)
  return delete_rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >&
TableInBatchWriteRowResponse::delete_rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.delete_rows)
  return delete_rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::RowInBatchWriteRowResponse >*
TableInBatchWriteRowResponse::mutable_delete_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.delete_rows)
  return &delete_rows_;
}

// -------------------------------------------------------------------

// BatchWriteRowResponse

// repeated .com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse tables = 1;
inline int BatchWriteRowResponse::tables_size() const {
  return tables_.size();
}
inline void BatchWriteRowResponse::clear_tables() {
  tables_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse& BatchWriteRowResponse::tables(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.BatchWriteRowResponse.tables)
  return tables_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse* BatchWriteRowResponse::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.BatchWriteRowResponse.tables)
  return tables_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse* BatchWriteRowResponse::add_tables() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.BatchWriteRowResponse.tables)
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse >&
BatchWriteRowResponse::tables() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.BatchWriteRowResponse.tables)
  return tables_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::TableInBatchWriteRowResponse >*
BatchWriteRowResponse::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.BatchWriteRowResponse.tables)
  return &tables_;
}

// -------------------------------------------------------------------

// GetRangeRequest

// required string table_name = 1;
inline bool GetRangeRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRangeRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRangeRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRangeRequest::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& GetRangeRequest::table_name() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
  return *table_name_;
}
inline void GetRangeRequest::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
}
inline void GetRangeRequest::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
}
inline void GetRangeRequest::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
}
inline ::std::string* GetRangeRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
  return table_name_;
}
inline ::std::string* GetRangeRequest::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetRangeRequest::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.GetRangeRequest.table_name)
}

// required .com.aliyun.cloudservice.ots2.Direction direction = 2;
inline bool GetRangeRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRangeRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRangeRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRangeRequest::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::com::aliyun::cloudservice::ots2::Direction GetRangeRequest::direction() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.direction)
  return static_cast< ::com::aliyun::cloudservice::ots2::Direction >(direction_);
}
inline void GetRangeRequest::set_direction(::com::aliyun::cloudservice::ots2::Direction value) {
  assert(::com::aliyun::cloudservice::ots2::Direction_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRangeRequest.direction)
}

// repeated string columns_to_get = 3;
inline int GetRangeRequest::columns_to_get_size() const {
  return columns_to_get_.size();
}
inline void GetRangeRequest::clear_columns_to_get() {
  columns_to_get_.Clear();
}
inline const ::std::string& GetRangeRequest::columns_to_get(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
  return columns_to_get_.Get(index);
}
inline ::std::string* GetRangeRequest::mutable_columns_to_get(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
  return columns_to_get_.Mutable(index);
}
inline void GetRangeRequest::set_columns_to_get(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
  columns_to_get_.Mutable(index)->assign(value);
}
inline void GetRangeRequest::set_columns_to_get(int index, const char* value) {
  columns_to_get_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
}
inline void GetRangeRequest::set_columns_to_get(int index, const char* value, size_t size) {
  columns_to_get_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
}
inline ::std::string* GetRangeRequest::add_columns_to_get() {
  return columns_to_get_.Add();
}
inline void GetRangeRequest::add_columns_to_get(const ::std::string& value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
}
inline void GetRangeRequest::add_columns_to_get(const char* value) {
  columns_to_get_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
}
inline void GetRangeRequest::add_columns_to_get(const char* value, size_t size) {
  columns_to_get_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRangeRequest::columns_to_get() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
  return columns_to_get_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetRangeRequest::mutable_columns_to_get() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRangeRequest.columns_to_get)
  return &columns_to_get_;
}

// optional int32 limit = 4;
inline bool GetRangeRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetRangeRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetRangeRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetRangeRequest::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 GetRangeRequest::limit() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.limit)
  return limit_;
}
inline void GetRangeRequest::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.aliyun.cloudservice.ots2.GetRangeRequest.limit)
}

// repeated .com.aliyun.cloudservice.ots2.Column inclusive_start_primary_key = 5;
inline int GetRangeRequest::inclusive_start_primary_key_size() const {
  return inclusive_start_primary_key_.size();
}
inline void GetRangeRequest::clear_inclusive_start_primary_key() {
  inclusive_start_primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& GetRangeRequest::inclusive_start_primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.inclusive_start_primary_key)
  return inclusive_start_primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeRequest::mutable_inclusive_start_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeRequest.inclusive_start_primary_key)
  return inclusive_start_primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeRequest::add_inclusive_start_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRangeRequest.inclusive_start_primary_key)
  return inclusive_start_primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
GetRangeRequest::inclusive_start_primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRangeRequest.inclusive_start_primary_key)
  return inclusive_start_primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
GetRangeRequest::mutable_inclusive_start_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRangeRequest.inclusive_start_primary_key)
  return &inclusive_start_primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.Column exclusive_end_primary_key = 6;
inline int GetRangeRequest::exclusive_end_primary_key_size() const {
  return exclusive_end_primary_key_.size();
}
inline void GetRangeRequest::clear_exclusive_end_primary_key() {
  exclusive_end_primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& GetRangeRequest::exclusive_end_primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeRequest.exclusive_end_primary_key)
  return exclusive_end_primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeRequest::mutable_exclusive_end_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeRequest.exclusive_end_primary_key)
  return exclusive_end_primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeRequest::add_exclusive_end_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRangeRequest.exclusive_end_primary_key)
  return exclusive_end_primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
GetRangeRequest::exclusive_end_primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRangeRequest.exclusive_end_primary_key)
  return exclusive_end_primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
GetRangeRequest::mutable_exclusive_end_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRangeRequest.exclusive_end_primary_key)
  return &exclusive_end_primary_key_;
}

// -------------------------------------------------------------------

// GetRangeResponse

// required .com.aliyun.cloudservice.ots2.ConsumedCapacity consumed = 1;
inline bool GetRangeResponse::has_consumed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRangeResponse::set_has_consumed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRangeResponse::clear_has_consumed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRangeResponse::clear_consumed() {
  if (consumed_ != NULL) consumed_->::com::aliyun::cloudservice::ots2::ConsumedCapacity::Clear();
  clear_has_consumed();
}
inline const ::com::aliyun::cloudservice::ots2::ConsumedCapacity& GetRangeResponse::consumed() const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeResponse.consumed)
  return consumed_ != NULL ? *consumed_ : *default_instance_->consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* GetRangeResponse::mutable_consumed() {
  set_has_consumed();
  if (consumed_ == NULL) consumed_ = new ::com::aliyun::cloudservice::ots2::ConsumedCapacity;
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeResponse.consumed)
  return consumed_;
}
inline ::com::aliyun::cloudservice::ots2::ConsumedCapacity* GetRangeResponse::release_consumed() {
  clear_has_consumed();
  ::com::aliyun::cloudservice::ots2::ConsumedCapacity* temp = consumed_;
  consumed_ = NULL;
  return temp;
}
inline void GetRangeResponse::set_allocated_consumed(::com::aliyun::cloudservice::ots2::ConsumedCapacity* consumed) {
  delete consumed_;
  consumed_ = consumed;
  if (consumed) {
    set_has_consumed();
  } else {
    clear_has_consumed();
  }
  // @@protoc_insertion_point(field_set_allocated:com.aliyun.cloudservice.ots2.GetRangeResponse.consumed)
}

// repeated .com.aliyun.cloudservice.ots2.Column next_start_primary_key = 2;
inline int GetRangeResponse::next_start_primary_key_size() const {
  return next_start_primary_key_.size();
}
inline void GetRangeResponse::clear_next_start_primary_key() {
  next_start_primary_key_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Column& GetRangeResponse::next_start_primary_key(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeResponse.next_start_primary_key)
  return next_start_primary_key_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeResponse::mutable_next_start_primary_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeResponse.next_start_primary_key)
  return next_start_primary_key_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Column* GetRangeResponse::add_next_start_primary_key() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRangeResponse.next_start_primary_key)
  return next_start_primary_key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >&
GetRangeResponse::next_start_primary_key() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRangeResponse.next_start_primary_key)
  return next_start_primary_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Column >*
GetRangeResponse::mutable_next_start_primary_key() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRangeResponse.next_start_primary_key)
  return &next_start_primary_key_;
}

// repeated .com.aliyun.cloudservice.ots2.Row rows = 3;
inline int GetRangeResponse::rows_size() const {
  return rows_.size();
}
inline void GetRangeResponse::clear_rows() {
  rows_.Clear();
}
inline const ::com::aliyun::cloudservice::ots2::Row& GetRangeResponse::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.aliyun.cloudservice.ots2.GetRangeResponse.rows)
  return rows_.Get(index);
}
inline ::com::aliyun::cloudservice::ots2::Row* GetRangeResponse::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.aliyun.cloudservice.ots2.GetRangeResponse.rows)
  return rows_.Mutable(index);
}
inline ::com::aliyun::cloudservice::ots2::Row* GetRangeResponse::add_rows() {
  // @@protoc_insertion_point(field_add:com.aliyun.cloudservice.ots2.GetRangeResponse.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Row >&
GetRangeResponse::rows() const {
  // @@protoc_insertion_point(field_list:com.aliyun.cloudservice.ots2.GetRangeResponse.rows)
  return rows_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::aliyun::cloudservice::ots2::Row >*
GetRangeResponse::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.aliyun.cloudservice.ots2.GetRangeResponse.rows)
  return &rows_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ots2
}  // namespace cloudservice
}  // namespace aliyun
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::aliyun::cloudservice::ots2::ColumnType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::aliyun::cloudservice::ots2::ColumnType>() {
  return ::com::aliyun::cloudservice::ots2::ColumnType_descriptor();
}
template <> struct is_proto_enum< ::com::aliyun::cloudservice::ots2::RowExistenceExpectation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::aliyun::cloudservice::ots2::RowExistenceExpectation>() {
  return ::com::aliyun::cloudservice::ots2::RowExistenceExpectation_descriptor();
}
template <> struct is_proto_enum< ::com::aliyun::cloudservice::ots2::OperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::aliyun::cloudservice::ots2::OperationType>() {
  return ::com::aliyun::cloudservice::ots2::OperationType_descriptor();
}
template <> struct is_proto_enum< ::com::aliyun::cloudservice::ots2::Direction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::aliyun::cloudservice::ots2::Direction>() {
  return ::com::aliyun::cloudservice::ots2::Direction_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ots_5fprotocol_5f2_2eproto__INCLUDED
